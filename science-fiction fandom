 SCIENCE-FICTION FANDOM n. Another voluntary subculture having a very heavy
overlap with hackerdom; most hackers read SF and/or fantasy fiction avidly,
and many go to `cons' (SF conventions) or are involved in fandom-connected
activities like the Society for Creative Anachronism. Some hacker slang
originated in SF fandom; see <defenestration>, <great-wall>, <cyberpunk>, <h
infix>, <ha ha only serious>, <IMHO>, <mundane>, <neep-neep>, <Real Soon
Now>. Additionally, the jargon terms <cowboy>, <cyberspace>, <de-rez>, <go
flatline>, <ice>, <virus>, <wetware>, <wirehead> and <worm> originated in SF
itself. <scram switch> [from the nuclear power industry] n. An
emergency-power-off switch (see <Big Red Switch>), esp. one positioned to be
easily hit by evacuating personnel. In general, this is *not* something you
frob lightly; these are installed in a <dinosaur pen> for use in case of
electrical fire or in case some luckless <field servoid> should put himself
between across 120 volts while tinkering. <scratch> 1. [from "scratchpad"]
adj. A device or recording medium attached to a machine for testing or
temporary-use purposes; one which can be <scribbled> on without loss. Usually
in the combining forms "scratch memory", "scratch disk", "scratch tape",
"scratch volume". see <scratch monkey>. 2. [primarily IBM] vt. To delete (as
in a file). <scratch monkey> n. As in, "Before testing or reconfiguring,
always mount a", a proverb used to advise caution when dealing with
irreplaceable data or devices. Used to refer to any expendable device or
scratch volume hooked to a computer, in memory of Mabel, the Swimming Wonder
Monkey who expired when a computer vendor PM'd a machine which was regulating
the gas mixture that the monkey was breathing at the time. see Appendix A.
See <scratch>. <screw> [MIT] n. A <lose>, usually in software. Especially
used for user-visible misbehavior caused by a bug or misfeature. <screwage>
/skroo'@j/ n. Like <lossage> but connotes that the failure is due to a
designed-in misfeature rather than a simple inadequacy or mere bug.
<scribble> n. To modify a data structure in a random and unintentionally
destructive way. "Bletch! Somebody's disk-compactor program went berserk and
scribbled on the i-node table." "It was working fine until one of the
allocation routines scribbled on low core." Synonymous with <trash>; compare
<mung>, which conveys a bit more intention, and <mangle>, which is more
violent and final. <script> n. 1. A program written in <shell>; a "batch
file" (see <batch>). A set of instructions which can be fed to a machine as
though the user had typed them. 2. A transcript of some interaction with a
machine. <scrog> /skrog/ [Bell Labs] vt. To damage, trash or corrupt a data
structure. "The cblock got scrogged." Also reported as `skrog', and ascribed
to "The Wizard of Id" comix. Equivalent to <scribble> or <mangle> <scrozzle>
/skroz'l/ vt. Used when a self-modifying code segment runs incorrectly and
corrupts the running program, or vital data. "The damn compiler scrozzled
itself again!" <SCSI> /ess see ess ie/ n. Small Computer System Interface is
a system-level interface between a computer and intelligent devices.
Typically annotated in literature with `sexy' (/sek'see/) and `scuzzy'
(/skuhz'zee/) as pronunciation guides...the latter being the predominating
form, much to the dismay of the designers and their marketing people.
<search-and-destroy mode> n. Hackerism for the search-and-replace facility in
an editor, so called because an incautiously chosen match pattern can cause
<infinite> damage. <second-system effect> n. When designing the successor to
a relatively small, elegant and successful system, there is a tendency to
become grandiose in one's success and perpetrate an <elephantine>
feature-laden monstrosity. The term was first used by Fred Brooks in his
classic book `The Mythical Man-Month'. It described the jump from a set of
nice, simple, operating monitors on the IBM 70xx series to OS/360 on the 360
series. <segfault> n.,vi. Syn for <segment>, <seggie>. <seggie> /seg'ee/
[UNIX] n. Shorthand for <segmentation fault> reported from Britain. <segment>
/seg'ment/ vi. To experience a <segmentation fault>. Confusingly, this is
often accented on the first syllable rather than on the second as for
mainstream v. segment; this is because it's actually a noun shorthand that
has been verbed. <segmentation fault (or violation)> n. [UNIX] 1. Error in
which a running program attempts to access memory not allocated to it and
<core dump> with a segment violation error. 2. To lose a train of thought or
a line of reasoning. Also uttered as an exclamation at the point of
befuddlement. <segv> /seg'vee/ n.,vi. Yet another synonym for <segmentation
fault>. <self-reference> n. see <self-reference>. <selvage> /sel'v@j/ [from
sewing] n. see <chad> (sense #1). <semi> /se'mee/ 1. n. Abbreviation for
`semicolon', when speaking. "Commands to <grind> are prefixed by
semi-semi-star" means that the prefix is `;;*', not 1/4 of a star. 2. Prefix
with words such as `immediately', as a qualifier. "When is the system coming
up?" "Semi-immediately." (That is, maybe not for an hour). "We did consider
that possibility semi-seriously." see also <infinite>. <senior bit> [IBM] n.
Syn. <meta bit>. <server> n. A kind of <daemon> which performs a service for
the requester, which often runs on a computer other than the one on which the
server runs. A particularly common term on the Internet, which is rife with
`name servers' `domain servers' `news servers' `finger servers' and the like.
<SEX> [Sun User's Group & elsewhere] n. 1. Software EXchange. A technique
invented by the blue-green algae hundreds of millions of years ago to speed
up their evolution, which had been terribly slow up until then. Today, SEX
parties are popular among hackers and others. 2. The rather Freudian mnemonic
often used for Sign Extend, a machine instruction found in many
architectures. Amusingly, the Intel 8048 (the microcontroller used in IBM PC
keyboards) is missing straight SEX but has logical-or and logical-and
instructions ORL and ANL. <shareware> n. <freeware> for which the author
requests some payment, usually in the accompanying documentation files or in
an announcement made by the software itself. Such payment may or may not buy
additional support or functionality. see <guiltware>, <crippleware>.
<shelfware> n. Software purchased on a whim (by an individual user) or in
accordance with policy (by a corporation or government) but not actually
required for any particular use. Therefore, it often ends up on some shelf.
<shell> [UNIX, now used elsewhere] n. 1. The command interpreter used to pass
commands to an operating system; so called because it's the part of the
operating system that interfaces to the outside world. 2. More generally, any
interface program which mediates access to a special resource or <server> for
convenience, efficiency or security reasons; for this meaning, the usage is
usually "a shell around" whatever. This sort of program is also called a
"wrapper". <shell out> [UNIX] n. To spawn an interactive <subshell> from
within a program such as a mailer or editor. "Bang foo runs foo in a
subshell, while bang alone shells out." <shift left (or right) logical> [from
any of various machines' instruction sets] 1. vi. To move oneself to the left
(right). To move out of the way. 2. imper. "Get out of that (my) seat! You
can move to that empty one to the left (right)." Usage: often used without
the "logical", or as "left shift" instead of "shift left". Sometimes heard as
LSH /l@sh/, from the PDP-10 instruction set. <shitogram> /shit'oh-gram/ n. A
*really* nasty piece of email. Compare <nastygram>, <flame>. <short card> n.
A half-length IBM PC expansion card or adapter that will fit in one of the
two short slots located towards the right rear of a standard chassis (tucked
behind the floppy disk drives). see also <tall card>. <shotgun debugging> n.
The software equivalent of <Easter egging>; the making of relatively
undirected changes to software in the hope that a bug will be preturbed out
of existence. This almost never works, and usually introduces more bugs.
<showstopper> n. A hardware or (especially) software bug that makes an
implementation effectively unusable; one which absolutely has to be fixed
before development can go on. Opposite in connotation from its original
theatrical use, whic referred to something stunningly "good". <shriek> see
<excl>. Occasional CMU usage, also in common use among <APL> fans and
mathematicians, especially category theorists. <sidecar> n. Syn. <slap on the
side>. Esp. used add-ons for the late and unlamented IBM PCjr. <sig block>
/sig blok/ [UNIX; often written ".sig" there] n. Short for `signature', used
specifically to refer to the electronic signature block which most UNIX mail-
and news-posting software will allow you to automatically append to outgoing
mail and news. The composition of one's sig can be quite an art form,
including an ASCII logo or one's choice of witty sayings (see <sig quote>);
but many consider large sigs a waste of <bandwidth>, and it has been observed
that the size of one's sig block is usually inversely proportional to one's
longevity and level of prestige on the net. <sig quote> /sig kwoht/ [USENET]
n. A maxim, quote, proverb, joke or slogan embedded in one's <SIG> and
intended to convey something of one's philosophical stance, pet peeves, or
sense of humor. "He *must* be a Democrat --- he posted a sig quote from Dan
Quayle." <signal to noise ratio> [from analogue electronics] n. Used by
hackers in a generalization of its technical meaning. `Signal' refers to
useful information conveyed by some communications medium and `noise' to
anything else on that medium. Hence a low ratio implies that it is not worth
paying attention to the medium in question. Figures for such metaphorical
ratios are never given. The term is most often applied to <USENET> newsgroups
during <flame wars>. Compare <bandwidth>. see also <coefficient of x>.
<silicon> n. Hardware, esp. ICs or microprocessor-based computer systems
(compare <iron>). Contrasted with software. <silicon foundry> A company that
<fab>s chips to the designs of others. As of the late 1980s, the existance of
silicon foundries made it much easier for hardware design startup companies
to come into being. The downside of using a silicon foundry is that the
distance from the actual chip fabrication processes leads to weaker
designers. This is somewhat analogous to the use of a <HLL> versus coding in
assembler. <silly walk> [from Monty Python] vi. A ridiculous procedure
required to accomplish a task. Like <grovel>, but more <random> and humorous.
"I had to silly-walk through half the /usr directories to find the maps
file." <silo> n. The FIFO input-character buffer in an RS-232 line card. So
called from DEC terminology used on DH and DZ line cards for the VAX and
PDP-11. <Silver Book> n. Jensen & Wirth's infamous `Pascal User Manual and
Report', so called because of the silver cover of the widely-distributed
Springer-Verlag second edition of 1978 (ISBN 0-387-90144-2). see <Red Book>,
<Green Book>, <Blue Book>, <White Book>, <Purple Book>, <Orange Book>,
<Pink-Shirt Book>, <Dragon Book>, <Aluminum Book> <since time T equals minus
infinity> adj. A long time ago; for as long as anyone can remember; at the
time that some particular frob was first designed. Sometimes the word `time'
is omitted if there is no danger of confusing `T' as a time with <T> meaning
`yes'. see also <time T>. <sitename> [UNIX/Internet] n. The unique electronic
name of a computer system, used to identify it in UUCP mail, USENET or other
forms of electronic information interchange. The folklore interest of
sitenames stems from the creativity and humor they often display.
Interpreting a sitename is not unlike interpreting a vanity license plate;
one has to mentally unpack it, allowing for mono-case and length restrictions
and the lack of whitespace. Hacker tradition deprecates dull,
institutional-sounding names in favor of punchy, humorous and clever coinages
(except that it is considered appropriate for the official public gateway
machine of an organization to bear the organization's name or acronym).
Mythological references, cartoon characters, animal names, and allusions to
SF or fantasy literature are probably the most popular sources for sitenames
(in roughly that order). see also <network address>. <skulker> n. Syn.
<prowler>. <slap on the side> adj. (also called a <sidecar>) A type of
external expansion marketed by computer manufacturers (e.g. Commodore for
their Amiga 500/1000 series and IBM for the hideous failure they called
`PCJr'). Various SOTS boxes provided necessities such as memory, hard drive
controllers, and conventional expansion slots. <sleep> vi. On a timesharing
system, a process which relinquishes its claim on the scheduler until some
given event occurs or a specified time delay elapses is said to "go to
sleep". <slim> n. A small, derivative change (e.g. to code). <slop> n. 1. A
one-sided <fudge factor>, that is, an allowance for error but only in one of
two directions. For example, if you need a piece of wire ten feet long and
have to guess when you cut it, you make very sure to cut it too long, by a
large amount if necessary, rather than too short by even a little bit,
because you can always cut off the slop but you can't paste it back on again.
When discrete quantities are involved, slop is often introduced to avoid the
possibility of a <fencepost error>. 2. n. The ratio of the size code
generated by a compiler to the size of equivalent <hand-hacked> assembler
code, minus 1; i.e., the space (or maybe time) you lose because you didn't do
it yourself. This number is often used as a measure of the goodness of a
compiler; slop below 5% is very good, and 10% is usually acceptable for most
purposes. With modern compiler technology, esp. on RISC machines, the
compiler's slop may actually be *negative*; that is, humans may be unable to
generate code as good. This is one of the reasons assembler programming is no
longer common. <slopsucker> n. A lowest-priority task that must wait around
until everything else has `had its fill' of machine resources. Only when the
machine would otherwise be idle is the task allowed to `suck up the slop.'
Also called a <hungry puppy>. One common variety of slopsucker hunts for
large prime numbers. Compare <background>. <sluggy> /sluhg'ee/ adj. Hackish
variant of `sluggish'. Used only of people, esp. someone just waking up after
a long <gronk out>. <slurp> vt. To read a large data file entirely into core
before working on it. This may be contrasted with the strategy of reading a
small piece at a time, processing it, and then reading the next piece. "This
program slurps in a 1K-by-1K matrix and does an FFT." <smart> adj. Said of a
program that does the <Right Thing> in a wide variety of complicated
circumstances. There is a difference between calling a program smart and
calling it intelligent; in particular, there do not exist any intelligent
programs (yet). Compare <robust> (smart programs can be <brittle>). <smart
terminal> n. A terminal that has enough computing capability to perform
useful work independently of the main computer. The development of
workstations and personal computers has made this term and the product it
describes semi-obsolescent, but one may still hear variants of the phrase
"act like a smart terminal" used to describe the behavior of workstations/PCs
with respect to programs that execute almost entirely out of a remote
<server>'s storage, using said devices as displays. Compare <glass tty>.
There's a classic quote from Rob Pike (inventor of the <blit> terminal): "A
smart terminal is not a smart*ass* terminal, but rather a terminal you can
educate." This illustrates a common design problem; the attempt to make
peripherals (or anything else) intelligent sometimes results in finicky,
rigid "special features" that become just so much dead weight if you try to
use the device in any way the designer didn't anticipate. Flexibility and
programmability, on the other hand, are *really* smart. <smash case> vi. To
lose or obliterate the uppercase/lowercase distinction in text input. "MS-DOS
will automatically smash case in the names of all the files you create." The
term <fold case> is nearly synonymous but implies that the action is
deliberate. <smash the stack> [C programming] n. On many C implementations it
is possible to corrupt the execution stack by writing past the end of an
array declared auto in a routine. Code that does this is said to "smash the
stack", and can cause return from the routine to jump to a random text
address. This can produce some of the most insidious data-dependent bugs
known to mankind. Variants include "trash" the stack, <scribble> the stack,
<mangle> the stack; <mung> the stack is not used as this is never done
intentionally. see <spam>; see also <aliasing bug>, <fandango on core>,
<memory leak>, <precedence lossage>, <overrun screw>. <smiley> n. see
<emoticon>. <smoke test> n. 1. A rudimentary form of testing applied to
electronic equipment following repair or reconfiguration in which AC power is
applied and during which the tester checks for sparks, smoke, or other
dramatic signs of fundamental failure. 2. By extension, the first run of a
piece of software after construction or a critical change. see <magic smoke>.
<smoking clover> [ITS] n. A <display hack> originally due to Bill Gosper.
Many convergent lines are drawn on a color monitor in AOS mode (so that every
pixel struck has its color incremented). The color map is then rotated. The
lines all have one endpoint in the middle of the screen; the other endpoints
are spaced one pixel apart around the perimeter of a large square. This
results in a striking, rainbow-hued, shimmering four-leaf clover. Gosper
joked about keeping it hidden from the FDA lest it be banned. <SMOP> /smop/
[Simple (or Small) Matter of Programming] n. 1. A piece of code, not yet
written, whose anticipated length is significantly greater than its
complexity. Usage: used to refer to a program that could obviously be
written, but is not worth the trouble. It is also used ironically to imply
that a difficult problem can be easily solved because a program can be
written to do it; the irony is that it is very clear that writing such a
program will be a great deal of work. Example: "It's easy to change a FORTRAN
compiler to compile COBOL as well; it's just a SMOP." 2. Often used
ironically by the intended victim when a suggestion for a program is made
which seems easy to the suggester, but is obviously a lot of work to the
programmer. <SNAFU principle> n. "True communication is only possible between
equals, because inferiors are more consistently rewarded for telling their
superiors pleasant lies than for telling the truth" --- a central tenet of
<Discordianism> often invoked by hackers to explain the reason authoritarian
hierarchies screw up so reliably and systematically. There is a common fable
that well illustrates this. A <hacker> says to a manager, "This is manure".
Manager to second-level, "This is fertiliser". Second-level to third-level,
"This makes things grow". Third-level to Director, "Must be good stuff".
After the subsequent disaster, the <suits> protect themselves by saying "I
was misinformed", and the programmer is demoted or fired. <snail-mail> n.
Paper mail, as opposed to electronic. Sometimes written as the single word
`SnailMail'. One's postal address is, correspondingly, a "snail address".
Derives from earlier coinage `USnail' for which there have been parody
posters and stamps made. Oppose <email>. <snarf> /snarf/ vt. 1. To grab, esp.
a large document or file for the purpose of using it either with or without
the author's permission. see <BLT>. Variant: "snarf down", to snarf,
sometimes with the connotation of absorbing, processing, or understanding. "I
think I'll snarf down the list of DDT commands so I'll know what's changed
recently." 2. [in the UNIX community] to fetch a file or set of files across
a network. see also <blast>. This term was mainstream in the late sixties
meaning `to eat piggishly'. <snarf & barf> /snarf'n-barf/ n. The act of
grabbing a region of text using a <WIMP> environment and then stuffing the
contents of that region into another region or into the same region, to avoid
re-typing a command line. In the late sixties this was a mainstream
expression for an "Eat now, regret it later" cheap-restaurant expedition.
<snark> [Lewis Carroll, via the Michigan Terminal System] n. 1. A system
failure. When a user's process bombed, the operator would get a message
"Help, Help, Snark in MTS!". 2. More generally, any kind of unexplained or
threatening event on a computer. Often used to refer to events or log file
entries which might indicate an attempted security violation. 3. UUCP name of
snark.thyrsus.com, home site of the Jargon File 2.x.x versions. <sneakernet>
n. Term used (generally with ironic intent) for transfer of electronic
information by physically carrying tape, disks, or some other media from one
machine to another. "Never underestimate the bandwidth of a station wagon
filled with magtape, or a 747 filled with CD-ROMs." Also called `Tennis-Net',
`Armpit-Net'. <sniff> v.,n. Synonym for <poll>. <SO> /ess-oh/ n. (also
"S.O.") Acronym for Significant Other, almost invariably written abbreviated
and pronounced /ess-oh/ by hackers. Used to refer to one's primary
relationship, esp. a live-in to whom one is not married. see <MOTAS>,
<MOTOS>, <MOTSS>. <social science number> [IBM] n. A statistic which is
<content free>, or nearly so. A measure derived via methods of questionable
validity from data of a dubious and vague nature. Predictively, having a
social science number in hand is seldom much better than nothing and can be
considerably worse. <Management> loves them. see also <numbers>, <math-out>.
<softcopy> n. [by analogy with "hardcopy"] A machine readable form of
corresponding hardcopy. see <bits>. <software bloat> n. The results of
<second system effect>. Commonly cited examples include `ls(1)', <X>, <BSD>,
<Missed'em-five> and <OS/2>. <software rot> n. Term used to describe the
tendency of software which has not been used in awhile; such failure may be
semi-humorously ascribed to <bit rot>. More commonly, "software rot" strikes
when a program's assumptions become out of date. If the design was
insufficiently <robust> this may cause it to fail in mysterious ways. For
example, due to endemic shortsightedness in the design of COBOL programs,
most will succumb to software rot when their two-digit year counters <wrap
around> at the beginning of the year 2000. Historical note: software rot in
an even funnier sense than the mythical one was a real problem on early
research computers (e.g. the R1, see <grind crank>). If a program that
depended on a peculiar instruction hadn't been run in quite a while, the user
might discover that the opcodes no longer did the things as they used to.
("Hey, so-and-so needs an instruction to do such-and-such. We can snarf this
opcode, right? No one uses it.") Compare <bit rot>. <softy> [IBM] n. Hardware
hackers' term for a software expert who is largely ignorant of the mysteries
of hardware. <snivitz> n. A hiccup in hardware or software; a small,
transient problem of unknown origin (less serious than a <snark>).
<softwarily> /soft-weir'i-lee/ adv. In a way pertaining to software. "The
system is softwarily unreliable." The adjective `softwary' is *not* used. see
<hardwarily>. <some random X> adj. Used to indicate a member of class X, with
the implication that the particular X is interchangeable with most other Xs
in whatever context was being discussed. "I think some random cracker tripped
over the guest timeout last night." <sorcerer's apprentice mode> n. A bug in
a protocol where, under some circumstances, the receipt of a message causes
more than one message to be sent, each of which, when received, triggers the
same bug. Used esp. of such behavior caused by <bounce message> loops in
<email> software. Compare <broadcast storm>. <SOS> n.,obs. /ess-oh-ess/ 1. An
infamously <losing> text editor. Once, back in the 1960's, when a text editor
was needed for the PDP-6, a hacker crufted together a <quick and dirty>
`stopgap editor' to be used until a better one was written. Unfortunately,
the old one was never really discarded when new ones (in particular, <TECO>)
came along. SOS is a descendant of that editor; SOS means `Son of Stopgap',
and many PDP-10 users gained the dubious pleasure of its acquaintance. Since
then other programs similar in style to SOS have been written, notably BILOS
(bye'lohss) the Brother-In-Law Of Stopgap. see also <TECO>. 2. /sos/ n.
Inverse of <AOS>, from the PDP-10 instruction set. <space-cadet keyboard> n.
The Knight keyboard, a now-legendary device used on MIT LISP machines which
inspired several still-current slang terms and influenced the design of
<EMACS>. It was inspired by the Stanford keyboard and equipped with no less
than *seven* shift keys: four keys for <bucky bits> (`control', `meta',
`hyper', and `super') and three like the regular shift key, called `shift',
`top', and `front'. Many keys have three symbols on them: a letter and a
symbol on the top, and a Greek letter on the front. For example, the `L' key
has an `L' and a two-way arrow on the top, and the Greek letter lambda on the
front. If you press this key with the right hand while playing an appropriate
`chord' with the left hand on the shift keys, you can get the following
results: L lower-case "l" shift-L upper-case "L" front-L Greek lower-case
lambda front-shift-L Greek upper-case lambda top-L two-way arrow (front and
shift are ignored) And of course each of these may also be typed with any
combination of the control, meta, hyper, and super keys. On this keyboard you
can type over 8000 different characters! This allows the user to type very
complicated mathematical text, and also to have thousands of single-character
commands at his disposal. Many hackers were actually willing to memorize the
command meanings of that many characters if it will reduce typing time (this
view rather obviously shaped the interface of EMACS). Other hackers, however,
thought having that many bucky bits is overkill, and object that such a
keyboard can require three or four hands to operate. see <bucky bits>,
<cokebottle>, <meta bit>. <SPACEWAR> n. A space-combat simulation game (based
on E. E. "Doc" Smith's `Lensman' books) first implemented on the PDP-1 at MIT
in 1960-61. SPACEWAR aficionados formed the core of the early hacker culture
at MIT. Ten years later a descendant of the game motivated Ken Thompson to
build, in his spare time on a scavenged PDP-7, the operating system that
became <UNIX>. Ten years after that, SPACEWAR was commercialized as one of
the first video games; descendants are still feeping in video arcades
everywhere. <spaghetti code> n. Describes code with a complex and tangled
control structure, esp. one using many GOTOs, exceptions or other
`unstructured' branching constructs. Pejorative. The synonym "kangaroo code"
has been reported. <spaghetti inheritance> n. [Encountered among users of
object-oriented languages that use inheritance, such as Smalltalk] A
convoluted class-subclass graph, often resulting from carelessly deriving
subclasses from other classes just for the sake of reusing their code. Coined
in a (successful) attempt to discourage such practice, through guilt by
association with <spaghetti code>. <spam> [from the <MUD> community] vt. To
crash a program by overrunning a fixed-size buffer with excessively large
input data. see also <overrun screw>, <smash the stack>. <special-case> vt.
To write unique code to handle input or command to a program that is somehow
distinguished from normal processing. This would be used for processing of
mode switches or interrupt characters in an interactive interface (as
opposed, say, to text entry or normal commands); or for processing of <hidden
flags> in the input of a batch program or <filter>. <spell> n. Syn.
<incantation>. <spiffy> /spi'fee/ adj. 1. Said of programs having a pretty,
clever or exceptionally well-designed interface. "Have you seen the spiffy X
version of <empire> yet?" 2. Said sarcastically of programs which are
perceived to have little more than a flashy interface going for them. Which
meaning should be drawn depends delicately on tone of voice and context. This
word was common mainstream slang during the nineteen-forties, in a sense
close to #1. <spin> vi. Equivalent to <buzz>. More common among C and UNIX
programmers. <spin-lock> [Cambridge] n. A <busy-wait>. Preferred in Britain.
<spl> [abbrev, fr. Set Priority Level] The way traditional Unix kernels
implement mutual exclusion by running code at high interrupt levels. Used in
slang to describe the act of tuning in or tuning out ordinary communication.
Classically, spl levels run from 1 to 7; "Fred's at spl 6 today" would mean
he's very hard to interrupt. "Wait till I finish this, I'll spl down then."
<splat> n. 1. Name used in many places (DEC, IBM, and others) for the ASCII
asterisk (`*') character. 2. [MIT] Name used by some people for the ASCII
number-sign (`#') character. 3. [Stanford] Name used by some people for the
Stanford/ITS extended ASCII circle-x character. (This character is also
called "circle-x", "blobby", and "frob", among other names.) 4. [Stanford]
Name for the semi-mythical extended ASCII circle-plus character. 5. Canonical
name for an output routine that outputs whatever the local interpretation of
splat is. 6. [Rochester Institute of Technology] The command key on a
Macintosh. Usage: nobody really agrees what character `splat' is, but the
term is common. see also <ASCII> <spooge> /spooj/ 1. n. Inexplicable or
arcane code, or random and probably incorrect output from a computer program.
2. vi. To generate code or output as in definition 1. <spool> [fr. early IBM
"Simultaneous Peripheral Operation Off-Line", but this acronym is widely
thought to have been contrived for effect] vt. To send files to some device
or program (a `spooler') that queues them up and does something useful with
them later. The spooler usually understood is the `print spooler' controlling
output of jobs to a printer, but the term has been used in connection with
other peripherals (especially plotters and graphics devices). <stack> n. A
person's stack is the set of things he has to do in the future. One speaks of
the next project to be attacked as having risen to the top of the stack. "I'm
afraid I've got real work to do, so this'll have to be pushed way down on my
stack." "I haven't done it yet because every time I pop my stack something
new gets pushed." If you are interrupted several times in the middle of a
conversation, "my stack overflowed" means "I forget what we were talking
about" (the implication is that too many items were pushed onto the stack
than could be remembered, and so the least recent items were lost). The usual
physical example of a stack is to be found in a cafeteria: a pile of plates
sitting on a spring in a well in a cart, so that when you put a plate on the
top they all sink down, and when you take one off the top the rest spring up
a bit. see also <PUSH> and <POP>. At MIT, all the <stack> usages used to be
more commonly found with <pdl>, and this may still be true. Everywhere else
<stack> seems to be the preferred term. <Knuth> writes (in `The Art of
Computer Programming' 1st edition, vol 1, page 236 in section 2.2.1): Many
people who realized the important of stacks and queues independently have
given other names to these structures: stacks have been called push-down
lists, reversion storages, cellars, nesting stores, piles, last-in-first-out
("LIFO") lists, and even yo-yo lists! <stack puke> n. Some micros are said to
`puke their guts onto the stack' to save their internal state during
exception processing. On a pipelined machine this can take a while (up to 92
bytes for a bus fault on the 68020, for example). <stale pointer bug> n.
Synonym for <aliasing bug> used esp. among microcomputer hackers. <state> n.
Condition, situation. "What's the state of your latest hack?" "It's winning
away." "The system tried to read and write the disk simultaneously and got
into a totally wedged state." A standard question is "What's your state?"
which means "What are you doing?" or "What are you about to do?" Typical
answers might be "I'm about to gronk out", or "I'm hungry". Another standard
question is "What's the state of the world?" meaning "What's new?" or "What's
going on?". The more terse and humorous way of asking these conventions would
be "State-p?". <stiffy> [Lowell University] n. 3.5" <microfloppies>, so
called because their jackets are more firm than the 5.25" and 8" floppy.
<stir-fried random> alt. <stir-fried mumble> n. Term used for frequent best
dish of those hackers who can cook. Consists of random fresh veggies and meat
wokked with random spices. Tasty and economical. see <random>, <great-wall>,
<ravs>, ORIENTAL FOOD; see also <mumble>. <stomp on> vt. To inadvertently
overwrite something important, usually automatically. Example: "All the work
I did this weekend got stomped on last night by the nightly-server script."
Compare <scribble>, <mangle>, <trash>, <scrog>, <roach>. <Stone Age> n.,adj.
1. In computer folklore, an ill-defined period from ENIAC (c.1943) to the
mid-1950s; the great age of electromechanical <dinosaur>s. Sometimes used for
the entire period up to 1960-61 (see <Iron Age>); however, it is funnier and
more descriptive to characterize the latter half in terms of a `Bronze Age'
era of all-transistor, pre-ferrite-core machines with drum or CRT mass
storage (as opposed to just mercury delay lines and/or relays). see also
<Iron Age>. 2. More generally, a pejorative for any crufty, ancient piece of
hardware or software technology. Note that this is used even by people who
were there for the <Stone Age> (sense #1). <stoppage> /sto'p@j/ n. Extreme
lossage (see <lossage>) resulting in something (usually vital) becoming
completely unusable. "The recent system stoppage was caused by a <fried>
transformer." <stubroutine> /stuhb'roo-teen/ [contr. of "stub routine"] n.
Tiny, often vacuous placeholder for a subroutine to be written or fleshed out
later. <studlycaps> n. A hackish form of silliness similar to
<BiCapitalization>, but applied to random text rather than trademarks. ThE
oRigiN and SigNificaNce of thIs pRacTicE iS oBscuRe. <stunning> adj.
Mind-bogglingly stupid. Usually used in sarcasm. "You want to code *what* in
ADA? That's...a stunning idea!" see also <non-optimal solution>. <subshell>
[UNIX, MS-DOS] n. An OS command interpreter (see <shell>) spawned from within
a program, such that exit from the command interpreter returns one to the
parent program in a state that allows it to continue execution. Oppose
<chain>. <sucking mud> [Applied Digital Research] adj. (also "pumping mud")
Crashed or wedged. Usually said of a machine that provides some service to a
network, such as a file server. This Dallas regionalism derives from the East
Texas oil field lament, "Shut 'er down, Ma, she's a-suckin' mud." Often used
as a query. "We are going to reconfigure the network, are you ready to suck
mud?" <suit> n. 1. Ugly and uncomfortable `business clothing' often worn by
non-hackers. Invariably worn with a `tie', a strangulation device which
partially cuts off the blood supply to the brain. It is thought that this
explains much about the behavior of suit- wearers. 2. A person who habitually
wears suits, as distinct from a techie or hacker. see <loser>, <burble> and
<brain-damaged>. English, BTW, is relatively kind; our Soviet correspondent
informs us that the corresponding idiom in Russian hacker jargon is "sovok",
lit. a tool for grabbing garbage. <sunspots> n. Notional cause of an odd
error. "Why did the program suddenly turn the screen blue?" "Sunspots, I
guess". Also cause of bitrot, from the genuine, honest-to-god fact that
sunspots will increase cosmic radiation which can flip single bits in memory.
Needless to say, although real sunspot errors happen, they are extremely
rare. see <cosmic rays>, <phase of the moon>. <sun-stools> n. Unflattering
hackerism for SunTools, a pre-X windowing environment notorious in its day
for size, slowness and misfeatures (X, however, is larger and slower; see
<second-system effect>). <SUPDUP> /soop'doop/ vi. To communicate with another
ARPAnet host using the SUPDUP program, which is a SUPer-DUPer <TELNET>
talking a special display protocol used mostly in talking to ITS sites.
Sometimes abbreviated to SD. <superprogrammer> n. A prolific programmer; one
who can code exceedingly well and quickly. Not all hackers are
superprogrammers, but many are. (Productivity can vary from one programmer to
another by factors of as much as 1000. For example, programmer A might be
able to write an average of 3 lines of working code in one day, while
another, with the proper tools and skill, might be able to write 3,000 lines
of working code in one day. This variance is astonishing, appearing in very
few other areas of human endeavor.) The term superprogrammer is more commonly
used within such places as IBM than in the hacker community. It tends to
stress productivity rather than creativity or ingenuity. Hackers tend to
prefer the terms <hacker> and <wizard>. <support> n. After-sale handholding;
something many software vendors promise but few deliver. To hackers, most
support people are useless --- because by the time a hacker calls support
he/she will usually know the relevant manuals better than the support people
(sadly, this is *not* a joke or exaggeration). A hacker's idea of "support"
is a one-on-one with the software's designer. <Suzie COBOL> /soo'zee koh'bol/
1. [IBM, prob. fr. Frank Zappa's "little Suzy Creamcheese"] n. A coder
straight out of training school who knows everything except the benefits of
comments in plain English. Also (fashionable among personkind wishing to
avoid accusations of sexism) `Sammy Cobol' or (in some non-IBM circles)
`Cobol Charlie'. 2. [proposed] Meta-name for any <code grinder>, analogous to
<J. Random Hacker>. <swab> [From the mnemonic for the PDP-11 `byte swap'
instruction, as immortalized in the dd(1) option `conv=swab' (see <DD>)] 1.
vt. to solve the <NUXI problem> by swapping bytes in a file. 2. Also, the
program in V7 UNIX used to perform this action, or anything functionally
equivalent to it. see also <big-endian>, <little-endian>, <bytesexual>. <swap
space> n. Storage space, especially temporary storage space used during a
move or reconfiguration. "I'm just using that corner of the machine room for
swap space". <swapped> adj. From the older (per-task) method of using
secondary storage devices to implement support for multitasking. Something
which is <swapped in> is available for immediate use in main memory, and
otherwise is <swapped out>. Often used metaphorically to refer to people's
memories ("I read the Scheme Report every few months to keep the information
swapped in.") or to their own availability ("I'll swap you in as soon as I
finish looking at this other problem."). Compare <page in>, <page out>.
<swizzle> v. To convert external names or references within a data structure
into direct pointers when the data structure is brought into main memory from
external storage; also called "pointer swizzling"; the converse operation is
sometimes termed <unswizzling>. <sync> /sink/ [UNIX] n.,vi. 1. To force all
pending I/O to the disk. 2. More generally, to force a number of competing
processes or agents to a state that would be `safe' if the system were to
crash; thus, to checkpoint. see <flush>. <syntactic sugar> [coined by Peter
Landin] n. Features added to a language or formalism to make it `sweeter' for
humans, that do not affect the expressiveness of the formalism (compare
<chrome>). Used esp. when there is an obvious and trivial translation of the
`sugar' feature into other constructs already present in the notation.
Example: C's `a[i]' notation is syntactic sugar for `*(a + i)'. "Syntactic
sugar causes cancer of the semicolon." --- Alan Perlis. <sys-frog> [the PLATO
system] n. Playful hackish variant of `sysprog' which is in turn short for
`systems-programmer'. <sysop> n. [BBS] The operator (and usually owner) of a
bulletin-board system. A common neophyte mistake on <FidoNet> is to address a
message to `sysop' in an international <echo>, thus sending it to hundreds of
sysops world-wide. <system> n. 1. The supervisor program or OS on a computer.
2. n. The entire computer system, including input/output devices, the
supervisor program or OS, and possibly other software. 3. Any large-scale
program. 4. Any method or algorithm. 5. The way things are usually done.
Usage: a fairly ambiguous word. "You can't beat the system." <System hacker>:
one who hacks the system (in sense 1 only; for sense 2 one mentions the
particular program: e.g., "lisp hacker") <system mangler> n. Humorous synonym
for "system programmer"; compare <sys-frog>. Refers specifically to a systems
programmer in charge of administration, software maintainence, and updates at
some site. {= T =} <T> /tee/ 1. [from LISP terminology for `true'] Yes.
Usage: used in reply to a question, particularly one asked using the `-P'
convention). see <NIL>. In LISP, the name T means "true", among other things.
Some hackers use `T' and `NIL' instead of `Yes' and `No' almost reflexively.
This sometimes causes misunderstandings. When a waiter or flight attendant
asks whether a hacker wants coffee, he may well respond "T", meaning that he
wants coffee; but of course he will be brought a cup of tea instead. As it
happens, most hackers like tea at least as well as coffee, particularly those
who frequent Chinese restaurants, so it's not that big a problem. 2. see
<time t>. 3. In transaction-processing circles, an abbreviation for the noun
"transaction". 4. [Purdue] Alternate spelling of <tee> <TANSTAAFL>
/tan'stah-fl/ [acronym, from Robert Heinlein's classic `The Moon is a Harsh
Mistress'.] "There Ain't No Such Thing As A Free Lunch", often invoked when
someone is balking at an unpleasant design choice or the prospect of using an
unpleasantly <heavyweight> technique. "What? Don't tell me I have to
implement a database back end to get my address book program to work!" "Well,
TANSTAAFL you know." This usage is particularly popular among the relatively
high precentages of science-fiction fans and political libertarians in
hackerdom (see Appendix B). <tail recursion> n. If you haven't already, see
<tail recursion>. <talk mode> n. The state a terminal is in when linked to
another via a bidirectional character pipe, to support on-line dialogue
between two or more users. Talk mode has a special set of jargon words, used
to save typing, which are not used orally. Some of these are identical to
(and probably derived from) Morse-code jargon used by ham-radio amateurs
going back to the nineteen-twenties. BCNU Be seeing you. BTW By the way...
Lower-case also works. BYE? Are you ready to unlink? (This is the standard
way to end a talk mode conversation; the other person types BYE to confirm,
or else continues the conversation.) CUL see you later. ENQ? Are you busy?
Expects ACK or NAK in return. FOO? A greeting, also meaning R U THERE? Often
used in the case of unexpected links, meaning also "Sorry if I butted in"
(linker) or "What's up?" (linkee). FYI For your information... FYA For your
amusement... GA Go ahead (used when two people have tried to type
simultaneously; this cedes the right to type to the other). HELLOP A
greeting, also meaning R U THERE? (An instance of the "-P" convention.) JAM
Just a minute... Equivalent to SEC... NIL No (see <NIL>). O Over to you
(lower-case works too). OO Over and out (lower-case works too). / Another
form of "Over to you" (from x/y as "x over y") OBTW Oh, by the way... R U
THERE? Are you there? SEC Wait a second (sometimes written SEC...). T Yes
(see the main entry for <T>). TNX Thanks. TNX 1.0E6 Thanks a million
(humorous). WRT With Regard To or With Respect To. WTF The universal
interrogative particle. WTF knows what it means? WTH What the hell? <double
CRLF> When the typing party has finished, he types two CRLFs to signal that
he is done; this leaves a blank line between individual "speeches" in the
conversation, making it easier to re-read the preceding text. <name>: When
three or more terminals are linked, each speech is preceded by the typist's
login name and a colon (or a hyphen) to indicate who is typing. The login
name often is shortened to a unique prefix (possibly a single letter) during
a very long conversation. /\/\/\ A giggle or chuckle (rare). On a MUD, this
almost certainly mean `earthquake fault'. Most of the above sub-jargon is
used at both Stanford and MIT. Several of these are also common in <email>,
esp. FYI, FYA, BTW, BCNU, and CUL. A few other abbreviations have been
reported from commercial networks such as GEnie and CompuServe where on-line
`live' chat including more than two people is common and usually involves a
more `social' context, notably <g> grin BBL be back later BRB be right back
HHOJ ha ha only joking HHOS <ha ha only serious> LOL laughing out loud ROTF
rolling on the floor ROTFL rolling on the floor laughing AFK away from
keyboard b4 before CU l8tr see you later MORF Male or Female? TTFN ta-ta for
now OIC Oh, I see rehi hello again These are not used at universities or in
the UNIX world; conversely, most of the people who know these are unfamiliar
with FOO?, BCNU, HELLOP, <NIL>, and <T>. The <MUD> community uses a mixture
of USENET/Internet emoticons, a few of the more natural of the old-style talk
mode abbrevs, and some of the `social' list above; specifically, MUD
respondents report use of BBL, BRB, LOL, b4, BTW, WTF, and WTH. The use of
rehi is also common; in fact, mudders are fond of re- compounds and will
frequently `rehug' or `rebonk' (see <bonk/oif>) people. The verb `re' by
itself is verbed as `re-greet' In general, though, mudders express a
preference for typing things out in full rather than using abbreviations;
this may be due to the relative youth of the MUD cultures, which tend to
include many touch typists and assume high-speed links. The following uses
specific to MUDs are reported: UOK? Are you OK? THX Thanks (mutant of TNX) CU
l8er see you later (mutant of CU l8tr) OTT over the top (excessive, uncalled
for) Some <BIFF>isms (notably the variant spelling `d00d' appear to be
passing into wider use among some subgroups of mudders). see also <hakspek>,
<emoticon>, <bonk/oif>. <tall card> n. A PC/AT-sized expansion card (these
can be larger than IBM-PC or XT cards because the AT case is bigger). see
also <short card>.