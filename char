 6-bit chunks of information). The move to an 8-bit byte happened in late
1956, and this size was later adopted and promulgated as a standard by the
System/360. The word was coined by mutating the word `bite' so it would not
be accidentally misspelled as {bit}. see also {nybble}. :byte sex: n.
[common] The byte sex of hardware is {big-endian} or {little-endian}; see
those entries. :bytesexual: /bi:t`sek'shu-*l/ adj. [rare] Said of hardware,
denotes willingness to compute or pass data in either {big-endian} or
{little-endian} format (depending, presumably, on a {mode bit} somewhere).
see also {NUXI problem}. :Bzzzt! Wrong.: /bzt rong/ excl. [common;
Usenet/Internet; punctuation varies] From a Robin Williams routine in the
movie "Dead Poets Society" spoofing radio or TV quiz programs, such as _Truth
or Consequences_, where an incorrect answer earns one a blast from the buzzer
and condolences from the interlocutor. A way of expressing mock-rude
disagreement, usually immediately following an included quote from another
poster. The less abbreviated "*Bzzzzt*, wrong, but thank you for playing" is
also common; capitalization and emphasis of the buzzer sound varies. = C =
===== :C: n. 1. The third letter of the English alphabet. 2. ASCII 1000011.
3. The name of a programming language designed by Dennis Ritchie during the
early 1970s and immediately used to reimplement {{Unix}}; so called because
many features derived from an earlier compiler named `B' in commemoration of
_its_ parent, BCPL. (BCPL was in turn descended from an earlier Algol-derived
language, CPL.) Before Bjarne Stroustrup settled the question by designing
{C++}, there was a humorous debate over whether C's successor should be named
`D' or `P'. C became immensely popular outside Bell Labs after about 1980 and
is now the dominant language in systems and microcomputer applications
programming. see also {languages of choice}, {indent style}. C is often
described, with a mixture of fondness and disdain varying according to the
speaker, as "a language that combines all the elegance and power of assembly
language with all the readability and maintainability of assembly language".
:C Programmer's Disease: n. The tendency of the undisciplined C programmer to
set arbitrary but supposedly generous static limits on table sizes (defined,
if you're lucky, by constants in header files) rather than taking the trouble
to do proper dynamic storage allocation. If an application user later needs
to put 68 elements into a table of size 50, the afflicted programmer reasons
that he or she can easily reset the table size to 68 (or even as much as 70,
to allow for future expansion) and recompile. This gives the programmer the
comfortable feeling of having made the effort to satisfy the user's
(unreasonable) demands, and often affords the user multiple opportunities to
explore the marvelous consequences of {fandango on core}. In severe cases of
the disease, the programmer cannot comprehend why each fix of this kind seems
only to further disgruntle the user. :C&C: // [common, esp. on
news.admin.net-abuse.email] Contraction of "Coffee & Cats". This frequently
occurs as a warning label on USENET posts that are likely to cause you to
{snarf} coffee onto your keyboard and startle the cat off your lap. :C++:
/C'-pluhs-pluhs/ n. Designed by Bjarne Stroustrup of AT&T Bell Labs as a
successor to {C}. Now one of the {languages of choice}, although many hackers
still grumble that it is the successor to either Algol 68 or {Ada} (depending
on generation), and a prime example of {second-system effect}. Almost
anything that can be done in any language can be done in C++, but it requires
a {language lawyer} to know what is and what is not legal-- the design is
_almost_ too large to hold in even hackers' heads. Much of the {cruft}
results from C++'s attempt to be backward compatible with C. Stroustrup
himself has said in his retrospective book "The Design and Evolution of C++"
(p. 207), "Within C++, there is a much smaller and cleaner language
struggling to get out." [Many hackers would now add "Yes, and it's called
{Java}" --ESR] :calculator: [Cambridge] n. Syn. for {bitty box}. :Camel Book:
n. Universally recognized nickname for the book "Programming Perl", by Larry
Wall and Randal L. Schwartz, O'Reilly and Associates 1991, ISBN 0-937175-64-1
(second edition 1996, ISBN 1-56592-149-6). The definitive reference on
{Perl}. :can: vt. To abort a job on a time-sharing system. Used esp. when the
person doing the deed is an operator, as in "canned from the {{console}}".
Frequently used in an imperative sense, as in "Can that print job, the LPT
just popped a sprocket!" Synonymous with {gun}. It is said that the ASCII
character with mnemonic CAN (0011000) was used as a kill-job character on
some early OSes. Alternatively, this term may derive from mainstream slang
`canned' for being laid off or fired. :can't happen: The traditional program
comment for code executed under a condition that should never be true, for
example a file size computed as negative. Often, such a condition being true
indicates data corruption or a faulty algorithm; it is almost always handled
by emitting a fatal error message and terminating or crashing, since there is
little else that can be done. Some case variant of "can't happen" is also
often the text emitted if the `impossible' error actually happens! Although
"can't happen" events are genuinely infrequent in production code,
programmers wise enough to check for them habitually are often surprised at
how frequently they are triggered during development and how many headaches
checking for them turns out to head off. see also {firewall code} (sense 2).
:cancelbot: /kan'sel-bot/ [Usenet: compound, cancel + robot] 1. Mythically, a
{robocanceller} 2. In reality, most cancelbots are manually operated by being
fed lists of spam message IDs. :Cancelmoose[tm]: /kan'sel-moos/ [Usenet] The
archetype and model of all good {spam}-fighters. Once upon a time, the 'Moose
would send out spam-cancels and then post notice anonymously to
news.admin.policy, news.admin.misc, and alt.current-events.net-abuse. The
'Moose stepped to the fore on its own initiative, at a time (mid-1994) when
spam-cancels were irregular and disorganized, and behaved altogether
admirably - fair, even-handed, and quick to respond to comments and
criticism, all without self-aggrandizement or martyrdom. Cancelmoose[tm]
quickly gained near-unanimous support from the readership of all three
above-mentioned groups. Nobody knows who Cancelmoose[tm] really is, and there
aren't even any good rumors. However, the 'Moose now has an e-mail address
(<moose@cm.org>) and a web site (`http://www.cm.org'.) By early 1995, others
had stepped into the spam-cancel business, and appeared to be comporting
themselves well, after the 'Moose's manner. The 'Moose has now gotten out of
the business, and is more interested in ending spam (and cancels) entirely.
:candygrammar: n. A programming-language grammar that is mostly {syntactic
sugar}; the term is also a play on `candygram'. {COBOL}, Apple's Hypertalk
language, and a lot of the so-called `4GL' database languages share this
property. The usual intent of such designs is that they be as English-like as
possible, on the theory that they will then be easier for unskilled people to
program. This intention comes to grief on the reality that syntax isn't what
makes programming hard; it's the mental effort and organization required to
specify an algorithm precisely that costs. Thus the invariable result is that
`candygrammar' languages are just as difficult to program in as terser ones,
and far more painful for the experienced hacker. [The overtones from the old
Chevy Chase skit on Saturday Night Live should not be overlooked. This was a
"Jaws" parody. Someone lurking outside an apartment door tries all kinds of
bogus ways to get the occupant to open up, while ominous music plays in the
background. The last attempt is a half-hearted "Candygram!" When the door is
opened, a shark bursts in and chomps the poor occupant. [There is a similar
gag in "Blazing Saddles" --ESR] There is a moral here for those attracted to
candygrammars. Note that, in many circles, pretty much the same ones who
remember Monty Python sketches, all it takes is the word "Candygram!",
suitably timed, to get people rolling on the floor. -- GLS] :canonical: adj.
[very common; historically, `according to religious law'] The usual or
standard state or manner of something. This word has a somewhat more
technical meaning in mathematics. Two formulas such as 9 + x and x + 9 are
said to be equivalent because they mean the same thing, but the second one is
in `canonical form' because it is written in the usual way, with the highest
power of x first. Usually there are fixed rules you can use to decide whether
something is in canonical form. The jargon meaning, a relaxation of the
technical meaning, acquired its present loading in computer-science culture
largely through its prominence in Alonzo Church's work in computation theory
and mathematical logic (see {Knights of the Lambda Calculus}). Compare
{vanilla}. Non-technical academics do not use the adjective `canonical' in
any of the senses defined above with any regularity; they do however use the
nouns `canon' and `canonicity' (not **canonicalness or **canonicality). The
`canon' of a given author is the complete body of authentic works by that
author (this usage is familiar to Sherlock Holmes fans as well as to literary
scholars). `_The_ canon' is the body of works in a given field (e.g., works
of literature, or of art, or of music) deemed worthwhile for students to
study and for scholars to investigate. The word `canon' has an interesting
history. It derives ultimately from the Greek `kanon' (akin to the English
`cane') referring to a reed. Reeds were used for measurement, and in Latin
and later Greek the word `canon' meant a rule or a standard. The
establishment of a canon of scriptures within Christianity was meant to
define a standard or a rule for the religion. The above non-techspeak
academic usages stem from this instance of a defined and accepted body of
work. Alongside this usage was the promulgation of `canons' (`rules') for the
government of the Catholic Church. The techspeak usages ("according to
religious law") derive from this use of the Latin `canon'. Hackers invest
this term with a playfulness that makes an ironic contrast with its
historical meaning. A true story: One Bob Sjoberg, new at the MIT AI Lab,
expressed some annoyance at the incessant use of jargon. Over his loud
objections, GLS and RMS made a point of using as much of it as possible in
his presence, and eventually it began to sink in. Finally, in one
conversation, he used the word `canonical' in jargon-like fashion without
thinking. Steele: "Aha! We've finally got you talking jargon too!" Stallman:
"What did he say?" Steele: "Bob just used `canonical' in the canonical way."
Of course, canonicality depends on context, but it is implicitly defined as
the way _hackers_ normally expect things to be. Thus, a hacker may claim with
a straight face that `according to religious law' is _not_ the canonical
meaning of `canonical'. :card walloper: n. An EDP programmer who grinds out
batch programs that do stupid things like print people's paychecks. Compare
{code grinder}. see also {{punched card}}, {eighty-column mind}. :careware:
/keir'weir/ n. A variety of {shareware} for which either the author suggests
that some payment be made to a nominated charity or a levy directed to
charity is included on top of the distribution charge. Syn. {charityware};
compare {crippleware}, sense 2. :cargo cult programming: n. A style of
(incompetent) programming dominated by ritual inclusion of code or program
structures that serve no real purpose. A cargo cult programmer will usually
explain the extra code as a way of working around some bug encountered in the
past, but usually neither the bug nor the reason the code apparently avoided
the bug was ever fully understood (compare {shotgun debugging}, {voodoo
programming}). The term `cargo cult' is a reference to aboriginal religions
that grew up in the South Pacific after World War II. The practices of these
cults center on building elaborate mockups of airplanes and military style
landing strips in the hope of bringing the return of the god-like airplanes
that brought such marvelous cargo during the war. Hackish usage probably
derives from Richard Feynman's characterization of certain practices as
"cargo cult science" in his book "Surely You're Joking, Mr. Feynman!" (W. W.
Norton & Co, New York 1985, ISBN 0-393-01921-7). :cascade: n. 1. A huge
volume of spurious error-message output produced by a compiler with poor
error recovery. Too frequently, one trivial syntax error (such as a missing
`)' or `}') throws the parser out of synch so that much of the remaining
program text is interpreted as garbaged or ill-formed. 2. A chain of Usenet
followups, each adding some trivial variation or riposte to the text of the
previous one, all of which is reproduced in the new message; an {include war}
in which the object is to create a sort of communal graffito. :case and
paste: n. [from `cut and paste'] 1. The addition of a new {feature} to an
existing system by selecting the code from an existing feature and pasting it
in with minor changes. Common in telephony circles because most operations in
a telephone switch are selected using `case' statements. Leads to {software
bloat}. In some circles of EMACS users this is called `programming by
Meta-W', because Meta-W is the EMACS command for copying a block of text to a
kill buffer in preparation to pasting it in elsewhere. The term is
condescending, implying that the programmer is acting mindlessly rather than
thinking carefully about what is required to integrate the code for two
similar cases. At {DEC} (now Compaq), this is sometimes called
`clone-and-hack' coding. :casters-up mode: n. [IBM, prob. fr. slang belly up]
Yet another synonym for `broken' or `down'. Usually connotes a major failure.
A system (hardware or software) which is `down' may be already being
restarted before the failure is noticed, whereas one which is `casters up' is
usually a good excuse to take the rest of the day off (as long as you're not
responsible for fixing it). :casting the runes: n. What a {guru} does when
you ask him or her to run a particular program and type at it because it
never works for anyone else; esp. used when nobody can ever see what the guru
is doing different from what J. Random Luser does. Compare {incantation},
{runes}, {examining the entrails}; also see the AI koan about Tom Knight in
"{Some AI Koans}" (Appendix A). A correspondent from England tells us that
one of ICL's most talented systems designers used to be called out
occasionally to service machines which the {field circus} had given up on.
Since he knew the design inside out, he could often find faults simply by
listening to a quick outline of the symptoms. He used to play on this by
going to some site where the field circus had just spent the last two weeks
solid trying to find a fault, and spreading a diagram of the system out on a
table top. He'd then shake some chicken bones and cast them over the diagram,
peer at the bones intently for a minute, and then tell them that a certain
module needed replacing. The system would start working again immediately
upon the replacement. :cat: [from `catenate' via {{Unix}} `cat(1)'] vt. 1.
[techspeak] To spew an entire file to the screen or some other output sink
without pause (syn. {blast}). 2. By extension, to dump large amounts of data
at an unprepared target or with no intention of browsing it carefully. Usage:
considered silly. Rare outside Unix sites. see also {dd}, {BLT}. Among Unix
fans, `cat(1)' is considered an excellent example of user-interface design,
because it delivers the file contents without such verbosity as spacing or
headers between the files, and because it does not require the files to
consist of lines of text, but works with any sort of data. Among Unix haters,
`cat(1)' is considered the {canonical} example of _bad_ user-interface
design, because of its woefully unobvious name. It is far more often used to
{blast} a file to standard output than to concatenate two files. The name
`cat' for the former operation is just as unintuitive as, say, LISP's {cdr}.
Of such oppositions are {holy wars} made.... :catatonic: adj. Describes a
condition of suspended animation in which something is so {wedged} or {hung}
that it makes no response. If you are typing on a terminal and suddenly the
computer doesn't even echo the letters back to the screen as you type, let
alone do what you're asking it to do, then the computer is suffering from
catatonia (possibly because it has crashed). "There I was in the middle of a
winning game of {nethack} and it went catatonic on me! Aaargh!" Compare
{buzz}. :cathedral: n.,adj. [see {bazaar} for derivation] The `classical'
mode of software engineering long thought to be necessarily implied by
{Brooks's Law}. Features small teams, tight project control, and long release
intervals. This term came into use after analysis of the Linux experience
suggested there might be something wrong (or at least incomplete) in the
classical assumptions. :cd tilde: /C-D til-d*/ vi. To go home. From the Unix
C-shell and Korn-shell command `cd ~', which takes one to one's `$HOME' (`cd'
with no arguments happens to do the same thing). By extension, may be used
with other arguments; thus, over an electronic chat link, `cd ~coffee' would
mean "I'm going to the coffee machine." :CDA: /C-D-A/ The "Communications
Decency Act" of 1996, passed on {Black Thursday} as section 502 of a major
telecommunications reform bill. The CDA made it a federal crime in the USA to
send a communication which is "obscene, lewd, lascivious, filthy, or
indecent, with intent to annoy, abuse, threaten, or harass another person."
It also threatened with imprisonment anyone who "knowingly" makes accessible
to minors any message that "describes, in terms patently offensive as
measured by contemporary community standards, sexual or excretory activities
or organs". While the CDA was sold as a measure to protect minors from the
putative evils of pornography, the repressive political aims of the bill were
laid bare by the Hyde amendment, which intended to outlaw discussion of
abortion on the Internet. To say that this direct attack on First Amendment
free-speech rights was not well received on the Internet would be putting it
mildly. A firestorm of protest followed, including a February 29th mass
demonstration by thousands of netters who turned their {home page}s black for
48 hours. Several civil-rights groups and computing/telecommunications
companies mounted a constitutional challenge. The CDA was demolished by a
strongly-worded decision handed down on in 8th-circuit Federal court and
subsequently affirmed by the U.S. Supreme Court on 26 June 1997 (`White
Thursday'). see also {Exon}. :cdr: /ku'dr/ or /kuh'dr/ vt. [from LISP] To
skip past the first item from a list of things (generalized from the LISP
operation on binary tree structures, which returns a list consisting of all
but the first element of its argument). In the form `cdr down', to trace down
a list of elements: "Shall we cdr down the agenda?" Usage: silly. see also
{loop through}. Historical note: The instruction format of the IBM 704 that
hosted the original LISP implementation featured two 15-bit fields called the
`address' and `decrement' parts. The term `cdr' was originally `Contents of
Decrement part of Register'. Similarly, `car' stood for `Contents of Address
part of Register'. The cdr and car operations have since become bases for
formation of compound metaphors in non-LISP contexts. GLS recalls, for
example, a programming project in which strings were represented as linked
lists; the get-character and skip-character operations were of course called
CHAR and CHDR. :chad: /chad/ n. 1. [common] The perforated edge strips on
printer paper, after they have been separated from the printed portion. Also
called {selvage}, {perf}, and {ripoff}. 2. obs. The confetti-like paper bits
punched out of cards or paper tape; this has also been called `chaff',
`computer confetti', and `keypunch droppings'. It's reported that this was
very old Army slang, and it may now be mainstream; it has been reported seen
(1993) in directions for a card-based voting machine in California.
Historical note: One correspondent believes `chad' (sense 2) derives from the
Chadless keypunch (named for its inventor), which cut little u-shaped tabs in
the card to make a hole when the tab folded back, rather than punching out a
circle/rectangle; it was clear that if the Chadless keypunch didn't make
them, then the stuff that other keypunches made had to be `chad'. There is a
legend that the word was originally acronymic, standing for "Card Hole
Aggregate Debris", but this has all the earmarks of a {backronym}. :chad box:
n. A metal box about the size of a lunchbox (or in some models a large
wastebasket), for collecting the {chad} (sense 2) that accumulated in {Iron
Age} card punches. You had to open the covers of the card punch periodically
and empty the chad box. The {bit bucket} was notionally the equivalent device
in the CPU enclosure, which was typically across the room in another great
gray-and-blue box. :chain: 1. vi. [orig. from BASIC's `CHAIN' statement] To
hand off execution to a child or successor without going through the {OS}
command interpreter that invoked it. The state of the parent program is lost
and there is no returning to it. Though this facility used to be common on
memory-limited micros and is still widely supported for backward
compatibility, the jargon usage is semi-obsolescent; in particular, most Unix
programmers will think of this as an {exec}. Oppose the more modern
`subshell'. 2. n. A series of linked data areas within an operating system or
application. `Chain rattling' is the process of repeatedly running through
the linked data areas searching for one which is of interest to the executing
program. The implication is that there is a very large number of links on the
chain. :channel: n. [IRC] The basic unit of discussion on {IRC}. Once one
joins a channel, everything one types is read by others on that channel.
Channels are named with strings that begin with a `#' sign and can have topic
descriptions (which are generally irrelevant to the actual subject of
discussion). Some notable channels are `#initgame', `#hottub', `callahans',
and `#report'. At times of international crisis, `#report' has hundreds of
members, some of whom take turns listening to various news services and
typing in summaries of the news, or in some cases, giving first-hand accounts
of the action (e.g., Scud missile attacks in Tel Aviv during the Gulf War in
1991). :channel hopping: n. [common; IRC, GEnie] To rapidly switch channels
on {IRC}, or a GEnie chat board, just as a social butterfly might hop from
one group to another at a party. This term may derive from the TV watcher's
idiom, `channel surfing'. :channel op: /chan'l op/ n. [IRC] Someone who is
endowed with privileges on a particular {IRC} channel; commonly abbreviated
`chanop' or `CHOP' or just `op' (as of 2000 these short forms have almost
crowded out the parent usage). These privileges include the right to {kick}
users, to change various status bits, and to make others into CHOPs. :chanop:
/chan'-op/ n. [IRC] see {channel op}. :char: /keir/ or /char/; rarely, /kar/
n. Shorthand for `character'. Esp. used by C programmers, as `char' is C's
typename for character data. :charityware: /cha'rit-ee-weir`/ n. Syn.
{careware}. :chase pointers: 1. vi. To go through multiple levels of
indirection, as in traversing a linked list or graph structure. Used esp. by
programmers in C, where explicit pointers are a very common data type. This
is techspeak, but it remains jargon when used of human networks. "I'm chasing
pointers. Bob said you could tell me who to talk to about...." see {dangling
pointer} and {snap}. 2. [Cambridge] `pointer chase' or `pointer hunt': The
process of going through a {core dump} (sense 1), interactively or on a large
piece of paper printed with hex {runes}, following dynamic data-structures.
Used only in a debugging context. :chawmp: n. [University of Florida] 16 or
18 bits (half of a machine word). This term was used by FORTH hackers during
the late