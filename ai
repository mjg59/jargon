 A display of some sort that's presented to {luser}s to keep them distracted
while the program performs necessary background tasks. "Give 'em some eye
candy while the back-end {slurp}s that {BLOB} into core." Reported as
mainstream usage among players of graphics-heavy computer games. We're also
told this term is mainstream slang for soft pornography, but that sense does
not appear to be live among hackers. :eyeball search: n.,v. To look for
something in a mass of code or data with one's own native optical sensors, as
opposed to using some sort of pattern matching software like {grep} or any
other automated search tool. Also called a {vgrep}; compare {vdiff}, {desk
check}. = F = ===== :face time: n. [common] Time spent interacting with
somebody face-to-face (as opposed to via electronic links). "Oh, yeah, I
spent some face time with him at the last Usenix." :factor: n. see
{coefficient of X}. :fairings: n. /fer'ingz/ [FreeBSD; orig. a typo for
`fairness'] A term thrown out in discussion whenever a completely and
transparently nonsensical argument in one's favor(?) zseems called for, e,g.
at the end of a really long thread for which the outcome is no longer even
cared about since everyone is now so sick of it or in rebuttal to another
nonsensical argument ("Change the loader to look for /kernel.pl? What about
fairings?") :fall over: vi. [IBM] Yet another synonym for {crash} or {lose}.
`Fall over hard' equates to {crash and burn}. :fall through: v. (n.
`fallthrough', var. `fall-through') 1. To exit a loop by exhaustion, i.e., by
having fulfilled its exit condition rather than via a break or exception
condition that exits from the middle of it. This usage appears to be _really_
old, dating from the 1940s and 1950s. 2. To fail a test that would have
passed control to a subroutine or some other distant portion of code. 3. In
C, `fall-through' occurs when the flow of execution in a switch statement
reaches a `case' label other than by jumping there from the switch header,
passing a point where one would normally expect to find a `break'. A trivial
example: switch (color) { case GREEN: do_green(); break; case PINK:
do_pink(); /* FALL THROUGH */ case RED: do_red(); break; default: do_blue();
break; } The variant spelling `/* FALL THRU */' is also common. The effect of
the above code is to `do_green()' when color is `GREEN', `do_red()' when
color is `RED', `do_blue()' on any other color other than `PINK', and (and
this is the important part) `do_pink()' _and then_ `do_red()' when color is
`PINK'. Fall-through is {considered harmful} by some, though there are
contexts (such as the coding of state machines) in which it is natural; it is
generally considered good practice to include a comment highlighting the
fall-through where one would normally expect a break. see also {Duff's
device}. :fan: n. Without qualification, indicates a fan of science fiction,
especially one who goes to {con}s and tends to hang out with other fans. Many
hackers are fans, so this term has been imported from fannish slang; however,
unlike much fannish slang it is recognized by most non-fannish hackers. Among
SF fans the plural is correctly `fen', but this usage is not automatic to
hackers. "Laura reads the stuff occasionally but isn't really a fan."
:fandango on core: n. [Unix/C hackers, from the Iberian dance] In C, a wild
pointer that runs out of bounds, causing a {core dump}, or corrupts the
`malloc(3)' {arena} in such a way as to cause mysterious failures later on,
is sometimes said to have `done a fandango on core'. On low-end personal
machines without an MMU, this can corrupt the OS itself, causing massive
lossage. Other frenetic dances such as the rhumba, cha-cha, or watusi, may be
substituted. see {aliasing bug}, {precedence lossage}, {smash the stack},
{memory leak}, {memory smash}, {overrun screw}, {core}. :FAQ: /F-A-Q/ or
/fak/ n. [Usenet] 1. A Frequently Asked Question. 2. A compendium of
accumulated lore, posted periodically to high-volume newsgroups in an attempt
to forestall such questions. Some people prefer the term `FAQ list' or `FAQL'
/fa'kl/, reserving `FAQ' for sense 1. This lexicon itself serves as a good
example of a collection of one kind of lore, although it is far too big for a
regular FAQ posting. Examples: "What is the proper type of NULL?" and "What's
that funny name for the `#' character?" are both Frequently Asked Questions.
Several FAQs refer readers to this file. :FAQ list: /F-A-Q list/ or /fak
list/ n. [common; Usenet] Syn {FAQ}, sense 2. :FAQL: /fa'kl/ n. Syn. {FAQ
list}. :faradize: /far'*-di:z/ v. [US Geological Survey] To start any
hyper-addictive process or trend, or to continue adding current to such a
trend. Telling one user about a new octo-tetris game you compiled would be a
faradizing act -- in two weeks you might find your entire department playing
the faradic game. :farkled: /far'kld/ adj. [DeVry Institute of Technology,
Atlanta] Syn. {hosed}. Poss. owes something to Yiddish `farblondjet' and/or
the `Farkle Family' skits on "Rowan and Martin's Laugh-In", a popular comedy
show of the late 1960s. :farming: n. [Adelaide University, Australia] What
the heads of a disk drive are said to do when they plow little furrows in the
magnetic media. Associated with a {crash}. Typically used as follows: "Oh no,
the machine has just crashed; I hope the hard drive hasn't gone {farming}
again." No longer common; modern drives automatically park their heads in a
safe zone on power-down, so it takes a real mechanical problem to induce
this. :fascist: adj. 1. [common] Said of a computer system with excessive or
annoying security barriers, usage limits, or access policies. The implication
is that said policies are preventing hackers from getting interesting work
done. The variant `fascistic' seems to have been preferred at MIT, poss. by
analogy with `touristic' (see {tourist} or under the influence of
German/Yiddish `faschistisch'). 2. In the design of languages and other
software tools, `the fascist alternative' is the most restrictive and
structured way of capturing a particular function; the implication is that
this may be desirable in order to simplify the implementation or provide
tighter error checking. Compare {bondage-and-discipline language}, although
that term is global rather than local. :fat electrons: n. Old-time hacker
David Cargill's theory on the causation of computer glitches. Your typical
electric utility draws its line current out of the big generators with a pair
of coil taps located near the top of the dynamo. When the normal tap brushes
get dirty, they take them off line to clean them up, and use special
auxiliary taps on the _bottom_ of the coil. Now, this is a problem, because
when they do that they get not ordinary or `thin' electrons, but the
fat'n'sloppy electrons that are heavier and so settle to the bottom of the
generator. These flow down ordinary wires just fine, but when they have to
turn a sharp corner (as in an integrated-circuit via), they're apt to get
stuck. This is what causes computer glitches. [Fascinating. Obviously, fat
electrons must gain mass by {bogon} absorption --ESR] Compare {bogon}, {magic
smoke}. :faulty: adj. Non-functional; buggy. Same denotation as
{bletcherous}, {losing}, q.v., but the connotation is much milder. :fd leak:
/F-D leek/ n. A kind of programming bug analogous to a {core leak}, in which
a program fails to close file descriptors (`fd's) after file operations are
completed, and thus eventually runs out of them. see {leak}. :fear and
loathing: n. [from Hunter S. Thompson] A state inspired by the prospect of
dealing with certain real-world systems and standards that are totally
{brain-damaged} but ubiquitous -- Intel 8086s, or {COBOL}, or {{EBCDIC}}, or
any {IBM} machine bigger than a workstation. "Ack! They want PCs to be able
to talk to the AI machine. Fear and loathing time!" :feature: n. 1. [common]
A good property or behavior (as of a program). Whether it was intended or not
is immaterial. 2. [common] An intended property or behavior (as of a
program). Whether it is good or not is immaterial (but if bad, it is also a
{misfeature}). 3. A surprising property or behavior; in particular, one that
is purposely inconsistent because it works better that way -- such an
inconsistency is therefore a {feature} and not a {bug}. This kind of feature
is sometimes called a {miswart}; see that entry for a classic example. 4. A
property or behavior that is gratuitous or unnecessary, though perhaps also
impressive or cute. For example, one feature of Common LISP's `format'
function is the ability to print numbers in two different Roman-numeral
formats (see {bells whistles and gongs}). 5. A property or behavior that was
put in to help someone else but that happens to be in your way. 6. [common] A
bug that has been documented. To call something a feature sometimes means the
author of the program did not consider the particular case, and that the
program responded in a way that was unexpected but not strictly incorrect. A
standard joke is that a bug can be turned into a {feature} simply by
documenting it (then theoretically no one can complain about it because it's
in the manual), or even by simply declaring it to be good. "That's not a bug,
that's a feature!" is a common catchphrase. see also {feetch feetch},
{creeping featurism}, {wart}, {green lightning}. The relationship among bugs,
features, misfeatures, warts, and miswarts might be clarified by the
following hypothetical exchange between two hackers on an airliner: A: "This
seat doesn't recline." B: "That's not a bug, that's a feature. There is an
emergency exit door built around the window behind you, and the route has to
be kept clear." A: "Oh. Then it's a misfeature; they should have increased
the spacing between rows here." B: "Yes. But if they'd increased spacing in
only one section it would have been a wart -- they would've had to make
nonstandard-length ceiling panels to fit over the displaced seats." A: "A
miswart, actually. If they increased spacing throughout they'd lose several
rows and a chunk out of the profit margin. So unequal spacing would actually
be the Right Thing." B: "Indeed." `Undocumented feature' is a common,
allegedly humorous euphemism for a {bug}. There's a related joke that is
sometimes referred to as the "one-question geek test". You say to someone "I
saw a Volkswagen Beetle today with a vanity license plate that read