 MIDAS PDP-10 assembler (the same IRP op can nowadays be found in Microsoft's
assembler). :loose bytes: n. Commonwealth hackish term for the padding bytes
or {shim}s many compilers insert between members of a record or structure to
cope with alignment requirements imposed by the machine architecture. :lord
high fixer: n. [primarily British, from Gilbert & Sullivan's `lord high
executioner'] The person in an organization who knows the most about some
aspect of a system. see {wizard}. :lose: [MIT] vi. 1. To fail. A program
loses when it encounters an exceptional condition or fails to work in the
expected manner. 2. To be exceptionally unesthetic or crocky. 3. Of people,
to be obnoxious or unusually stupid (as opposed to ignorant). see also
{deserves to lose}. 4. n. Refers to something that is {losing}, especially in
the phrases "That's a lose!" and "What a lose!" :lose lose: interj. A reply
to or comment on an undesirable situation. "I accidentally deleted all my
files!" "Lose, lose." :loser: n. An unexpectedly bad situation, program,
programmer, or person. Someone who habitually loses. (Even winners can lose
occasionally.) Someone who knows not and knows not that he knows not.
Emphatic forms are `real loser', `total loser', and `complete loser' (but not
**`moby loser', which would be a contradiction in terms). see {luser}.
:losing: adj. Said of anything that is or causes a {lose} or {lossage}.
:loss: n. Something (not a person) that loses; a situation in which something
is losing. Emphatic forms include `moby loss', and `total loss', `complete
loss'. Common interjections are "What a loss!" and "What a moby loss!" Note
that `moby loss' is OK even though **`moby loser' is not used; applied to an
abstract noun, moby is simply a magnifier, whereas when applied to a person
it implies substance and has positive connotations. Compare {lossage}.
:lossage: /los'*j/ n. The result of a bug or malfunction. This is a mass or
collective noun. "What a loss!" and "What lossage!" are nearly synonymous.
The former is slightly more particular to the speaker's present
circumstances; the latter implies a continuing {lose} of which the speaker is
currently a victim. Thus (for example) a temporary hardware failure is a
loss, but bugs in an important tool (like a compiler) are serious lossage.
:lost in the noise: adj. Syn. {lost in the underflow}. This term is from
signal processing, where signals of very small amplitude cannot be separated
from low-intensity noise in the system. Though popular among hackers, it is
not confined to hackerdom; physicists, engineers, astronomers, and
statisticians all use it. :lost in the underflow: adj. Too small to be worth
considering; more specifically, small beyond the limits of accuracy or
measurement. This is a reference to `floating underflow', a condition that
can occur when a floating-point arithmetic processor tries to handle
quantities smaller than its limit of magnitude. It is also a pun on
`undertow' (a kind of fast, cold current that sometimes runs just offshore
and can be dangerous to swimmers). "Well, sure, photon pressure from the
stadium lights alters the path of a thrown baseball, but that effect gets
lost in the underflow." Compare {epsilon}, {epsilon squared}; see also
{overflow bit}. :lots of MIPS but no I/O: adj. Used to describe a person who
is technically brilliant but can't seem to communicate with human beings
effectively. Technically it describes a machine that has lots of processing
power but is bottlenecked on input-output (in 1991, the IBM Rios, a.k.a.
RS/6000, was a notorious example). :low-bandwidth: adj. [from communication
theory] Used to indicate a talk that, although not {content-free}, was not
terribly informative. "That was a low-bandwidth talk, but what can you expect
for an audience of {suit}s!" Compare {zero-content}, {bandwidth}, {math-out}.
:LPT: /L-P-T/ or /lip'it/ or /lip-it'/ n. 1. Line printer (originally Line
Printing Terminal). Rare under Unix, more common among hackers who grew up
with ITS, MS-DOS, CP/M and other operating systems that were strongly
influenced by early {DEC} conventions. 2. Local PorT. Used among MS-DOS
programmers (and so expanded in the MS-DOS 5 manual). It seems likely this is
a {backronym}. :Lubarsky's Law of Cybernetic Entomology: prov. "There is
_always_ one more bug." :Lumber Cartel: n. A mythical conspiracy accused by
{spam}-spewers of funding anti-spam activism in order to force the
direct-mail promotions industry back onto paper. Hackers, predictably,
responded by forming half a dozen "Lumber Cartels" spoofing this paranoid
theory; a representative web page is `http://come.to/the.lumber.cartel'.
Members often include the tag TINLC ("There Is No Lumber Cartel") in their
postings; see {TINC}, {backbone cabal} and {NANA} for explanation. :lunatic
fringe: n. [IBM] Customers who can be relied upon to accept release 1
versions of software. :lurker: n. One of the `silent majority' in a
electronic forum; one who posts occasionally or not at all but is known to
read the group's postings regularly. This term is not pejorative and indeed
is casually used reflexively: "Oh, I'm just lurking." Often used in `the
lurkers', the hypothetical audience for the group's {flamage}-emitting
regulars. When a lurker speaks up for the first time, this is called
`delurking'. The creator of the popular science-fiction TV series "Babylon V"
has ties to SF fandom and the hacker culture. In that series, the use of the
term `lurker' for a homeless or displaced person is a conscious reference to
the jargon term. :luser: /loo'zr/ n. A {user}; esp. one who is also a
{loser}. ({luser} and {loser} are pronounced identically.) This word was
coined around 1975 at MIT. Under ITS, when you first walked up to a terminal
at MIT and typed Control-Z to get the computer's attention, it printed out
some status information, including how many people were already using the
computer; it might print "14 users", for example. Someone thought it would be
a great joke to patch the system to print "14 losers" instead. There ensued a
great controversy, as some of the users didn't particularly want to be called
losers to their faces every time they used the computer. For a while several
hackers struggled covertly, each changing the message behind the back of the
others; any time you logged into the computer it was even money whether it
would say "users" or "losers". Finally, someone tried the compromise
"lusers", and it stuck. Later one of the ITS machines supported `luser' as a
request-for-help command. ITS died the death in mid-1990, except as a museum
piece; the usage lives on, however, and the term `luser' is often seen in
program comments. = M = ===== :M: pref. (on units) suff. (on numbers) [SI]
see {{quantifiers}}. :M$: Common net abbreviation for Microsoft, everybody's
least favorite monopoly. :macdink: /mak'dink/ vt. [from the Apple Macintosh,
which is said to encourage such behavior] To make many incremental and
unnecessary cosmetic changes to a program or file. Often the subject of the
macdinking would be better off without them. "When I left at 11 P.M. last
night, he was still macdinking the slides for his presentation." see also
{fritterware}, {window shopping}. :machinable: adj. Machine-readable. Having
the {softcopy} nature. :machoflops: /mach'oh-flops/ n. [pun on `megaflops', a
coinage for `millions of FLoating-point Operations Per Second'] Refers to
artificially inflated performance figures often quoted by computer
manufacturers. Real applications are lucky to get half the quoted speed. see
{Your mileage may vary}, {benchmark}. :Macintoy: /mak'in-toy/ n. The Apple
Macintosh, considered as a {toy}. Less pejorative than {Macintrash}.
:Macintrash: /mak'in-trash`/ n. The Apple Macintosh, as described by a hacker
who doesn't appreciate being kept away from the _real computer_ by the
interface. The term {maggotbox} has been reported in regular use in the
Research Triangle area of North Carolina. Compare {Macintoy}. see also {beige
toaster}, {WIMP environment}, {point-and-drool interface}, {drool-proof
paper}, {user-friendly}. :macro: /mak'roh/ [techspeak] n. A name (possibly
followed by a formal {arg} list) that is equated to a text or symbolic
expression to which it is to be expanded (possibly with the substitution of
actual arguments) by a macro expander. This definition can be found in any
technical dictionary; what those won't tell you is how the hackish
connotations of the term have changed over time. The term `macro' originated
in early assemblers, which encouraged the use of macros as a structuring and
information-hiding device. During the early 1970s, macro assemblers became
ubiquitous, and sometimes quite as powerful and expensive as {HLL}s, only to
fall from favor as improving compiler technology marginalized assembler
programming (see {languages of choice}). Nowadays the term is most often used
in connection with the C preprocessor, LISP, or one of several
special-purpose languages built around a macro-expansion facility (such as
TeX or Unix's [nt]roff suite). Indeed, the meaning has drifted enough that
the collective `macros' is now sometimes used for code in any special-purpose
application control language (whether or not the language is actually
translated by text expansion), and for macro-like entities such as the
`keyboard macros' supported in some text editors (and PC