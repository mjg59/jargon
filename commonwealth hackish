 642899 characters, and 1239 entries. Version 2.5.1, Jan 29 1991: many new
entries merged in. Discussion of inclusion styles added. This version had
14145 lines, 111904 words, 734285 characters, and 1425 entries. Version
numbering: Read versions as major.minor.revision. Major version 1 is reserved
for the `old' (ITS) Jargon File, jargon-1. Major version 2 encompasses
revisions by ESR with assistance from GLS. Someday, the next maintainer will
take over and spawn `version 3'. In general, later versions will either
completely obsolesce or incorporate earlier versions, so there is generally
no point in keeping old versions around. Our thanks to the other co-authors
of Steele-1983 for oversight and assistance; also to all the USENETters who
contributed entries and encouragement. Special thanks go to our Scandinavian
correspondent Per Lindberg (per@front.se), author of the remarkable Swedish
language 'zine `Hackerbladet', for bringing FOO! comics to our attention and
smuggling one of the IBM hacker underground's own baby jargon files out to
us. Also, much gratitude to ace hacker/linguist Joe Keane (jkg@osc.osc.com)
for helping us improve the pronunciation guides; and to Maarten Litmath for
generously allowing the inclusion of the ASCII pronunciation guide he
formerly maintained. Finally, Mark Brader (msb@sq.sq.com) submitted many
thoughtful comments and did yeoman service in catching typos and minor usage
bobbles. Format For New Entries ====================== Try to conform to the
format already being used --- definitions and cross-references in angle
brackets, pronunciations in slashes, etymologies in square brackets,
single-space after definition numbers and word classes, etc. Stick to the
standard ASCII character set (no high-half characters or [nt]roff/TeX/Scribe
escapes), as one of the versions generated from the master file is an info
document that has to be viewable on a character tty. Please note that as of
2.3.1 the preferred format has changed rather dramatically; please *don't*
all-caps your entry keys any more. Besides preserving case information, this
enables the maintainers to process the File into a rather spiffy [nt]roff
document with font switches via an almost trivial lex(1) program. This is all
in aid of preventing the freely-available on-line document and the book from
diverging. We are looking to expand the file's range of technical specialties
covered. There are doubtless rich veins of jargon yet untapped in the
scientific computing, graphics, and networking hacker communities; also in
numerical analysis, computer architectures and VLSI design, language design,
and many other related fields. Send us your slang! We are *not* interested in
straight technical terms explained by textbooks or technical dictionaries
unless an entry illuminates `underground' meanings or aspects not covered by
official histories. We are also not interested in `joke' entries --- there is
a lot of humor in the file but it must flow naturally out of the explanations
of what hackers do and how they think. It is OK to submit items of slang you
have originated if they have spread to the point of being used by people who
are not personally acquainted with you. We prefer items to be attested by
independent submission from two different sites. A few new definitions
attached to entries are marked [proposed]. These are usually generalizations
suggested by editors or USENET respondents in the process of commenting on
previous definitions of those entries. These are *not* represented as
established jargon. The jargon file will be regularly maintained and
re-posted from now on and will include a version number. Read it, pass it
around, contribute --- this is *your* monument! Jargon Construction
=================== There are some standard methods of jargonification which
became established quite early (i.e. before 1970), spreading from such
sources as the MIT Model Railroad Club, the PDP-1 SPACEWAR hackers, and John
McCarthy's original crew of LISPers. These include: Verb doubling: A standard
construction in English is to double a verb and use it as an exclamation,
such as "Bang, bang!" or "Quack, quack!". Most of these are names for noises.
Hackers also double verbs as a concise, sometimes sarcastic comment on what
the implied subject does. Also, a doubled verb is often used to terminate a
conversation, in the process remarking on the current state of affairs or
what the speaker intends to do next. Typical examples involve <win>, <lose>,
<hack>, <flame>, <barf>, <chomp>: "The disk heads just crashed." "Lose,
lose." "Mostly he talked about his latest crock. Flame, flame." "Boy, what a
bagbiter! Chomp, chomp!" Some verb-doubled constructions have special
meanings not immediately obvious from the verb. These have their own listings
in the lexicon. Soundalike slang: Hackers will often make rhymes or puns in
order to convert an ordinary word or phrase into something more interesting.
It is considered particularly <flavorful> if the phrase is bent so as to
include some other slang word; thus the computer hobbyist magazine `Dr.
Dobb's Journal' is almost always referred to among hackers as `Dr. Frob's
Journal' or simply `Dr. Frob's'. Terms of this kind that have been in fairly
wide use include names for newspapers: Boston Herald American => Horrid (or
Harried) American Boston Globe => Boston Glob San Francisco Chronicle => the
Crocknicle New York Times => New York Slime However, terms like these are
often made up on the spur of the moment. Standard examples include: Prime
Time => Slime Time Data General => Dirty Genitals Government Property - Do
Not Duplicate (seen on keys) => Government Duplicity - Do Not Propagate for
historical reasons => for hysterical raisins Margaret Jacks Hall => Marginal
Hacks Hall This is not really similar to the Cockney rhyming slang it has
been compared to in the past, because Cockney substitutions are opaque
whereas hacker rhyming slang is intentionally transparent. The -P convention:
turning a word into a question by appending the syllable `P'; from the LISP
convention of appending the letter `P' to denote a predicate (a
Boolean-valued function). The question should expect a yes/no answer, though
it needn't. (see T and NIL.) At dinnertime: Q: "Foodp?" A: "Yeah, I'm pretty
hungry." or "T!" Q: "State-of-the-world-P?" A: (Straight) "I'm about to go
home." A: (Humorous) "Yes, the world has a state." On the phone to Florida:
Q: "State-p Florida?" A: "Been reading JARGON.TXT again, eh?" [One of the
best of these is a Gosperism (i.e., due to Bill Gosper). When we were at a
Chinese restaurant, he wanted to know whether someone would like to share
with him a two-person-sized bowl of soup. His inquiry was: "Split-p soup?"
--GLS] Overgeneralization: A very conspicuous feature of hackerspeak is the
frequency with which names of program tools, command language primitives, and
even assembler opcodes are applied to contexts outside of computing wherever
hackers find amusing analogies to them. Thus, (to cite one of the best-known
examples) UNIX hackers often <grep> for things rather than *searching* for
them. Many of the lexicon entries are generalizations of exactly this kind.
Hackers enjoy overgeneralization on the grammatical level as well. Many
hackers love to take various words and add the wrong endings to them to make
nouns and verbs, often by extending a standard rule to nonuniform cases (or
vice versa). For example, because porous => porosity generous => generosity
hackers happily generalize: mysterious => mysteriosity ferrous => ferrocity
obvious => obviosity dubious => dubiosity Also, note that all nouns can be
verbed. e.g.: "All nouns can be verbed", "I'll mouse it up", "Hang on while I
clipboard it over", "I'm grepping the files". English as a whole is already
heading in this direction (towards pure-positional grammar like Chinese);
hackers are simply a bit ahead of the curve. Similarly, all verbs can be
nouned. Thus: win => winnitude, winnage disgust => disgustitude hack =>
hackification Finally, note the prevalence of certain kinds of nonstandard
plural forms. Anything ending in x may form plurals in -xen (see <VAXen> and
<boxen> in the main text). Even words ending in phonetic /k/ alone are
sometimes treated this way; ex. `soxen' for a bunch of socks. Other funny
plurals are `frobbotzim' for the plural of <frobboz> (see main text) and
`Unices' and `Tenices' (rather than `Unixes' and `Tenexes'; see <UNIX>,
<TENEX> in main text). But note that `Unixen' and `Tenexen' are *never* used;
it has been suggested that this is because -ix and -ex are latin singular
endings that attract a Latinate plural. The pattern here, as with other
hackish grammatical quirks, is generalization of an inflectional rule which
(in English) is either an import or a fossil (such as Hebrew plural in `-im',
or the Anglo-Saxon plural in `en') to cases where it isn't normally
considered to apply. This is not `poor grammar', as hackers are generally
quite well aware of what they are doing when they distort the language. It is
grammatical creativity, a form of playfulness. Spoken inarticulations: Words
such as `mumble', `sigh', and `groan' are spoken in places where their
referent might more naturally be used. It has been suggested that this usage
derives from the impossibility of representing such noises on a comm link or
in email. Another expression sometimes heard is "Complain!", meaning "I have
a complaint!" Of the five listed constructions, verb doubling, peculiar noun
formations, and (especially!) spoken inarticulations have become quite
general; but rhyming slang is still largely confined to MIT and other large
universities, and the P convention is found only where LISPers flourish.
Finally, note that many words in hacker jargon have to be understood as
members of sets of comparatives. This is especially true of the adjectives
and nouns used to describe the beauty and functional quality of code. Here is
an approximately correct spectrum: MONSTROSITY BRAIN-DAMAGE SCREW BUG LOSE
MISFEATURE CROCK KLUGE HACK WIN FEATURE ELEGANCE PERFECTION The last is
spoken of as a mythical absolute, approximated but never actually attained.
Coinages for describing <lossage> seem to call forth the very finest in
hackish linguistic inventiveness; it has been truly said that "<Computer
geeks> have more words for equipment failures than Inuit have for snow", or
than Yiddish has for obnoxious people. Hacker Speech Style
=================== Features extremely precise diction, careful word choice,
a relatively large working vocabulary, and relatively little use of
contractions or `street slang'. Dry humor, irony, puns, and a mildly flippant
attitude are highly valued --- but an underlying seriousness and intelligence
is essential. One should use just enough jargon to communicate precisely and
identify oneself as `in the culture'; overuse of jargon or a breathless,
excessively gung-ho attitude are considered tacky and the mark of a loser.
This speech style is a variety of the precisionist English normally spoken by
scientists, design engineers, and academics in technical fields. Unlike the
jargon construction methods, it is fairly constant throughout hackerdom. It
has been observed that many hackers are confused by negative questions ---
or, at least, the people they're talking to are often confused by the sense
of their answers. The problem is that they've done so much coding that
distinguishes between if (going) { and if (!going) { that when they parse the
question "Aren't you going?" it seems to be asking the opposite question from
"Are you going?", and so merits an answer in the opposite sense. This
confuses English-speaking non-hackers because they were taught to answer as
though the negative part weren't there (in some other languages, including
Chinese and Japanese, the hackish interpretation is standard and the problem
wouldn't arise). Hackers often find themselves wishing for a word like French
`si' or German `doch' with which one could unambiguously answer `yes' to a
negative question. For similar reasons, English-speaking hackers almost never
use a double negative even if they live in a region where colloquial usage
allows it. The thought of uttering something that logically ought to be an
affirmative knowing it will be mis-parsed as a negative tends to disturb
them. Hacker Writing Style ==================== Hackers tend to use quotes as
balanced delimiters like parens, much to the dismay of American editors.
Thus, if "Jim is going" is a phrase, and so is "Bill runs" and "Spock groks",
then hackers generally prefer to write: "Jim is going", "Bill runs", and
"Spock groks". This is incorrect according to standard American usage (which
would put the continuation commas and the final period inside the string
quotes) but it is counter-intuitive to hackers to mutilate literal strings
with characters that don't belong in them. Given the sorts of examples that
can come up in discussing programming, American-style quoting can even be
grossly misleading. When communicating command lines or small pieces of code
extra characters can be a real pain in the neck. For example: First do "foo
-acrZ tempo | bar -," then... is different from First do "foo -acrZ tempo |
bar -", then... from a computer's point of view. While the first is correct
according to the stylebooks and would probably be parsed correctly by the a
human recipient, the second is unambiguous. The Jargon File follows hackish
usage consistently throughout. Interestingly, a similar style is now
preferred practice in Great Britain, though the older style (which became
established for typographical reasons having to do with the aesthetics of
comma and quotes in typeset text) is still accepted there. Hart's Rules and
the Oxford Dictionary for Writers and Editors call it `new' or `logical'
style quoting. Another hacker quirk about quoting style is a tendency to
distinguish between `marking' quotes and "speech" quotes; that is, to use
British-style single quotes for emphasis and reserve double quotes for actual
reports of speach or text included from elsewhere. Interestingly, some
authorities describe this as correct general usage, but mainstream American
English has gone to using double-quotes thoroughly enough that hacker usage
appears marked [and, in fact, I thought this was a personal quirk of mine
until I checked with USENET -- ESR]. One further permutation that is
definitely *not* standard is a hackish tendency to do marking quotes by using
apostrophes in pairs; that is, 'like this'. This is modelled on string and
character literal syntax in some programming languages. There seems to be a
meta-rule behind these nonstandard hackerisms to the effect that precision of
expression is more important than conformance to traditional rules; where the
latter create ambiguity or lose information they can be discarded without a
second thought. It is notable in this respect that other hackish inventions
(for example, in vocabulary) also tend to carry very precise shades of
meaning even when constructed to appear slangy and loose. There is another
respect in which hackish usage often parallels British usage; it tends to
choose British spellings whenever these seem more phonetically consistent
than the American ones. For example, a hacker is likely to insist on
(British-style) `signalling' rather than American-standard `signaling' on the
grounds that the latter ought to be pronounced /sig'nay'ling/ rather than
/sig'n@-ling/. Similarly, `travelling' is preferred to `traveling'. Hackers
have also developed a number of punctuation and emphasis conventions adapted
to single-font all-ASCII communications links, and these are occasionally
carried over into written documents even when normal means of font changes,
underlining, and the like are available. One of these is that TEXT IN ALL
CAPS IS INTERPRETED AS `LOUD', and this becomes such a synesthetic reflex
that a person who goes to caps-lock while in <talk mode> (see main text) may
be asked to "stop shouting, please, you're hurting my ears!". Also, it is
common to use bracketing with asterisks to signify emphasis, as in "What the
*hell*?" (mote that this interferes with the common use of asterisk suffix is
a footnote mark). An alternative form uses paired slash and backslash: "What
the \hell/?". The latter is never used in text documents, as many formatters
treat backslash as an <escape> and may do inappropriate things with the
following text. Also note that there is a semantic difference between
*emphasis like this*, (which emphasizes the phrase as a whole) and *emphasis*
*like* *this* (which suggests the writer speaking very slowly and distinctly,
as if to a very young child or mentallly impaired person). In a formula, `*'
signifies multiplication, and two asterisks in a row are a shorthand for
exponentiation (this derives from FORTRAN). Thus, one might write `2 ** 8 =
256'. Another notation for exponentiation one sees more frequently uses the
caret (^, ASCII 1011110); one might write instead `2 ^ 8 = 256'. This goes
all the way back to Algol-60, which used the archaic ASCII `up-arrow' that
later became caret; this was picked up by Kemeny & Kurtz's original BASIC,
which in turn influenced the design of the bc(1) and dc(1) UNIX tools that
have probably done most to reinforce the convention on USENET. The notation
is mildly confusing to C programmers, because `^' means logical <XOR> in C.
Despite this, it was favored 3--1 over ** in a late-1990 snapshot of USENET.
It is used consistently in this text. Another on-line convention, used
especially for very large or very small numbers, is taken from C (which
derived it from FORTRAN). This is a form of `scientific notation' using `e'
to replace `*10^'; for example, one year is about 3e7 seconds long. The tilde
(`~') is commonly used in its mathematical sense of `approximately'; that is,
`~50' means "about fifty". Underlining is often suggested by substituting
underscores for spaces and prepending and appending one underscore to the
underlined phrase. Example: "It is often alleged that Haldeman wrote
_The_Forever_War_ in response to Robert Heinlein's earlier
_Starship_Troopers_" On USENET and in the <MUD> world common C boolean
operators (`|, !, ==, !=, >, <') are often combined with English by analogy
with mainstream usage of &. The Pascal not-equals, `<>', is also recognized.
The use of prefix `!' as a loose synonym for `not-' or `no-' is particularly
common; thus, `!clue' is read `no-clue' or `clueless'. Another habit is that
of using enclosure to genericize a term; this derives from conventions used
in <BNF>. Uses like the following are common: So this <ethnic> walks into a
bar one day, and... In flat-ASCII renderings of the Jargon File, you will see
<> used in exactly this way to bracket words which themselves have entries in
the File. This isn't done all the time for every such word, but it is done
everywhere that the reader needs specially to be aware that the term has a
jargon meaning and might wish to refer to its entry. One quirk that shows up
frequently in the <email> style of UNIX hackers in particular is a tendency
for some things which are normally all-lowercase (including usernames and the
names of commands and C routines) to remain uncapitalized even when they
occur at the beginning of sentences. It is clear that, for many hackers, the
case of such identifiers becomes a part of their internal representation (the
"spelling") and cannot be overridden without mental effort (an appropriate
reflex because UNIX and C both distinguish cases and confusing them can lead
to lossage). Another way of dealing with this is simply to avoid using these
constructions at the beginning of sentences. Finally, it should be noted that
hackers exhibit much less reluctance to use multiply-nested parentheses than
is normal in English. Partly this is almost certainly due to influence from
LISP ((which uses deeply nested parentheses (like this) in its syntax) (a lot
(see?))), but it has also been suggested that a more basic hacker trait of
enjoying playing with complexity and pushing systems to their limits is in
operation. One area where hackish conventions for on-line writing are still
in some flux is the marking of included material from earlier messages ---
what would be called `block quotations' in ordinary English. From the usual
typographic convention employed for these (smaller font at an extra indent)
there derived the notation of included text being indented by one ASCII TAB
(0001001) character, which under UNIX and many other environments gives the
appearance of an 8-space indent. Early mail and netnews readers had no
facility for including messages this way, so people had to paste in copy
manually. BSD `Mail(1)' was the first message agent to support inclusion, and
early USENETters emulated its style. But the TAB character tended to push
included text too far to the right (especially in multiply nested
inclusions), leading to ugly wraparounds. After a brief period of confusion
(during which an inclusion leader consisting of three or four spaces became
established in EMACS and a few mailers), the use of leading ">" or "> "
became standard, perhaps because the character suggests movement to the right
(alternatively, it may derve from the ">" that some V7 UNIX mailers use to
quote leading instances of "From" in text). Inclusions within inclusions keep
their > leaders, so the `nesting level' of a quotation is visuallly apparent.
Now, it was rapidly observed that the practice of including text helped solve
what had been a major nuisance on USENET: the fact that articles do not
arrive at different sites in the same order. Careless posters used to post
articles that would begin with, or even consist entirely of, "No, that's
wrong", or "I agree" or the like. It was hard to see who was responding to
what. Consequently, in about 1984, new news posting software was created with
a facility to automatically include the text of a previous article, marked
with "> " or whatever the poster chose. The poster was expected to delete all
but the relevant lines. The result has been that, now, careless posters post
articles containing the *entire* text of a preceding article, *followed* only
by "No, that's wrong" or "I agree". Many people feel that this cure is worse
than the original disease, and there soon appeared newsreader software
designed to let the reader skip over included text if desired. Today, some
posting software rejects articles containing too high a proportion of lines
beginning with ">", but this too has led to undesirable workarounds such as
the deliberate inclusion of zero-content filler lines which aren't quoted and
thus pull the message below the rejection threshold. Because the default
mailers supplied with UNIX and other operating systems haven't evolved as
quickly as human usage, the older conventions using a leading TAB or three or
four spaces are still alive; however, >-inclusion is now clearly the
preferred form in both netnews and mail. Practice is still evolving. One
variant style reported uses the citation character `|' in place of `>' for
extended quotations where original variations in indentation are being
retained. One also sees different styles of quoting a number of authors in
the same message: one (deprecated because it loses information) uses a leader
of "> " for everyone, another (the most common) is "> > > > ", "> > > ", etc.
(or ">>>> ", ">>> ", etc., depending on line length and nesting depth)
reflecting the original order of messages, and yet another is to use a
different citation leader for each author, say "> ", ": ", "| ", "} "
(preserving nesting so that the inclusion order of messages is still
apparent, or tagging the inclusions with authors' names). Yet *another* style
is to use each poster's initials (or login name) as a citation leader for
that poster. Occasionally one sees a "# " leader used for quotations from
*authoritative* sources such as standards documents; the intended connotation
is to the root prompt. International Style =================== Although the
Jargon File remains primarily a lexicon of hacker usage in American English,
we have made some effort to get input from abroad. Though the hacker-speak of
other languages often uses translations of English slang (often as
transmitted to them by earlier Jargon File versions!) the local variations
are interesting, and knowledge of them may be of some use to travelling
hackers. There are some references to `Commonwealth English'. These are
intended to describe some variations in hacker usage as reported in the
English spoken in Great Britain and the Commonwealth (Canada, Australia,
India, etc., though Canada is heavily influenced by American usage). There is
also an entry on COMMONWEALTH HACKISH, which see. Hackers in Western Europe
and (especially) Scandinavia are reported to often use a mixture of English
and their native languages for technical conversation. Occasionally they
develop idioms in their English usage which are influenced by their
native-language styles. Some of these are reported here. A note or two on
hackish usages in Russian have been added where they are parallel with and
comprehensible to English-speakers. UNIX Conventions ================
References such as `malloc(3)' and `patch(1)' are to UNIX facilities (some of
which, such as patch(1), are actually freeware distributed over USENET). The
UNIX manuals use `foo(n)' to refer to item foo in section (n) of the manual,
where n=1 is utilities, n=2 is system calls, n=3 is C library routines, n=6
is games, and n=8 (where present) is system administration utilities.
Sections 4, 5, and 7 have changed roles frequently and in any case are not
referred to from any of the entries. Pronunciation Guide ===================
Pronunciation keys are provided in the jargon listing for all entries that
are neither dictionary words pronounced as in standard English nor obvious
compounds of same. Slashes bracket a phonetic pronunciation to be interpreted
using the following conventions: 1. Syllables are hyphen-separated, except
that an apostrophe or back-apostrophe follows each accented syllable (the
back apostrophe marks a secondary accent in some words of four or more
syllables). 2. Consonants are pronounced as in American English. The letter
"g" is always hard (as in "got" rather than "giant"); "ch" is soft ("church"
rather than "chemist"). The letter "j" is the sound that occurs twice in
"judge". The letter "s" is always as in "pass", never a z sound (but it is
sometimes doubled at the end of syllables to emphasize this). The digraph
`kh' is the guttural of `loch' or `l'chaim'. 3. Vowels are represented as
follows: a back, that ah father, palm ar far, mark aw flaw, caught ay bake,
rain e less, men ee easy, ski eir their, software i trip, hit ie life, sky o
cot, top oh flow, sew oo loot, through or more, door ow out, how oy boy, coin
uh but, some u put, foot y yet yoo few [y]oo oo with optional fronting as in
`news' (noos or nyoos) An at-sign is used for the `schwa' sound of unstressed
or occluded vowels (the one that is often written with an upside-down `e').
The schwa vowel is omitted in syllables containing vocalic r, l, m or n; that
is, `kitten' and `color' would be rendered /kit'n/ and /kuhl'r/, not /kit'@n/
and /kuhl'@r/. Entries are sorted in case-blind ASCII collation order (rather
than the letter-by-letter order ignoring interword spacing common in
mainstream dictionaries). The case-blindness is a feature, not a bug. The
Jargon Lexicon ****************** {= [^A-Za-z] (see <regexp>) =} <@-party>
/at'par`tee/ [from the @-sign in an Internet address] n. (also `@-sign party'
/at'sien par`tee/) Semi-closed parties thrown at SF conventions (esp. the
annual Worldcon) for hackers; one must have a <network address> to get in, or
at least be in company with someone who does. One of the most reliable
opportunities for hackers to meet face to face with people who might
otherwise be represented by mere phosphor dots on their screens. Compare
<boink>. <@Begin> [primarily CMU] n. Scribe-influenced equivalent of
<\begin>. <'Snooze> [Fidonet] n. Fidonews, the weekly official on-line
newsletter of Fidonet. As the editorial policy of Fidonews is "anything that
arrives, we print", there are often large articles completely unrelated to
Fidonet, which in turn tend to elicit <flamage> in subsequent issues. <(tm)>
[USENET] ASCII rendition of the trademark symbol, appended to phrases that
the author feels should be recorded for posterity, perhaps in the Jargon
File. Sometimes used ironically as a form of protest against the recent spate
of software and algorithm patents, and `look and feel' lawsuits. </dev/null>
/dev-nuhl/ [from the UNIX null device, used as a data sink] n. A notional
`black hole' in any information space being discussed, used or referred to. A
controversial posting, for example, might end "Kudos to rasputin@kremlin.org,
flames to /dev/null". see <bit bucket>, <null device>. <120 reset> n. To
cycle power on a machine in order to reset or unjam it. Compare <Big Red
Switch>, <power cycle>. <2 (infix)> n. In translation software written by
hackers, infix 2 often represents the syllable to with the connotation
"translate to"; as in dvi2ps (DVI to PostScript), int2string (integer to
string) and texi2roff (Texinfo to [nt]roff). <\begin> with \end, used
humorously in writing to indicate a context or to remark on the surrounded
text. From the LaTeX command of the same name. For example: \begin{Flame}
Predicate logic is the only good programming language. Anyone who would use
anything else is an idiot. Also, computers should be tredecimal instead of
binary. \end{Flame} The Scribe users at CMU and elsewhere used to use
@Begin/@End in an identical way. On USENET, this construct would more
frequently be rendered as "<FLAME ON>" and "<FLAME OFF>". {= A =}
<accumulator> n. Archaic term for a register. Cited here because on-line use
of it is a fairly reliable indication that the user has been around for quite
a while, and/or the architecture under discussion is quite old. The term in
full is never used of microprocessor registers, for example, though symbolic
names for arithmetic registers beginning in A derive from historical use of
`accumulator' (and not, actually, from `arithmetic'!). Confusingly, though,
an `A' register name prefix may also stand for `address', as for example on
the Motorola 680x0 family. <ACK> /ak/ interj. 1. [from the ASCII mnemonic for
0000110] Acknowledge. Used to register one's presence (compare mainstream
Yo!). An appropriate response to <ping> or <ENQ>. 2. [prob. from the Bloom
County comic strip] An exclamation of surprised disgust, esp. in "Oop ack!".
Semi-humorous. 3. Used to politely interrupt someone to tell them you
understand their point. see <NAK>. Thus, for example, you might cut off an
overly long explanation with "Ack. Ack. Ack. I get it now". see also <NAK>.
There is also a usage "ACK?" (from sense #1) meaning "Are you there?", often
used in email when earlier mail has produced no reply, or during a lull in
<talk mode> to see if the person has gone away (the standard humorous
response is of course <NAK> (sense #2), i.e., "I'm not here"). <adger>
/adj'r/ [UCLA] vt. To make a bonehead move with consequences that could have
been foreseen with a slight amount of mental effort. E.g., "He started
removing files and promptly adgered the whole project." Compare <dumbass
attack>. <ad-hockery> /ad-hok'@r-ee/ [Purdue] n. 1. Gratuitous assumptions
made inside certain programs, esp. expert systems, which lead to the
appearance of semi-intelligent behavior, but are in fact entirely arbitrary.
2. Special-case code to cope with some awkward input which would otherwise
cause a program to <choke>, presuming normal inputs are dealt with in some
cleaner and more regular way. Also called "ad-hackery". <Ada> n. A
<Pascal>-descended language that has been made mandatory for Department of
Defense software projects by the Pentagon. Hackers are nearly unanimous in
observing that, technically, it is precisely what one might expect given that
kind of endorsement by fiat; designed by committee, crockish, difficult to
use, and overall a disasterous, multi-billion-dollar boondoggle (one common
description is "The PL/1 of the 1980s"; hackers find the exception handling
and inter-process communication features particularly risible). Ada Lovelace
(the niece of the poet Lord Byron who became the world's first programmer
while cooperating with Babbage on the design of his mechanical computing
engines in the mid-1800s) would certainly blanch at the use her name has been
latterly put to; the kindest thing that has been said about it it is that
there is probably a good small language screaming to get out from inside its
vast, <elephantine> bulk. <ADVENT> /ad'vent/ n. The prototypical computer
adventure game, first implemented on the <PDP-10> by Will Crowther as an
attempt at computer-refereed fantasy gaming, and expanded into a
puzzle-oriented game by Don Woods. Now bet<ter known as Adventure, but the
<TOPS-10> operating system only permitted 6-letter filenames. This game
defined the terse, dryly humorous style now expected in text adventure games
and popularized several tag lines that have become fixtures of hacker-speak.
"A huge green fierce snake bars the way!" "I see no X here." (for X some
noun). "You are in a maze of twisty little passages, all alike." "You are in
a little maze of twisty passages, all different." The "magic words" <xyzzy>
and <plugh> also derive from this game. Crowther, by the way, participated in
the exploration of the Mammoth/Flint Ridge cave system; it actually *has* a
`Colossal Cave' and a `Bedquilt' as in the game, and the `Y2' that also turns
up is cavers' jargon for a map reference to a secondary entrance. <AI koans>
pl.n. A series of pastiches of Zen teaching riddles created by Danny Hillis
at the MIT AI Lab around various major figures of the Lab's culture. A
selection are included in Appendix A. see also <ha ha only serious> and
HUMOR, HACKER. <AIDS> /ayds/ n. Short for A* Infected Disk Syndrome ("A*"
matches, but not limited to, Apple), this condition is the quite often the
result of practicing unsafe <SEX>. see <virus>, <worm>, <trojan horse>
<airplane rule> n. "Complexity increases the possibility of failure; a
twin-engine aeroplane has twice as many engine problems as a single engine
aeroplane." By analogy, in both software and electronics, the rule that
simplicity increases robustness (see also <Keep It Simple, Stupid>. It is
correspondingly argued that the right way to build reliable systems is to put
all your design eggs in one basket and then build a *really good* basket.
<aliasing bug> [C programmers] n. A class of subtle programming errors which
can arise in code that does dynamic allocation, esp. via `malloc(3)'. If more
than one pointer addresses (`aliases for') a given hunk of storage, it may
happen that the storage is freed through one alias and then referenced
through another, leading to subtle (and possibly intermittent) lossage
depending on the state and the allocation history of the malloc <arena>.
Avoidable by use of allocation strategies that never alias allocated core.
Also avoidable by use of higher-level languages such as <LISP> which employ a
garbage collector (see <GC>). Also called a <stale pointer bug>. see also
<precedence lossage>, <smash the stack>, <fandango on core>, <memory leak>,
<overrun screw>, <spam>. <all-elbows> adj. Of a TSR
(terminate-and-stay-resident) IBM PC program, such as the N pop-up calendar
and calculator utilities that circulate on <BBS> systems: unsociable. Used to
describe a program that rudely steals the resources that it needs without
considering that other TSRs may also be resident. One particularly common
form of rudeness is lock-up due to programs fighting over the keyboard
interrupt. see also <mess-doss>. <ALT> /awlt/ [PDP-10] n.obs. Alternate name
for the ASCII ESC character, after the keycap labeling on some older
terminals. Also "ALTMODE". This character was almost never pronounced
"escape" on an ITS system, in TECO, or under TOPS-10 --- always ALT, as in
"Type ALT ALT to end a TECO command" or "ALT U onto the system" (for "log
onto the [ITS] system"). This was probably because ALT is more convenient to
say than "escape", especially when followed by another ALT or a character (or
another ALT *and* a character, for that matter!). <alt bit> /alt bit/ [from
alternate] adj. see <meta bit>. <Aluminum Book> [MIT] n. `Common Lisp: The
Language', by Guy L. Steele Jr., Digital Press, first edition, 1984, second
edition 1990. Strictly speaking, only the first edition is the aluminum book,
since the second edition has a yucky pale green cover. see also <Blue Book>,
<Red Book>, <Green Book>, <Silver Book>, <Purple Book>, <Orange Book>, <White
Book>, <Pink-Shirt Book>, <Dragon Book>. <amoeba> /@-mee'b@/ n. Humorous term
for the Commodore Amiga personal computer. <amp off> [Purdue] vt. To run in
<background>. From the UNIX shell `&' operator. <angle brackets> n. Either of
the characters `<' and `>' (ASCII less-than or greater-than signs). The <Real
World> angle brackets used by typographers are actually taller than a
less-than or greater-than sign. see <broket>, <ASCII>. <AOS> 1. /aws/ (East
coast), /ay-os/ (West coast) [based on a PDP-10 increment instruction]
vt.,obs. To increase the amount of something. "Aos the campfire." Usage:
considered silly, and now obsolescent. see <SOS>. Now largely supplanted by
<bump>. 2. A crufty <Multics>-derived OS supported at one time by Data
General. This was pronounced /ay-oh-ess/ or /ay-ahs/, the latter being
prevalent internally at DG. A spoof of the standard AOS system
administrator's manual (`How to load and generate your AOS system') was
created, issued a part number, and allegedly released. It was called `How to
goad and levitate your chaos system'. Historical note: AOS in sense #1 was
the name of a <PDP-10> instruction that took any memory location in the
computer and added one to it; AOS meant "Add One and do not Skip". Why, you
may ask, does the "S" stand for "do not Skip" rather than for "Skip"? Ah,
here was a beloved piece of PDP-10 folklore. There were eight such
instructions: AOSE added one and then skipped the next instruction if the
result was Equal to zero; AOSG added one and then skipped if the result was
Greater than zero; AOSN added one and then skipped if the result was Not
zero; AOSA added one and then skipped Always; and so on. Just plain AOS
didn't say when to skip, so it never skipped. For similar reasons, AOJ meant
"Add One and do not Jump". Even more bizarre, SKIP meant "do not SKIP"! If
you wanted to skip the next instruction, you had to say "SKIPA". Likewise,
JUMP means "do not JUMP". Such were the perverse mysteries of assembler
programming. <app> /ap/ n. Short for "application program", as opposed to a
systems program. What systems vendors are forever chasing developers to do
for their environments so they can sell more boxes. Hackers tend not to think
of the things they themselves run as apps; thus, in hacker parlance the term
excludes compilers, program editors, games, and messaging systems, though a
user would consider all those apps. Oppose <tool>, <operating system>. <arc>
[primarily MSDOS] vt. to create a compressed archive from a group of files
using the SEA ARC, PKWare PKARC, or compatible program. Rapidly becoming
obsolete as the ARC compression method is falling into disuse, having been
replaced by newer compression techniques. see <tar and feather>, <zip>. <arc
wars> [primarily MSDOS] n. <holy wars> over which archiving program one
should use. The first arc war was sparked when System Enhancement Associates
(SEA) sued PKWare for copyright and trademark infringement on its ARC
program. PKWare's PKARC outperformed ARC on both compression and speed while
largely retaining compatibility (it introduced a new compression type which
could be disabled for backward-compatibility). PKWare settled out of court to
avoid enormous legal costs (both SEA and PKWare are small companies); as part
of the settlement, it was prohibited from distributing ARC-compatible
archivers in the future. The public backlash against SEA for bringing suit
helped to hasten the demise of ARC as a standard when PKWare and others
introduced new, incompatible but better-compressing, archivers. <arena>
[UNIX] n. The area of memory attached to a process by `brk(2)' and `sbrk(2)'
and used by `malloc(3)' as dynamic storage. So named from a semi-mythical
`malloc: corrupt arena' message supposedly emitted when some early versions
became terminally confused. see <overrun screw>, <aliasing bug>, <memory
leak>, <smash the stack>. <arg> /arg/ n. Abbreviation for "argument" (to a
function), used so often as to have become a new word (like `piano' from
`pianoforte'). "The sine function takes one arg, but the arc-tangent function
can take either one or two args". Compare <param>, <var>. <armor-plated> n.
Syn. for <bulletproof>. <asbestos cork award> n. Once, long ago at MIT, there
was a <flamer> so consistently obnoxious that another hacker designed, had
made, and distributed posters announcing that said flamer had been nominated
for the "asbestos cork award". Persons in any doubt as to the intended
application of the cork should consult the etymology under <flame>. Since
then, it is agreed that only a select few have risen to the heights of
bombast required to earn this dubious dignity --- but there's no agreement on
*which* few. <asbestos longjohns> n. Metaphoric garments often donned by
<USENET> posters just before emitting a remark they expect will elicit
<flamage>. Also "asbestos underwear", "asbestos overcoat", etc. <ASCII>
[American Standard Code for Information Interchange] /as'kee/ n. Common slang
names for ASCII characters are collected here. see individual entries for
<bang>, <close>, <excl>, <open>, <ques>, <semi>, <shriek>, <splat>,
<twiddle>, <what>, <wow>, and <Yu-Shiang whole fish>. This list derives from
revision 2.2 of the USENET ASCII pronunciation guide. Single characters are
listed in ASCII order; character pairs are sorted in by first member. For
each character, common names are given in rough order of popularity followed
by names which are reported but rarely seen; official ANSI/CCIT names are
parenthesized. `!' Common: <bang>, pling, excl shriek, (exclamation point).
Rare: factorial, exclam, smash, cuss, boing, yell, wow, hey, wham,
spot-spark, soldier.. `"' Common: double quote, quote. Rare: literal mark,
double-glitch, (quotation marks), (diaresis), dirk.. `#' Common: (number
sign), pound, hash, sharp, <crunch>, mesh, hex. Rare: flash, crosshatch,
grid, pig-pen, tictactoe, scratchmark, octothorpe, thud, <splat>.. `$'
Common: dollar, (dollar sign). Rare: currency symbol, buck, cash, string
(from BASIC), escape (from <TOPS-10>), ding, cache.. `%' Common: percent,
(percent sign), mod, grapes.. `&' Common: (ampersand), amper, and. Rare:
address (from C), reference (from C++), andpersand, bitand, background (from
`sh(1)'), pretzel.. `" Common: single quote, quote, (apostrophe). Rare:
prime, glitch, tick, irk, pop, spark, (closing single quotation mark), (acute
accent).. `()' Common: left/right paren, left/right parenthesis, left/right,
paren/thesis, open/close paren, open/close, open/close parenthesis,
left/right banana. Rare: lparen/rparen, so/already, wax/wane,
(opening/closing parenthesis), left/right ear, parenthisey/unparenthisey,
open/close round bracket.. `*' Common: star, <splat>, (asterisk). Rare:
wildcard, gear, dingle, mult, spider, aster, times, twinkle, glob (see
<glob>), <Nathan Hale>.. `+' Common: (plus), add. Rare: cross.. `,' Common:
(comma). Rate: (cedilla).. `-' Common: dash, (hyphen), (minus). Rare: worm,
option, dak, bithorpe.. `.' Common: dot, point, (period), (decimal point),
Rare: radix point, full stop.. `/' Common: slash, stroke, (slant), forward
slash. Rare: diagonal, solidus, over, slak, virgule.. `:' Common: (colon).
Rare: two-spot.. `;' Common: (semicolon), semi. Rare: weenie.. `<>' Common:
(less/greater than), left/right angle bracket, bra/ket, left/right broket.
Rare: from/{into,towards}, read from/write to, suck/blow, comes-from/gozinta,
in/out, crunch/zap (all from UNIX). `=' Common: (equals), gets. Rare:
quadrathorpe.. `?' Common: query, (question mark), <ques>. Rare: whatmark,
what, wildchar, huh, hook, buttonhook, hunchback.. `@' Common: at-sign, at,
strudel. Rare: each, vortex, whorl, cyclone, snail, ape, cat, rose, cabbage,
(commercial at).. `V' Rare: vee, book.. `[]' Common: left/right square
bracket, (opening/closing bracket), bracket/unbracket left/right bracket,
Rare: square/unsquare.. `\' Common: backslash, escape (from C/UNIX), reverse
slash, slosh, backslant. Rare: bash, backwhack, (reversed slant), reversed
virgule.. `^' Common: hat, control, (as in `control to'), uparrow, (caret).
Rare: (circumflex), chevron, shark (or shark fin), to (`to the power of'),
fang.. `_' Common: (underline), underscore, underbar, under. Rare: score,
backarrow.. "' Common: backquote, left quote, open quote, (grave accent),
grave. Rare: backprime, backspark, unapostrophe, birk, blugle, back tick,
back glitch, push, (opening single quotation mark).. `{}' Common: open/close
brace, left/right brace, left/right squiggly bracket, (opening/closing
brace), left/right curly bracket. Rare: brace/unbrace, curly/uncurly,
leftit/rytit.. `|' Common: bar, or, or-bar, v-bar, pipe. Rare: vertical bar,
(vertical line), gozinta, thru, pipesinta (last three ones from UNIX).. `~'
Common: (tilde), squiggle, <twiddle>, not. Rare: approx, wiggle, swung dash,
enyay, sqiggle. The pronunciation of `#' as `pound' is common in the U.S. but
a bad idea; Commonwealth hackish has its own rather more apposite use of
`pound'. The U.S. practice seems to derive from an old-time habit of using
`#' to tag pound weights on bills of lading. The character is usually
pronounced `hash' outside the U.S. Also note that the `swung dash' or
`approx' sign is not quite the same as tilde in typeset material, but the
ASCII tilde serves for both (compare <angle brackets>). Some other common
usages cause odd overlaps. The `#', `$', `>' and `&' chars, for example, are
all pronounced "hex" in different communities because various assemblers use
them as a prefix tag for hexadecimal constants (in particular, $ in the 6502
world, > at Texas Instruments, and & on the Sinclair and some other Z80
machines). <asymptotic> adj. Infinitely close to. This is used in a
generalization of its mathematical meaning to allege that something is
<within epsilon of> some standard, reference, or goal (see <epsilon>).
<autobogotiphobia> /aw'to-boh-got'@-foh`bee-uh/ n. see <bogotify>.
<automagically> /aw-toh-maj'i-klee/ or /aw-toh-maj'i-k@l-ee/ adv.
Automatically, but in a way which, for some reason (typically because it is
too complicated, or too ugly, or perhaps even too trivial), the speaker
doesn't feel like explaining to you. see <magic>. "The C-INTERCAL compiler
generates C, then automagically invokes `cc(1)' to produce an executable."
<awk> 1. n. [UNIX] An interpreted language developed by Aho, Weinberg and
Kernighan (the name is from their initials). characterized by: C-like syntax,
a BASIC-like approach to variable typing and declarations, associative
arrays, and field-oriented text processing. see also <Perl>. 2. Editing term
for an expression awkward to manipulate through normal regular expression
facilities. 2. vt. To process data using `awk(1)'. {= B =} <backbone cabal>
n. A group of large-site administrators who pushed through the <Great
Renaming> and reined in the chaos of <USENET> during most of the 1980s. The
cabal <mailing list> disbanded in late 1988 after a bitter internal catfight,
but the net hardly noticed. <backbone site> n. A key USENET and email site;
one which processes a large amount of third-party traffic, especially if it's
the home site of any of the regional coordinators for the USENET maps.
Notable backbone sites as of early 1991 include "uunet" and the mail machines
at Rutgers University, UC Berkeley, DEC's Western Research Laboratories, Ohio
State University, and the University of Texas. Compare <rib site>, <leaf
site>. <back door> n. A hole in the security of a system deliberately left in
place by designers or maintainers. The motivation for this is not always
sinister; some operating systems, for example, come out of the box with
privileged accounts intended for use by field service or the vendor's
maintenance programmers. Historically, back doors have often lurked in
systems longer than anyone expected or planned, and a few have become widely
known. The famous RTM worm of late 1988, for example, used a back door in the
<BSD UNIX> `sendmail(1)' utility. Ken Thompson's 1983 Turing Award lecture to
the ACM revealed the existence of a back door in early UNIX versions that may
have qualified as the most fiendishly clever security hack of all time. The
binaries of the C compiler had code in them which a) would automatically
patch itself into the output executable whenver whenever the compiler itself
was being recompiled, b) would also patch the `login' command, when *it* was
being recompiled, to accept a password that gave Thompson entry to the
computer whether or not an account had been created for him! This back door
was propagated through hundreds of machines without any clue to it ever
showing up in source. Syn. <trap door>; may also be called a "wormhole". see
also <iron box>, <cracker>, <worm>, <logic bomb>. <background> vt.,adj. A
task running in background is detached from the terminal where it was started
(and often running at a lower priority); oppose <foreground>. Nowadays this
term is primarily associated with <UNIX>, but it appears first to have been
used in this sense on OS/360. By extension, to do a task "in background" is
to do it whenever <foreground> matters are not claiming your undivided
attention, and "to background" something means to relegate it to a lower
priority. Note that this implies ongoing activity but at a reduced level or
in spare time, in contrast to mainstream `back burner' which connotes benign
neglect until some future resumption of activity. Compare <amp off>,
<slopsucker>. <backspace and overstrike> interj. Whoa! Back up. Used to
suggest that someone just said or did something wrong. Common among APL
programmers. <BAD> [IBM; acronym, Broken As Designed] adj. Said of a program
which is <bogus> due to bad design and misfeatures rather than due to
bugginess. see <working as designed>. <Bad Thing> [from the 1962 Sellars &
Yeatman parody `1066 and All That'] n. Something which can't possibly result
in improvement of the subject. This term is always capitalized, as in
"Replacing all of the 9600 baud modems with bicycle couriers would be a Bad
Thing." Oppose <Good Thing>. British correspondents confirm that <Bad Thing>
and <Good Thing> (and prob. therefore <Right Thing> and <Wrong Thing>) come
from the book referenced in the etymology, which discusses rulers who were
Good Kings, but Bad Things. This has apparently created a mainstream idiom on
their side of the pond. <bagbiter> /bag'biet-@r/ n. 1. Something, such as a
program or a computer, that fails to work, or works in a remarkably clumsy
manner. Example: "This text editor won't let me make a file with a line
longer than 80 characters! What a bagbiter!" 2. A person who has caused you
some trouble, inadvertently or otherwise, typically by failing to program the
computer properly. Synonyms: <loser>, <cretin>, <chomper>. 3. Also in the
form "bagbiting" adj. Having the quality of a bagbiter. "This bagbiting
system won't let me compute the factorial of a negative number." Compare
<losing>, <cretinous>, <bletcherous>, <barfucious> and "chomping" (under
<chomp>). 4. "bite the bag" vi. To fail in some manner. "The computer keeps
crashing every five minutes." "Yes, the disk controller is really biting the
bag." The original loading of these terms was almost undoubtedly obscene,
possibly referring to the scrotum, but in their current usage they have
become almost completely sanitized. <bamf> /bamf/ 1. [from old X-men comics]
interj. Notional sound made by a person or object teleporting in or out of
the hearer's vicinity. Often used in <virtual reality> (esp. <MUD>)
electronic fora when a character wishes to make a dramatic entrance or exit.
2. [from `Don Washington's Survival Guide'] n. Acronym for `Bad-Ass Mother
Fucker', used to refer to one of the handful of nastiest monsters on an LPMUD
or similar MUD. <banana label> n. The labels often used on the sides of
<macrotape> reels, so called because they're shaped roughly like blunt-ended
bananas. This term, like macrotapes themselves, is still current but visibly
headed for obsolescence. <banana problem> n. [from the story of the little
girl who said "I know how to spell `banana', but I don't know when to stop"].
Not knowing where or when to bring a production to a close. One may say there
is a banana problem of an algorithm with poorly defined or incorrect
termination conditions, or in discussing the evolution of a design that may
be succumbing to featuritis (see also <creeping elegance>). <bandwidth> n. 1.
Used by hackers in a generalization of its technical meaning as the volume of
information per unit time that a computer, person or transmission medium can
handle. "Those are amazing graphics but I missed some of the detail --- not
enough bandwidth, I guess." 2. Attention span. 3. On <USENET>, a measure of
network capacity that is often wasted by people complaining about how network
news items posted by others are a waste of bandwidth. <bang> 1. n. Common
spoken name for `!' (ASCII 0100001), especially when used in pronouncing a
<bang path> in spoken hackish. In elder days this was considered a CMUish
usage, with MIT and Stanford hackers preferring <excl> or <shriek>; but the
spread of UNIX has carried <bang> with it (esp. via the term <bang path>) and
it is now certainly the most common spoken name for `!'. Note that it is used
exclusively for non-emphatic written `!'; one would not say "Congratulations
bang" (except possibly for humorous purposes), but if one wanted to specify
the exact characters `FOO!', one would speak "Eff oh oh bang". see <shriek>,
<ASCII>. 2. interj. An exclamation signifying roughly "I have achieved
enlightenment!", or "The dynamite has cleared out my brain!". Often used to
acknowledge that one has perpetrated a <thinko> immediately after one has
been called on it. <bang path> n. An old-style UUCP electronic-mail address
specifying hops to get from some assumed-reachable location to the addressee,
so called because each <hop> is signified by a <bang> sign. Thus the path
`...!bigsite!foovax!barbox!me' directs correspondents to route their mail to
machine bigsite (presumably a well-known location accessible to everybody)
and from there through the machine `foovax' to the account of user `me' on
`barbox'. In the bad old days of not so long ago, before autorouting mailers
became commonplace, people often published compound bang addresses using the
{ } convention (see <glob>) to give paths from *several* big machines, in the
hopes that one's correspondent might be able to get mail to one of them
reliable (example: ...!{seismo, ut-sally, gatech}!rice!beta!gamma!me). Bang
paths of 8 to ten hops were not uncommon in 1981. Late night dial-up uucp
links would cause week-long transmission times. Bang paths were often
selected by both transmission time and reliability, as messages would often
get lost. see <Internet address>, <network, the>, and <sitename>. <banner> n.
1. The title page added to printouts by most print spoolers see <spool>.
Typically includes user or account ID information in very large
character-graphics capitals. 2. A similar printout generated from
user-specified text, e.g by a program such as UNIX's `banner[16]'. 3. On
interactive software, a first screen containing a logo and/or author credits
and/or copyright notice. <bar> /bar/ n. 1. The second metasyntactic variable,
after <foo> and before <baz>. "Suppose we have two functions FOO and BAR. FOO
calls BAR..." 2. Often appended to <foo> to produce <foobar>. <bare metal> n.
1. New computer hardware, unadorned with such snares and delusions as an
<operating system>, <HLL>, or even assembler. Commonly in the phrase
`programming on the bare metal', which refers to the arduous work of <bit
bashing> needed to create these basic tools for a new machine. Real
bare-metal programming involves things like building boot proms and BIOS
chips, implementing basic monitors used to test device drivers, and writing
the assemblers that will be used to write the compiler back ends that will
give the new machine a real development environment. 2. The same phrase is
also used to describe a style of <hand-hacking> that relies on bit-level
peculiarities of a particular hardware design, esp. tricks for speed and
space optimization that rely on crocks such as overlapping opcodes (or, as in
the famous case described in Appendix A, interleaving of opcodes on a
magnetic drum to minimize fetch delays due to the device's rotational
latency). This sort of thing has become less common as the relative costs of
programming time and machine resources have changed, but is still found in
heavily constrained environments like industrial embedded systems. see <real
programmer>. <barf> /barf/ [from mainstream slang meaning `vomit'] 1. interj.
Term of disgust. This is the closest hackish equivalent of the Valspeak `gag
me with a spoon'. see <bletch>. 2. To say "Barf!" or emit some similar
expression of disgust. "I showed him my latest hack and he barfed" means only
that he complained about it, not that he literally vomited. 3. vi. To fail to
work because of unacceptable input. May mean to give an error message.
Examples: "The division operation barfs if you try to divide by zero." (that
is, division by zero fails in some unspecified spectacular way) "The text
editor barfs if you try to read in a new file before writing out the old
one." see <choke>, <gag>. Note that in Commonwealth hackish, `barf' is
generally replaced by `puke' or `vom'. <barf> is sometimes also used as a
metasyntactic variable like <foo> or <bar>. <barfulous> adj. (also
<barfucious>) Said of something which would make anyone barf, if only for
esthetic reasons. <barfulation> interj. Variation of <barf> used around the
Stanford area. An exclamation, expressing disgust. On seeing some
particularly bad code one might exclaim, "Barfulation! Who wrote this, Quux?"
<baroque> adj. Feature-encrusted; complex; gaudy; verging on excessive. Said
of hardware or (esp.) software designs, this has many of the connotations of
<elephantine> or <monstrosity> but is less extreme and not pejorative in
itself. see also <rococo>. <BartleMUD> n. Any of the MUDs which are devived
from the original MUD game (see <MUD>) or use the same software drivers.
BartleMUDs are noted for their (usually slightly offbeat) humour, dry but
friendly syntax, and lack of adjectives in object descriptions, so a player
is likely to come across `brand172', for instance (see <brand brand brand>).
Some mudders intensely dislike Bartle and this term, preferring to speak of
`MUD-1'. <batch> adj. Non-interactive. Hackers use this somewhat more loosely
than the traditional technical definitions justify; in particular, switches
on a normally interactive program that prepare it to receive what would
normally be keyboard input from a file are often referred to as <batch mode>
switches. A "batch file" is a series of instructions written to be handed to
an interactive program running in batch mode. Compare <script>. <baud barf>
/bawd barf/ n. The garbage one gets on the monitor when using a modem
connection with some protocol setting (esp. line speed) incorrect, or when
someone picks up a voice extension on the same line, or when really bad line
noise disrupts the connection. Baud barf is not completely <random>, by the
way; hackers with a lot of serial-line experience can usually tell whether
the device at the other end is expecting a higher or lower speed than the
terminal is set to. *Really* experienced ones can identify particular speeds.
<bathtub curve> n. Common term for the curve (resembling an end-to-end
section of one of those claw-footed antique bathtubs) that describes the
expected failure rate of electronics with time: initially high, dropping to
near zero for most of the system's lifetime, then rising again as it `tires
out'. see also <burn-in period>, <infant mortality>. <baz> /baz/ n. [Stanford
corruption of <bar>] 1. The third metasyntactic variable, after <foo> and
<bar> and before <qux>. "Suppose we have three functions FOO, BAR, and BAZ.
FOO calls BAR, which calls BAZ..." 2. interj. Term of mild annoyance. In this
usage the term is often drawn out for two or three seconds, producing an
effect not unlike the bleating of a sheep; /baaaaaaz/. 3. Occasionally
appended to <foo> to produce `foobaz'. <bboard> /bee'bord/ [contraction of
"bulletin board"] n. 1. Any electronic bulletin board; esp. used of <BBS>
systems running of personal micros, less frequently of a USENET <newsgroup>.
2. At CMU and other colleges with similar facilities, refers to campuswide
electronic bulletin boards. 3. The term "physical bboard" is sometimes used
to refer to a non-electronic old-fashioned cork memo board. At CMU, it refers
to a particular one outside the CS Lounge. In either of senses 1 or 2, the
term is usually prefixed by the name of the intended board (`the Moonlight
Casino bboard' or `market bboard'); however, if the context is clear, the
better-read bboards may be referred to by name alone, as in [at CMU] "Don't
post for-sale ads on general". <BBS> [acronym, Bulletin Board System] n. An
electronic bulletin board system; that is, a message database where people
can log in and leave broadcast messages for others grouped (typically) into
topic areas. Thousands of local BBS systems are in operation throughout the
U.S., typically run by amateurs for fun out of their homes on MS-DOS boxes
with a single modem line each. Fans of USENET and Internet or the big
commercial timesharing boards like CompuServe or GEnie tend to consider local
BBSes the `low-rent district' of the hacker culture, but they serve a
valuable function by knitting together lots of hackers and users in the
personal-micro world who would otherwise be unable to exchange code at all.
<beam> [from Star Trek Classic's "Beam me up, Scotty!"] vt. To transfer
<softcopy> of a file electronically; most often in combining forms such as
"beam me a copy" or "beam that over to his site". Compare <blast>, <snarf>,
<BLT>. <beep> n.,v. Syn. <feep>. This term seems to be preferred among micro
hobbyists. <bells and whistles> [by analogy with steam calliopes] n. Features
added to a program or system to make it more <flavorful> from a hacker's
point of view, without necessarily adding to its utility for its primary
function. Distinguished from <chrome> which is intended to attract users.
"Now that we've got the basic program working, let's go back and add some
bells and whistles." However, no one seems to know what distinguishes a bell
from a whistle. <belly up> [think of a dead fish] adj. Down, and it stinks.
Used of hardware which suddenly stops working, especially when the <stoppage>
is ideally timed to disrupt a development schedule. Esp. found in the phrase
`to go belly up' or `gone belly up'. see also <casters up mode>, <down>.
<benchmark> n. An inaccurate measure of computer performance. "In the
computer industry, there are three kinds of lies: lies, damn lies, and
benchmarks." Well known ones include Whetstone, Dhrystone, the Gabriel LISP
benchmarks (see <Gabriel mode>), Rhealstone (see <h infix>) and LINPACK. see
also <machoflops>, <MIPS>. <berklix> /ber'kliks/ n.,adj. Contraction of
`Berkeley UNIX'. see <BSD>. Not used at Berkeley itself. May be more common
among <suits> attempting to sound like cognoscenti than among hackers, who
usually just say `BSD'. <berserking> vi. A <MUD> term meaning to gain points
*only* by killing other players and mobiles (non-player characters). Hence a
Berserker-Wizard is a player character that has achieved enough points to
become a wizard, but only by killing other characters. Berserking is
sometimes frowned upon because of its inherently antisocial nature, but some
MUDs have a "berserker mode" in which a player becomes *permanently* berserk,
can never flee out of a fight, cannot use magic, get no score for treasure,
but they *do* get double kill points. "Berserker wizards can seriously damage
your elf!" <Berzerkeley> [from "berserk"] /b@r-zer'klee/ [from the name of a
now-deceased record label] n. Humorous, distortion of `Berkeley' used esp. to
refer to the practices or products of the <BSD> UNIX hackers. see <software
bloat>, <Missed'em-five>. <beta> /be't@/, /bay't@/ or (Commonwealth) /bee't@/
n. 1. In the <Real World>, software often goes through two stages of testing:
Alpha (in-house) and Beta (out-house?). Software is said to be "in beta". 2.
Anything that is new and experimental is in beta. "His girlfriend is in
beta." 3. Beta software is notoriously buggy, so `in beta' connotes
flakiness. Historical note: More formally, to beta-test is to test a
pre-release (potentially unreliable) version of a piece of software by making
it available to selected customers and users. This term derives from early
nineteen-sixties terminology for product cycle checkpoints, first used at IBM
but later standard throughout the industry. `Alpha Test' was the unit,
module, or component test phase; `Beta Test' was initial system test. These
themselves came from earlier A and B tests for hardware. The A-test was a
feasibility and manufacturability evaluation done before any commitment to
design and development. The B-test was a demonstration that the engineering
model functioned as specified. The C test (corresponding to today's beta) was
the B-test performed on early samples of the production design. <BFI> n. see
<brute force and ignorance>. Also encountered in the variant "BFMI", `brute
force and "massive" ignorance'. <bible> n. 1. One of a small number of
fundamental source books such as <Knuth> and <K&R>. 2. The most detailed and
authoritative reference for a particular language, operating system, or other
complex software system. <BiCapitalization> adj. The act said to have been
performed on trademarks such as VisiCalc, FrameMaker, TKsolver, EasyWriter
and others which have been raised above the hoi polloi of common coinage by
nonstandard capitalization. <Marketroid> types think this sort of thing is
really cute, even the 2,317th time they do it. Compare <studlycaps>. <BIFF>
/bif/ [USENET] n. The most famous <pseudo>, and the prototypical <newbie>.
Articles from BIFF are characterized by all upper case letters sprinkled
liberally with bangs, typos, `cute' misspellings (EVRY BUDY LUVS GOOD OLD
BIFF CUZ HE"S A K00L DOOD AN HE RITES REEL AWESUM THINGZ IN CAPITULL LETTRS
LIKE THIS!!!), use (and often misuse) of fragments of <talk mode>
abbreviations, a long <sig block> (sometimes even a <doubled sig>), and
unbounded naivete. BIFF posts articles using his elder brother's VIC-20.
BIFF's location is a mystery, as his articles appear to come from a variety
of sites. However, BITNET seems to be the most frequent origin. The theory
that BIFF is a denizen of BITNET is supported by BIFF's (unfortunately
invalid) electronic mail address: BIFF@BIT.NET. <biff> /bif/ vt. To notify
someone of incoming mail; from the BSD utility `biff(1)' which was in turn
named after the implementor's dog; it barked whenever the mailman came.
<big-endian> [From Swift's `Gulliver's Travels' via a famous paper `On Holy
Wars and a Plea for Peace' by Danny Cohen, USC/ISI IEN 137 dated 1 April
1980] 1. adj. Describes a computer architecture in which, within a given
word, lower byte addresses have higher significance (the word is stored
`big-end-first'). Most processors including the IBM 370 family and the
<PDP-10> and Motorola microprocessor families and most of the various RISC
designs current in 1990 are big-endian. see <little-endian>, <middle-endian>,
<NUXI problem>. 2. adj. An <internet address> the wrong way round. Most of
the world follows the Internet standard and writes email addresses starting
with the name of the computer and ending up with the name of the country. In
the UK the Joint Networking Team decided to do it the other way round. E.g.
`random@uk.ac.redbrick.cs'. Most gateway sites have <ad-hockery> in their
mailers to handle this, but can still be confused. In particular the address
above could be in the UK (code `uk') or Czechoslovakia (code `cs'). <Big Grey
Wall> n. What greets a <VMS> user searching for documentation. A full VMS kit
comes on a pallet, the documentation taking up around 15 feet of shelf space
before adding layered products such as compilers, databases, multivendor
networking, programming tools etc. Recent (since VMS V5) DEC documentation
comes with grey binders; under VMS V4 the binders were orange ("big orange
wall"), and under V3 they were blue. see <VMS>. <big iron> n. Large,
expensive, ultra-fast computers. Used generally of number crunching
supercomputers such as Crays, but can include more conventional big
commercial IBMish mainframes. Term of approval; compare <heavy metal>, oppose
<dinosaur>. <Big Red Switch> [IBM] n. The power switch on a computer, esp.
the `Emergency Pull' switch on an IBM <mainframe> or the power switch on an
IBM-PC where it really is large and red. "This !@%$% <bitty box> is hung
again; time to hit the Big Red Switch." Sources at IBM report that, in tune
with the company's passion for <TLA>s, this is often acronymized as "BRS"
(this has also become established on FidoNet and in the PC <clone> world). It
is alleged that the emergency pull switch on a 360/91 actually fired a
non-conducting bolt into the main power feed. Compare <power cycle>,
<three-finger salute>. <bignum> /big'num/ [orig. from MIT MACLISP] n. 1. A
multiple-precision computer representation for very large integers. More
generally, any very large number. "Have you ever looked at the United States
Budget? There's bignums for you!" Most computer languages provide a kind of
data called `integer', but such computer integers are usually very limited in
size; usually they must be smaller than 2^31 (2147483648) or (on a losing
<bitty box>) 2^15 (32768). If you want to work with numbers larger than that,
you have to use floating-point numbers, which are usually accurate to only
six or seven decimal places. Computer languages that provide bignums can
perform exact calculations on very large numbers, such as 1000! (the
factorial of 1000, which is 1000 times 999 times 998 times ... times 2 times
1). For example, this value for 1000! was computed by the MACLISP system
using bignums: 40238726007709377354370243392300398571937486421071
46325437999104299385123986290205920442084869694048
00479988610197196058631666872994808558901323829669
94459099742450408707375991882362772718873251977950
59509952761208749754624970436014182780946464962910
56393887437886487337119181045825783647849977012476
63288983595573543251318532395846307555740911426241
74743493475534286465766116677973966688202912073791
43853719588249808126867838374559731746136085379534
52422158659320192809087829730843139284440328123155
86110369768013573042161687476096758713483120254785
89320767169132448426236131412508780208000261683151
02734182797770478463586817016436502415369139828126
48102130927612448963599287051149649754199093422215
66832572080821333186116811553615836546984046708975
60290095053761647584772842188967964624494516076535
34081989013854424879849599533191017233555566021394
50399736280750137837615307127761926849034352625200
01588853514733161170210396817592151090778801939317
81141945452572238655414610628921879602238389714760
88506276862967146674697562911234082439208160153780
88989396451826324367161676217916890977991190375403
12746222899880051954444142820121873617459926429565
81746628302955570299024324153181617210465832036786
90611726015878352075151628422554026517048330422614
39742869330616908979684825901254583271682264580665
26769958652682272807075781391858178889652208164348
34482599326604336766017699961283186078838615027946
59551311565520360939881806121385586003014356945272
24206344631797460594682573103790084024432438465657
24501440282188525247093519062092902313649327349756
55139587205596542287497740114133469627154228458623
77387538230483865688976461927383814900140767310446
64025989949022222176590433990188601856652648506179
97023561938970178600408118897299183110211712298459
01641921068884387121855646124960798722908519296819
37238864261483965738229112312502418664935314397013
74285319266498753372189406942814341185201580141233
44828015051399694290153483077644569099073152433278
28826986460278986432113908350621709500259738986355
42771967428222487575867657523442202075736305694988
25087968928162753848863396909959826280956121450994
87170124451646126037902930912088908694202851064018
21543994571568059418727489980942547421735824010636
77404595741785160829230135358081840096996372524230
56085590370062427124341690900415369010593398383577
79394109700277534720000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000 000000000000000000. 2.
[Stanford] n. In backgammon, large numbers on the dice are called "bignums",
especially a roll of double fives or double sixes. see also <El Camino
Bignum>. <bigot> n. A person who is religiously attached to a particular
language, operating system, editor or other tool (see <religious issues>).
Usually found with a specifier; thus, "APL bigot", "VMS bigot", "EMACS
bigot". A true bigot can be distinguished from a mere partisan or zealot by
the fact that he/she refuses to learn alternatives. It is said "You can tell
a bigot, but you can't tell him much." Compare <weenie>. <bit> [from the
mainstream meaning and `binary digit'] n. 1. The unit of information; the
amount of information obtained by asking a yes-or-no question for which the
two outcomes are equally probable (this is straight technicalese). 2. A
computational quantity that can take on one of two values, such as true and
false, or zero and one. 3. A mental flag: a reminder that something should be
done eventually. Example: "I have a bit set for you." (I haven't seen you for
a while, and I'm supposed to tell or ask you something.) "I just need one bit
from you" is a polite way of indicating that you intend only a short
interruption for a question which can presumably be answered with a yes or
no. A bit is said to be "set" if its value is true or one, and "reset" or
"clear" if its value is false or zero. One speaks of setting and clearing
bits. To "toggle" or "invert" a bit is to change it, either from zero to one
or from one to zero. see also <flag>, <trit>, <mode bit>. <bit bang> n.
Transmission of data on a serial line, when accomplished by rapidly tweaking
a single output bit at the appropriate times (popular on certain early models
of Prime computers, presumably when UARTs were too expensive, and on archaic
Z-80 micros with a Zilog PIO but no SIO). The technique is a simple loop with
eight OUT and SHIFT instruction pairs for each byte. Input is more
interesting. And full duplex (doing input and output at the same time) is one
way to separate the real hackers from the <wannabees>. <bit bashing> n.
(also, "bit diddling" or "bit twiddling") Term used to describe any of
several kinds of low-level programming characterized by manipulation of
<bit>, <flag>, <nybble> and other smaller-than-character-sized pieces of
data: these include low-level device control, encryption algorithms, checksum
and error-correcting codes, hash functions, some flavors of graphics
programming (see <bitblt>), and assembler/compiler code generation. May
connote either tedium or a real technical challenge (more usually the
former). "The command decoding for the new tape driver looks pretty solid but
the bit-bashing for the control registers still has bugs." see also <bit
bang>, <mode bit>. <bit bucket> n. The universal data sink (originally, the
mythical receptacle used to catch bits when they fall off the end of a
register during a shift instruction). Data that is discarded, lost, or
destroyed is said to "go to the bit bucket". On <UNIX>, often used for
</dev/null>. Sometimes amplified as "the Great Bit Bucket in the Sky". This
term is used purely in jest. It's based on the fanciful notion that bits are
objects that are not destroyed, but only misplaced. This appears to have been
a mutation of an earlier term "bit box", about which the same legend was
current; old-time hackers also report that trainees used to be told that when
the CPU stored bits into memory it was actually pulling them "out of the bit
box". see also <chad box>, <null device>. <bit decay> n. see <software rot>.
People with a physics background tend to prefer this one for the analogy with
particle decay. see also <computron>, <quantum bogodynamics>. <bit-paired
keyboard> n. obs. A non-standard keyboard layout which seems to have
originated with the Teletype ASR-33 and remained common for several years on
early computer equipment. The TTY was a mechanical device (see <EOU>) so the
only way to generate the character codes from keystrokes was by some physical
linkage. The design of the ASR-33 assigned each character key a basic pattern
which could be modified by flipping bits if the SHIFT or CTRL key were
pressed. This meant that in order to avoid making the thing more of a Rube
Goldberg kluge than it already was the design had to group on one keytop
characters which shared the same basic bit pattern. Looking at the ASCII
chart, we find: b7b6b5 b4b3b2b1 --- (in decimal) 0 1 2 3 4 5 6 7 8 9 0 1 0 sp
! " # $ % & ' ( ) 0 1 1 0 1 2 3 4 5 6 7 8 9 That's why the shifted decimal
digits on a Teletype are arranged that way (except that 0 was moved over to
the right-hand side). This was <not> the weirdest variant of <QWERTY> layout
widely seen, by the way; that palm probably goes to the keycaps on IBM's even
clunkier 029 card punch. When electronic terminals became popular in the
early nineteen-seventies there was no agreement in the industry over how the
keyboards should be laid out. Some vendors opted to emulate the Teletype
keyboard, while others used the flexibility of electronic circuitry to make
their product look like an office typewriter. These alternatives became known
as `bit-paired' and `typewriter-paired' keyboards. To a hacker, the
bit-paired keyboard seemed far more logical --- and because most hackers in
those days had never learned to touch-type, there was little pressure from
the pioneering users to adapt keyboards to the typewriter standard. The doom
of the bit-paired keyboard was the large-scale introduction of the computer
terminal into the normal office environment, where out-and-out technophobes
were expected to use the equipment. The `typewriter-paired' standard became
universal, `bit-paired' hardware was quickly junked or relegated to dusty
corners, and both terms passed into obsolescence. <bit rot> n. Also <bit
decay>. Hypothetical disease the existence of which has been deduced from the
observation that unused programs or features will often stop working after
sufficient time has passed, even if `nothing has changed'. The theory
explains that bits decay as if they were radioactive. As time passes, the
contents of a file or the code in a program will become increasingly garbled.
There actually are physical processes that produce such effects (the alpha
particles such as are found in cosmic rays can change the contents of a
computer memory unpredictably, and various kinds of subtle media failures can
corrupt files in mass storage) but they are quite rare. The term <software
rot> is almost synonymous. <bitblt> /bit'blit/ n. [from <BLT>, q.v.] 1. Any
of a closely related family of algorithms for moving and copying rectangles
of bits between main and display memory on a bit-mapped device, or between
two areas of either main or display memory (the requirement to do the Right
Thing in the case of overlapping source and destination rectangles is what
makes BitBlt tricky). 2. Synonym for <blit> or <BLT> <bits> n. 1.
Information. Examples: "I need some bits about file formats." ("I need to
know about file formats.") Compare <core dump>, sense #4. 2. Machine-readable
representation of a document, specifically as contrasted with paper. "I only
have a photocopy of the Jargon File; does anyone know where I can get the
bits?". see <softcopy>. 3. Also in <the source of all good bits> n. A person
from whom (or a place from which) information may be obtained. If you need to
know about a program, a <wizard> might be the source of all good bits. The
title is often applied to a particularly competent secretary. <bitty box>
/bit'ee boks/ n. 1. A computer sufficiently small, primitive, or incapable as
to cause a hacker acute claustrophobia at the thought of developing for it.
Especially used of small, obsolescent, single-tasking-only personal machines
like the Atari 800, Osborne, Sinclair, VIC-20, TRS-80, or IBM PC. 2. More
generally, the opposite of `real computer' (see <Get a real computer!>).
Pejorative. see also <mess-dos>, <toaster>, and <toy>. <bixie> /biks'ee/ n.
Synonym for <emoticon> used on BIX (the Byte Information Exchange); many
BIXers believe (incorrectly) the emoticon was invented there. <black art> n.
A collection of arcane, unpublished, and (by implication) mostly ad-hoc
techniques developed for a particular application or systems area. VLSI
design and compiler code optimization were (in their beginnings) considered
classic examples of black art; as theory developed they became <deep magic>,
and once standard textbooks had been written became merely <heavy wizardry>.
The huge proliferation of formal and informal channels for spreading around
new computer-related technologies during the last twenty years has made both
the term `black art' and what it describes less common than formerly. see
also <voodoo programming>. <black box> n. Something which is sealed off
(opaque) so the inner workings aren't visible, typically said of very complex
algorithms. "That image restoration technique is a black box." The
application to <hardware> is general technical English, of course. <black
hole> n. When a piece of email or netnews disappears mysteriously between its
origin and destination sites (that is, without returning a <bounce message>)
it is commonly said to have "fallen into a black hole". Similarly, one might
say "I think there's a black hole at foovax!" to convey suspicion that site
foovax has been dropping a lot of stuff on the floor lately (see <drop on the
floor>). The implied metaphor of email as interstellar travel is interesting
in itself. Compare <bit bucket>. <blast> vt.,n. Synonym for <BLT>, used esp.
for large data sends over a network or comm line. Opposite of <snarf>. Usage:
uncommon. The variant "blat" has been reported. 2. vt. [HP/Apollo] Synonymous
with <nuke> (sense #3). Sometimes the message "Unable to kill all processes.
Blast them (y/n)?" would appear in the command window upon logout. <blazer>
n. (also <'blazer>) Nickname for the Telebit Trailblazer, an expensive but
extremely reliable and effective high-speed modem, popular at UNIX sites that
pass large volumes of <email> and <USENET> news. <bletch> /blech/ [from
Yiddish/German "brechen", to vomit] 1. interj. Term of disgust. Often in
"Ugh, bletch". <bletcherous> /blech'@-rus/ adj. Disgusting in design or
function; esthetically unappealing. This word is seldom used of people. "This
keyboard is bletcherous!" (Perhaps the keys don't work very well, or are
misplaced). see <losing>, <cretinous>, <bagbiter>, <bogus>, and <random>.
<bletcherous> applies to the esthetics of the thing so described; similarly
for <cretinous>. By contrast, something that is <losing> or <cretinous> may
be failing to meet objective criteria. see <bogus> and <random>, which have
richer and wider shades of meaning than any of the above. <blinkenlights>
/blink'@n-lietz/ n. Front-panel diagnostic lights on a computer, esp. a
<dinosaur>. Derives from the last word of the famous blackletter-Gothic
"ACHTUNG! ALLES LOOKENSPEEPERS!" notice in mangled pseudo-German that once
graced about half the computer rooms in the English-speaking world. The sign
in its entirety ran: ACHTUNG! ALLES LOOKENSPEEPERS Das computermachine ist
nicht fur gefingerpoken und mittengrabben. Ist easy schnappen der
springenwerk, blowenfusen und poppencorken mit spitzensparken. Ist nicht fur
gewerken bei das dumpkopfen. Das rubbernecken sichtseeren keepen hans in das
pockets muss; relaxen und watchen das blinkenlichten. This silliness dates
back at least as far as 1959 at Stanford University and had already gone
international by the early '60s, when it was reported at London University's
ATLAS computing site. There are several variants of it in circulation, some
of which actually do end with the word `blinkenlights'. It is reported, by
the way, that an analogous travesty in mangled English is posted in German
computer laboratories. <blit> /blit/ vt. 1. To copy a large array of bits
from one part of a computer's memory to another part, particularly when the
memory is being used to determine what is shown on a display screen. "The
storage allocator picks through the table and copies the good parts up into
high memory, and at the end <blit>s it all back down again." see <bitblt>,
<BLT>, <DD>, <cat>, <blast>, <snarf>. More generally, to perform some
operation (such as toggling) on a large array of bits while moving them. 2.
All-capsed as "BLIT": An early experimental bit-mapped terminal designed by
Rob Pike at Bell Labs, later commercialized as the AT&T 5620. The folk
etymology from `Bell Labs Intelligent Terminal' is incorrect. <blivet>
[allegedly fr. a World War II military term meaning "ten pounds of manure in
a five-pound bag"] n. 1. An intractable problem. 2. A crucial piece of
hardware which can't be fixed or replaced if it breaks. 3. A tool that has
been hacked over by so many incompetent programmers that it has become an
unmaintainable tissue of hacks. 4. An out-of-control but unkillable
development effort. This term has other meanings in other technical cultures;
in particular, among experimental physicists and hardware engineers of
various kinds it seems to mean any random object of unknown purpose (similar
to hackish use of <frob>). It has also been used to describe an amusing
trick-the-eye drawing resembling a three-pronged fork which appears to depict
a three-dimensional object until one realizes that the parts fit together in
an impossible way. <block> [From computer science usage] 1. vi. To delay
while waiting for something. "We're blocking until everyone gets here." 2. in
<block on> vt. To block, waiting for (something). "Lunch is blocked on Phil's
arrival." <block transfer computations> n. From the Dr. Who television
series: in the show, it referred to computations so fiendishly subtle and
complex that they could not be performed by machines. Used to refer to any
task that should be expressible as an algorithm in theory, but isn't. <blow
away> vt. To remove files and directories from permanent storage with extreme
prejudice, generally by accident. Oppose <nuke>. <blow out> vi. Of software,
to fail spectacularly; almost as serious as <crash and burn>. see <blow
past>. <blow past> vt. To <blow out> despite a safeguard. "The server blew
past the 5K reserve buffer." <blow up> vi. [scientific computation] To become
unstable. Suggests that the computation is diverging so rapidly that it will
soon either overflow or at least go <nonlinear>. <blt> /bee ell tee/, /bl@t/
or (rarely) /belt/ n.,vt. 1. Synonym for <blit>. This is the original form of
<blit> and the ancestor of <bitblt>. In these versions the usage has
outlasted the <PDP-10> BLock Transfer instruction for which <BLT> derives;
nowadays, the assembler mnemonic <BLT> almost always means `Branch if Less
Than Zero'. <Blue Book> n. 1. Informal name for one of the three standard
references on the page-layout and graphics-control language PostScript
(`PostScript Language Tutorial and Cookbook', Adobe Systems, Addison-Wesley
1985, QA76.73.P67P68, ISBN 0-201-10179-3); the other two official guides are
known as the <Green Book> and <Red Book>. 2. Informal name for one of the
three standard references on Smalltalk: `Smalltalk-80: The Language and its
Implementation'. David Robson, Addison-Wesley 1983, QA76.8.S635G64, ISBN
0-201-11371-63 (this is also associated with green and red books). 3. Any of
the 1988 standards issues by the CCITT 9th plenary assembly. Until now, they
have changed color each review cycle (1984 was <Red Book>, 1992 would be
<Green Book>); however, it is rumored that this convention is going to be
dropped before 1992. These include, among other things, the X.400 email spec
and the Group 1 through 4 fax standards. see also <Red Book>, <Green Book>,
<Silver Book>, <Purple Book>, <Orange Book>, <White Book>, <Pink-Shirt Book>,
<Dragon Book>, <Aluminum Book>. <Blue Glue> [IBM] n. IBM's SNA (Systems
Network Architecture) an incredibly <losing> and <bletcherous> protocol suite
widely favored at commercial shops that don't know any better. The official
IBM definition is "That which binds blue boxes together." see <fear and
loathing>. It may not be irrelevant that <Blue Glue> is the trade name of a
3M product that is commonly used to hold down the carpet squares to the
removable panel floors so common in computer installations. A correspondent
at U.Minn. reports that the CS dept there has about 80 bottles of Blue Glue
hanging about, so they often refer to any messy work to be done `using the
blue glue". <blue goo> n. Term for `police' <nanobot>s intended to prevent
<gray goo>, denature hazardous waste, destroy pollution, put ozone back into
the stratosphere, prevent halitosis, and to promote truth, justice, and the
American way, etc., etc. see <nanotechnology>. <BNF> /bee-en-ef/ n. 1.
Acronym for `Backus-Naur Form', a metasyntactic notation used to specify the
syntax of programming languages, command sets and the like. Widely used for
language descriptions but seldom documented anywhere, so that it must usually
be learned by osmosis from other hackers. Consider this BNF for a postal
address: <postal-address> ::= <name-part> <street-address> <zip-part>
<name-part> ::= <first-name> [<middle-part>] <last-name> <EOL> <middle-part>
::= <middle-name> | <middle-initial> "." <street-address> ::= [<apt>]
<street-number> <street-name> <EOL> <zip-part> ::= <town-name> ","
<state-code> <zip-code> <EOL> This translates into English as: A
postal-address consists of a name-part, followed by a street-address part,
followed by a zip-code part. A name-part consists of a first-name followed by
an optional middle-part followed by a last-name. A middle-part consists of
either a middle name or a middle initial followed by a dot. A street address
consists of an optional apartment specifier followed by a street number,
followed by a street name. A zip-part consts of a town-name, followed by a
state code, followed by a zip code. Note that many things such as the format
of a first-name, apartment specifier or zip-code are left unspecified. These
are presumed to be obvious from context or detailed in another part of the
specification the BNF is part of. see also <parse>. A major reason BNF is
listed here is that the term is also used loosely for any similar notation,
possibly containing some or all of the <glob> wildcards. 2. In
SCIENCE-FICTION FANDOM, BNF expands to "Big Name Fan" (someone famous or
notorious). Years ago a fan started handing out black-on-green BNF buttons at
SF conventions. This confused the hacker contingent terribly. <boa> [IBM] n.
Any one of the fat cables that lurk under the floor in a <dinosaur pen>.
Possibly so called because they display a ferocious life of their own when
you try to lay them straight and flat after they have been coiled for some
time. It is rumored within IBM that 370 channel cables are limited to 200
feet because beyond that length the boas get dangerous...and it is worth
noting that one of the major cable makers uses the trademark `Anaconda'.
<boat anchor> n. 1. Like <doorstop> but more severe, implies that the
offending hardware is irreversibly dead or useless. 2. Also used of people
who just take up space. <bogo-sort> n. The generic bad algorithm. The origin
is a fictitious contest at CMU to design the worst running time sort
algorithm (Apparently after a student found an n^3 algorithm to do sorting
while trying to design a good one). Bogo-sort is equivalent to throwing a
deck of cards in the air, picking them up, then testing whether they are in
order. If not, repeat. Usage: when one is looking at a program and sees a
dumb algorithm, one might say "Oh, I see, this program uses bogo-sort."
Compare <bogus>, <brute force>. <bogometer> n. see <bogosity>. <bogon>
/boh'gon/ [by analogy with proton/electron/neutron, but doubtless reinforced
after 1980 by the similarity to Douglas Adams's `Vogons', see Appendix C] n.
1. The elementary particle of bogosity (see <quantum bogodynamics>). For
instance, "the ethernet is emitting bogons again", meaning that it is broken
or acting in an erratic or bogus fashion. 2. A query packet sent from a
TCP/IP domain resolver to a root server, having the reply bit set instead of
the query bit. 3. Any bogus or incorrectly formed packet sent on a network.
4. By extension, used to refer by synecdoche to any bogus thing, as in "I'd
like to go to lunch with you but I've got to go to the weekly staff bogon."
5. A person who is bogus or who says bogus things. This was historically the
original usage, but has been overtaken by its derivatives in 1-4. <bogon
filter> /boh'gon fil'tr/ n. Any device, software or hardware, which limits or
suppresses the flow and/or emission of bogons. Example: "Engineering hacked a
bogon filter between the Cray and the VAXen and now we're getting fewer
dropped packets." <bogosity> /boh-go's@-tee/ n. 1. The degree to which
something is <bogus>. At CMU, bogosity is measured with a <bogometer>;
typical use: in a seminar, when a speaker says something bogus, a listener
might raise his hand and say, "My bogometer just triggered". More extremely,
"You just pinned my bogometer" means "You just said or did something so
outrageously bogus that it is off the scale (pinning the bogometer needle at
the highest possible reading)". The agreed-upon unit of bogosity is the
microLenat (uL). The consensus is that this is the largest unit practical for
everyday use. 2. The potential field generated by a bogon flux; see <quantum
bogodynamics>. [Historical note: microLenat was invented as a attack against
noted computer scientist Doug Lenat by a <tenured graduate student>. Doug had
failed him on the AI Qual after the student gave "AI is bogus" as his answer
to the questions. The slur is generally considered unmerited, but it has
become a running gag nevertheless. Some of Doug's friends argue that "of
course" a microLenat is bogus, since it's only one millionth of a Lenat.
Others have suggested that the unit should be re-designated after the grad
student, as the microReid.] <bogotify> /boh-go't@-fie/ vt. To make or become
bogus. A program that has been changed so many times as to become completely
disorganized has become bogotified. If you tighten a nut too hard and strip
the threads on the bolt, the bolt has become bogotified and you'd better not
use it any more. This coinage led to the notional <autobogotiphobia>
(aw'to-boh-got'@-foh`bee-uh) n., defined as the fear of becoming bogotified;
but is not clear that the latter has ever been `live' slang rather than a
self-conscious joke in jargon about jargon. <bogue out> /bohg owt/ vi. to
becomes bogus, suddenly and unexpectedly. "His talk was relatively sane until
somebody asked him a trick question, then he bogued out and did nothing but
<flame> afterwards." <bogus> [WPI, Yale, Stanford] adj. 1. Non-functional.
"Your patches are bogus." 2. Useless. "OPCON is a bogus program." 3. False.
"Your arguments are bogus." 4. Incorrect. "That algorithm is bogus." 5.
Unbelievable. "You claim to have solved the halting problem for Turing
Machines? That's totally bogus." 6. Silly. "Stop writing those bogus sagas."
Astrology is bogus. So is a bolt that is obviously about to break. So is
someone who makes blatantly false claims to have solved a scientific problem.
(This word seems to have some, but not all, of the connotations of <random>.)
It is claimed that `bogus' was originally used in the hackish sense at
Princeton, in the late 60s. A glossary of bogus words was compiled at Yale
when the word was first popularized (see <autobogotiphobia> under
<bogotify>). By the mid-1980s it was also current in something like the
hackish sense in West Coast teen slang. A correspondent at Cambridge reports,
by contrast, that these uses of bogus grate on British nerves; in Britain the
word means rather specifically `counterfeit' as in "a bogus pound note".
<Bohr bug> /bohr buhg/ [from quantum physics] n. A repeatable <bug>; one
which manifests reliably under a possibly unknown but well-defined set of
conditions. Antonym of <heisenbug>. <boink> /boynk/ [USENET, perh. fr the TV
series "Moonlighting"] 1. To have sex with; compare <bounce>, sense #3. In
Commonwealth hackish the variant "bonk" is more common. 2. After the original
Peter Korn `Boinkon' <USENET> parties, used for almost any net social
gathering, e.g. Miniboink, a small boink held by Nancy Gillett in 1988;
Minniboink, a Boinkcon in Minnesota in 1989; Humpdayboinks, Wednesday
get-togethers held in the San Francisco Bay Area. Compare <@-party>. <bomb>
v. 1. General synonym for <crash>, esp. used of software or OS failures.
"Don't run Empire with less than 32K stack, it'll bomb out." 2. Atari ST and
Macintosh equivalents of <panic> or <guru> (sense 2), where icons of little
black-powder bombs or mushroom clouds are displayed indicating the system has
died. On the Mac this may be accompanied by a hexadecimal number indicating
what went wrong, similar to the Amiga GURU MEDITATION number. <Mess-dos>
machines tend to get <locked up> in this situation. <bondage-and-discipline
language> A language such as Pascal, APL, or Prolog that, though ostensibly
general-purpose, is designed so as to enforce an author's theory of "right
programming" even though said theory is demonstrably inadequate for systems
or even vanilla general-purpose programming. Often abbreviated `B&D'; thus,
one may speak of things "having the B&D nature" etc. see <Pascal>; oppose
<Languages of Choice>. <bonk/oif> interj. In the <MUD> community, it has
become trdaitional to express pique or censure by `bonking' the offending
person. There is a convention that one should acknowledge a bonk by saying
`oif!' and a myth to the effect that failing to do so upsets the cosmic
bonk/oif balance, causing much trouble in the universe. Some early MUDs which
did not support <posing> implemented special commands for bonking and oifing
see also <talk mode>. <boot> [from `by one's bootstraps'] vi.,n. To load and
initialize the operating system on a machine. This usage is no longer slang
(having become jargon in the strict sense), but it is sometimes used of human
thought processes, as in the following exchange: "You've lost me." "O.K.,
reboot. Here's the theory...". Also found in the variants "cold boot" (from
power-off condition) and "warm boot" (with the CPU and all devices already
powered up, as after a hardware reset or software crash). Another variant:
"soft boot", re-initialization of only part of a system, under control of
other software that's still running: "If you're running the <mess-dos>
emulator, control-alt-insert will cause a soft-boot of the emulator, while
leaving the rest of the system running." Opposed to this there is "hard
boot", which connotes hostility towards or frustration with the machine being
booted. "I'll have to hard-boot this losing Sun" or "I recommend booting it
hard." <bottleneck> adj. A slow code section, algorithm, or hardware
subsystem through which computation must pass (see also <hot spot>); anything
with lower <bandwidth> than is available for the rest of the computation. A
system is said to be "bottlenecked" when performance is usually limited by
contention for one particular resource (such as disk, memory or processor
<clocks>); the opposite condition is called "balanced", which is more jargon
in the strict sense and may be found in technical dictionaries. <bottom-up
implementation> n. Hackish opposite of the straight technical term "top-down
design". It is now received wisdom in most programming cultures that it is
best to design from higher levels of abstraction down to lower, specifying
sequences of action in increasing detail until you get to actual code.
Hackers often find (especially in exploratory designs which cannot be closely
specified in advance) that it works best to "build" things in the opposite
order, by writing and testing a clean set of primitive operations and then
knitting them together. <bounce> vi. 1. [UNIX, perhaps from the image of a
thrown ball bouncing off a wall] An electronic mail message which is
undeliverable and returns an error notification to the sender is said to
`bounce'. see also <bounce message>. 2. [Stanford] To play volleyball. At one
time there was a volleyball court next to the computer laboratory. From 5:00
PM to 7:00 PM was the scheduled maintenance time for the computer, so every
afternoon at 5:00 the computer would become unavailable, and over the
intercom a voice would cry , "Bounce, bounce!" 3. To engage in sexual
intercourse; prob. fr. the expression `bouncing the mattress', but influenced
by Piglet's psychosexually-loaded "Bounce on me too, Tigger!" from the Winnie
the Pooh books. 4. To casually reboot a system in order to clear up a
transient problem. Reported primarily among <VMS> users. <bounce message>
[UNIX] n. Notification message returned to sender by a site unable to relay
<email> to the intended <Internet address> recipient or the next link in a
<bang path> (see <bounce>). Reasons might include a nonexistent or misspelled
username or a down relay site. Bounce messages can themselves fail, with
occasionally ugly results; see <sorcerer's apprentice mode>. <box> [within
IBM] n. 1. A computer; esp. in the construction "foo box" where foo is some
functional qualifier, like `graphics', or the name of an OS (thus, "UNIX
box", "MS-DOS box", etc. 2. Without qualification but within an <SNA>-using
site, this refers specifically to an IBM front-end processor or FEP. An FEP
is a small computer necessary to enable an IBM <mainframe> to communicate
beyond the limits of the <dinosaur pen>. Typically used in expressions like
the cry that goes up when an SNA network goes down, "Looks like the <box> has
<fallen over>." see also <IBM>, <fear and loathing>, <Blue Glue>. <box
comments> n. Comments (explanatory notes in code) which occupy several lines
by themselves; so called because in assembler and C code they are often
surrounded by a box in a style something like this:
/************************************************* * * This is a boxed
comment in C style * *************************************************/
Common variants of this style omit the asterisks in column two or add a
matching row of asterisks closing the right end of the box. The sparest
variant omits all but the slashes and the asterisks at the extreme left; the
`box' is implied. Oppose <winged comments>. <boxen> /bok'sn/ pl n. [by
analogy with <VAXen>] Fanciful plural of <box> often encountered in the
phrase "UNIX boxen", used to describe commodity <UNIX> hardware. The
implication is that any two UNIX boxen are interchangeable. <boxology> n. The
fine art of drawing diagrams using the `box' characters (mainly, `|', `-',
and `+') in ASCII-monospace fonts. Also known as "character graphics".
<brain-damaged> [generalization of `Honeywell Brain Damage' (HBD), a
theoretical disease invented to explain certain utter cretinisms in Honeywell
<Multics>] adj. Obviously wrong; <cretinous>; <demented>. There is an
implication that the person responsible must have suffered brain damage,
because he should have known better. Calling something brain-damaged is
really bad; it also implies it is unusable, and that its failure to work is
due to poor design rather than some accident. <brain-dead> adj. Brain-damaged
in the extreme. Not quite like mainstream use, as it tends to imply terminal
design failure rather than malfunction or simple stupidity. <brain dump> n.
The act of telling someone everything one knows about a particular topic or
project. Typically used when someone is going to let a new party maintain a
piece of code. Analogous to an operating system <brain dump> in the sense
that the state of the person's important "registers" are saved before
exiting. Example: "You'll have to give me a brain dump on FOOBAR, before you
start your new job at hackercorp." see <core dump> (sense #4). At Sun, this
is also known as "TOI" (transfer of information). <braino> /bray'no/ n. Syn.
for <thinko>. <branch to Fishkill> [IBM, from the location of one of their
facilities] n. Any unexpected jump in a program that produces catastrophic or
just plain weird results. see <hyperspace>. <brand brand brand> n. Humorous
catch-phrase from <BartleMUDs>, in which player were described carrying a
list of objects, the most common of which would usually be a brand. Often
used as a joke in <talk mode> as in "Fred the wizard is here, carrying brand
ruby brand brand brand kettle broadsword flamethrower". Prob. influenced by
the infamous Monty Python `Spam' skit. <break> vt. 1. To cause to be broken
(in any sense). "Your latest patch to the editor broke the paragraph
commands." 2. (of a program) To stop temporarily, so that it may be examined
for debugging purposes. The place where it stops is a "breakpoint". 3. To
send an RS-232 break (125 msec. of line high) over a serial comm line. 4.
[UNIX] To strike whatever key currently causes the tty driver to send SIGINT
to the current process. Normally break (sense 3) or delete does this.
<breakage> [IBM] n. The extra people that must be added to an organization
because its master plan has changed; used esp. of software and hardware
development teams. <breath of life packet> [Xerox PARC] n. An Ethernet packet
that contained bootstrap code, periodically sent out from a working computer
to infuse the `breath of life' into any computer on the network that had
happened to crash. The crashed machines had hardware or firmware that would
wait for such a packet after a catastrophic error. <bring X to its knees> n.
Of a machine, operating system, piece of software, or algorithm; to present
it with a load so extreme or pathological that it grinds virtually to a halt.
"To bring a MicroVAX to its knees, try twenty users running <vi> --- or four
running <EMACS>." Compare <hog>. <brittle> adj. Said of software that's
functional but easily broken by changes in operating environment or
configuration. Often describes the results of a research effort that were
never intended to be robust, but can be applied to commercially developed
software. Oppose <robust>. <broadcast storm> n. An incorrect packet broadcast
on a network that causes most hosts to respond all at once, typically with
wrong answers that start the process over again. Also called <network
meltdown>. see also <Chernobyl packet>. <broken> adj. 1. Not working properly
(of programs). 2. Behaving strangely; especially (of people), exhibiting
extreme depression. <broket> /broh'k@t/ or /broh'ket/ [by analogy with
`bracket': a `broken bracket'] n. Either of the characters `<' and `>'. This
word originated as a contraction of the phrase `broken bracket', that is, a
bracket that is bent in the middle. (At MIT, and apparently in <Real World>
as well, these are usually called <angle brackets>.) <Brooks's Law> prov.
"Adding manpower to a late software project makes it later" --- a result of
the fact that the advantage from splitting work between N programmers is
O(n), but the complexity and communications cost associated with coordinating
and then merging their work is O(n^2). The quote is from Fred Brooks, a
manager of IBMs OS/360 project and author of "The Mythical Man Month", an
excellent early book on software engineering. Hackers have never forgotten
this advice; too often, <management> does. <brute force> adj. Describes a
certain kind of primitive programming style; broadly speaking, one where the
programmer relies on the computer's processing power instead of using his/her
own intelligence to simplify the problem, often ignoring problems of scale
and applying naive methods suited to small problems directly to large ones.
The <canonical> example of a brute force algorithm is associated with the
`Travelling salesman problem' (TSP), a classical NP-hard problem: suppose a
person is in Boston and wishes to drive to N other cities. In what order
should he/she visit them in order to minimize the distance travelled? The
brute force method is to simply generate all possible routes and compare the
distances; while guaranteed to work and simple to implement, this algorithm
is clearly very `stupid' in that it considers even obviously absurd routes
(like going from Boston to Houston via San Francisco and New York, in that
order). For small N it works well, but it rapidly becomes absurdly
inefficient when N increases (for N=15, there are already 1,307,674,368,000
possible routes to consider). see also <NP->. A more simple-minded example of
brute-force programming is finding the smallest number in a large list by
first using an existing program to sort the list in ascending order, and then
picking the first number off the front. Note that whether brute-force
programming should be considered stupid or not depends on the context; if the
problem isn't too big, the extra CPU time spent on a brute-force solution may
cost less than the programmer time it would take to develop a more
`intelligent' algorithm. Alternatively, a more intelligent algorithm may
imply more long-term complexity cost and bug-chasing than are justified by
the speed improvement. Ken Thompson, co-inventor of UNIX, is reported to have
uttered the epigram "When in doubt, use brute force". He probably intended
this as a <ha ha only serious>, but the original UNIX kernel's preference for
simple, robust and portable algorithms over fragile `smart' ones does seem to
have been a significant factor in the success of that OS. Like so many other
tradeoffs in software design, the choice between brute force and complex,
finely-tuned cleverness is often a difficult one that requires both
engineering savvy and the most delicate esthetic judgement. <brute force and
ignorance> n. A popular design technique at many software houses --- <brute
force> coding unrelieved by any knowledge of how problems have been
previously solved in elegant ways. Dogmatic adherence to design methodologies
tends to encourage it. Characteristic of early <larval stage> programming;
unfortunately, many never outgrow it. Often abbreviated BFI, as in: "Gak,
they used a bubble sort! That's strictly from BFI." Compare <bogosity>. <BSD>
/bee-ess-dee/ n. [acronym for Berkeley System Distribution] a family of
<UNIX> versions for the DEC <VAX> developed by Bill Joy and others at
University of California at Berkeley starting around 1980, incorporating
TCP/IP networking enhancements and many other features. The BSD versions
(4.1, 4.2, and 4.3) and commercial versions derived from them (SunOS, ULTRIX
and Mt. Xinu) held the technical lead in the UNIX world until AT&T's
successful standardization efforts after about 1986, and are still widely
popular. see <UNIX>, <USG UNIX>. <bucky bits> /buh'kee bits/ [primarily
Stanford] n. The bits produced by the CTRL and META shift keys, esp. on a
Stanford (or Knight) keyboard (see <space-cadet keyboard>). It is rumored
that these were in fact named for Buckminster Fuller during a period when he
was consulting at Stanford. Unfortunately, legend also has it that `Bucky'
was Niklaus Wirth's nickname when *he* was consulting at Stanford and that he
first suggested the idea of the meta key, so its bit was named after him. see
<double bucky>, <quadruple bucky>. <buffer overflow> n. What typically
happens when an <OS> or application is fed data faster than it can handle.
Used metaphorically of human mental processes. "Sorry, I got four phone calls
in three minutes last night and lost your message to a buffer overflow."
<bug> n. An unwanted and unintended property of a program or hardware, esp.
one which causes it to malfunction. Antonym of <feature>. Examples: "There's
a bug in the editor: it writes things out backwards." "The system crashed
because of a hardware bug." "Fred is a winner, but he has a few bugs." (e.g.
Fred is a good guy, but he has a few personality problems.) Some have said
this term came from telephone company usage: "bugs in a telephone cable" were
blamed for noisy lines, but this appears to be an incorrect folk etymology.
Admiral Grace Hopper (an early computing pioneer better known for inventing
COBOL) liked to tell a story in which a technician solved a persistent
<glitch> in the Harvard Mark II machine by pulling an actual physical bug out
from between the contacts of one of its relays, and she subsequently
promulgated <bug> in its hackish sense as a joke about the incident (though,
as she was careful to admit, she was not there when it happened). For many
years the logbook associated with the incident and the actual bug in question
(a moth) sat in a display case at the Naval Surface Warfare Center, and now
resides in the Smithsonian. The entire story, with a picture of the logbook
and the moth taped into it, is recorded in the Annals of the History of
Computing (Volume 3, Number 3 (July 1981) on pages 285 and 286.
Interestingly, the text of the log entry, which is said to read "First
example of an actual computer `bug'." establishes that the term was already
in use at the time; and a similar incident is alleged to have occurred on the
original ENIAC machine. Indeed, the use of `bug' to mean an industrial defect
was already established in Thomas Edison's time, and `bug' in the sense of an
disruptive event goes back to Shakespeare! In the First Edition of Johnson's
Dictionary a `bug' is a `frightful object'; this is traced to `bugbear', a
Welsh term for a variety of mythological monster which (to complete the
circle) has recently been reintroduced into the popular lexicon through
fantasy role-playing games. In any case, in hacker's slang the word almost
never refers to insects. Here is a plausible conversation that never actually
happened: "This ant-farm has a bug." "What do you mean? There aren't even any
ants in it." "That's the bug." <bug-for-bug compatible> n. Said of a design
or revision the design of which has been badly compromised by a requirement
to be compatible with <fossil>s or <misfeature>s in other programs or (esp.)
previous releases of itself. <buglix> n. Pejorative term referring to DEC's
Ultrix operating system in its earlier *severly* buggy versions. Still used
to describe Ultrix but without venom. Compare <HP-SUX>. <bulletproof> adj.
Used of an algorithm or implementation considered extremely <robust>;
lossage-resistant; capable of correctly recovering from any imaginable
exception condition. This is a rare and valued quality. Syn. <armor-plated>.
<bum> 1. vt. To make highly efficient, either in time or space, often at the
expense of clarity. "I managed to bum three more instructions out of that
code." 2. n. A small change to an algorithm, program, or hardware device to
make it more efficient. "This hardware bum makes the jump instruction
faster." Usage: now uncommon, largely superseded by <tune>. Note that both
these uses are rare in Commonwealth hackish, because in the parent dialects
of English `bum' is interpreted as a rude synonym for `buttocks'. <bump> vt.
Synonym for increment. Has the same meaning as C's ++ operator. Used esp. of
counter variables, pointers and index dummies in for, while, and do-until
loops. <burble> vi. Like <flame>, but connotes that the source is truly
clueless and ineffectual (mere flamers can be competent). A term of deep
contempt. <burn-in period> n. 1. A factory test designed to catch systems
with <marginal> components before they get out the door; the theory is that
burn-in will protect customers by outwaiting the steepest part of the <infant
mortality> curve. 2. A period of indeterminate length in which a person using
a computer is so intensely involved in his project that he forgets basic
needs such as food, drink, sleep, etc. see <hack mode>, <larval stage>.
<busy-wait> vi. To wait on an event by <spin>ning through a tight or
timed-delay loop that polls for the event on each pass, as opposed to setting
up an interrupt handler and continuing execution on another part of the task.
A wasteful technique, best avoided on time-sharing systems where a
busy-waiting program may hog the processor. Syn. <spin-lock> <buzz> vi. 1. Of
a program, to run with no indication of progress and perhaps without
guarantee of ever finishing; esp. said of programs thought to be executing
tight loops of code. The state of a buzzing program resembles <catatonia>,
but you never get out of catatonia, while a buzzing loop may eventually end
of its own accord. Example: "The program buzzes for about ten seconds trying
to sort all the names into order." see <spin>. 2. [ETA Systems] To test a
wire or PCB trace for continuity by applying an AC signal as opposed to
applying a DC signal. Some wire faults will pass DC tests but fail a buzz
test. <BWQ> /bee duhb'l-yoo kyoo/ [IBM] n. Buzz Word Quotient. The percentage
of buzzwords in a speech or documents. Usually roughly proportional to
<bogosity>. see <TLA>. <by hand> adv. Said of an operation (especially a
repetititive, trivial and/or tedious one) which ought to be performed
automatically by the computer, but which a hacker instead has to step
tediously through. "My mailer doesn't have a command to include the text of
the message I'm replying to, so I have to do it by hand". Compare <eyeball
search>. <byte> n. One character of information; usually 8 bits, occasionally
9 (on 36-bit machines). The term originated in 1956 during the early design
phase for the IBM Stretch computer; originally it was described as one to six
bits (typical I/O equipment of the period used 6-bit chunks of information).
The move to an 8-bit byte happened in late 1956, and this size was later
adopted and made standard by the System/360. The term "byte" was coined by
mutating the word `bite' so it would not be accidentally misspelt as <bit>.
see also <nybble>. <bytesexual> /biet-seks'u-@l/ adj. Said of hardware,
denotes willingness to compute or pass data in either <big-endian> or
<little-endian> format (depending, presumably, on a <mode bit> somewhere).
see also <NUXI problem>. {= C =} <C> n. 1. The third letter of the Latin
alphabet. 2. The name of a programming language designed by Dennis Ritchie
during the early 1970s and first used to implement <UNIX>. So called because
many features derived from an earlier interpreter named `B' in commemoration
of *its* parent, BCPL; before Bjarne Stroustrup settled the question by
designing C++, there was a humorous debate over whether C's successor should
be named `D' or `P'. C became immensely popular outside Bell Labs after about
1980 and is now the dominant language in systems and microcomputer
applications programming. C is often described, with a mixture of fondness
and disdain varying according to the speaker, as "a language which combines
all the elegance and power of assembly language with the readability and
maintainability of assembly language". see also <languages of choice>,
<indent style>. <calculator> [Cambridge] n. Syn. for <bitty box>. <can> vt.
To abort a job on a time-sharing system. Used esp. when the person doing the
deed is an operator, as in `canned from the <console>'. Frequently used in an
imperative sense, as in "Can that print job, the LPT just popped a
sprocket!". Synonymous with <gun>. It is said that the ASCII character with
mnemonic CAN (0011000) was used as a kill-job character on some early OSs.
<canonical> adj. The usual or standard state or manner of something. This
word has a somewhat more technical meaning in mathematics. For example, one
sometimes speaks of a formula as being in canonical form. Two formulas such
as `9 + x' and `x + 9' are said to be equivalent because they mean the same
thing, but the second one is in canonical form because it is written in the
usual way, with the highest power of `x' first. Usually there are fixed rules
you can use to decide whether something is in canonical form. The slang
meaning is a relaxation of the technical meaning (this generalization is
actually not confined to hackers, and may be found throughout academia). A
true story: One Bob Sjoberg, new at the MIT AI Lab, expressed some annoyance
at the use of jargon. Over his loud objections, we made a point of using
jargon as much as possible in his presence, and eventually it began to sink
in. Finally, in one conversation, he used the word `canonical' in jargon-like
fashion without thinking. Steele: "Aha! We've finally got you talking jargon
too!" Stallman: "What did he say?" Steele: "Bob just used `canonical' in the
canonical way." Of course, canonicality depends on context, but is implicitly
defined as the way *hackers* normally do things. Thus, a hacker may claim
with a straight face that "according to religious law" is *not* the canonical
meaning of the word canonical. <card> n. 1. An electronic printed-circuit
board (see also <tall card>, <short card>. 2. obs. Syn. <punched card>. <card
walloper> n. An EDP programmer who grinds out batch programs that do stupid
things like print people's paychecks. Compare <code grinder>. see also
<punched card>, <eighty-column mind>. <cargo-cult programming> n. A style of
(incompetent) programming dominated by ritual inclusion of code or program
structures that serve no real purpose. A cargo-cult programmer will usually
explain the extra code as a way of working around some bug encountered in the
past, but usually, neither the bug nor the reason the code avoided the bug
were ever fully understood (compare <shotgun debugging>). The term cargo-cult
is a reference to aboriginal religions that grew up after World War II. The
practices of these cults center on building elaborate mockups of airplanes
and military style landing strips in the hope of bringing the return of the
god-like airplanes that brought such marvelous cargo during the war.
<casters-up mode> /cas'trz uhp mohd/ [IBM] n. Yet another synonym for
`broken' or `down'. <casting the runes> n. The act of getting a <guru> to run
a particular program and type at it because it never works for anyone else;
esp. used when nobody can ever see what the guru is doing different from what
J. Random Luser does. Compare <incantation>, <runes>, <examining the
entrails>. <case and paste> [from "cut and paste"] n. 1. The addition of a
new <feature> to an existing system by selecting the code from an existing
feature and pasting it in with minor changes. Common in telephony circles
because most operations in a telephone switch are selected using case
statements. Leads to <software bloat>. <cat> [from "catenate" via <UNIX>
`cat(1)'] vt. To spew an entire (notionally, large) file to the screen or
some other output sink without pause; by extension, to dump large amounts of
data at an unprepared target or with no intention of browsing it carefully.
Usage: considered silly. Rare outside UNIX sites. see also <DD>, <BLT>.
<catatonia> n. A condition of suspended animation in which something is so
<wedged> that it makes no response. For example, if you are typing on a
terminal and suddenly the computer doesn't even echo the letters back to the
screen as you type, let alone do what you're asking it to do, then the
computer is suffering from catatonia (possibly because it has crashed). <cdr>
/ku'dr/ [from LISP] vt. To remove the first item from a list of things. In
the form "cdr down", to trace down a list of elements. "Shall we cdr down the
agenda?" Usage: silly. see also <loop through>. <chad> /chad/ n. 1. The
perforated edge strips on printer paper, after they have been separated from
the printed portion. Also called <selvage> and <perf>. 2. obs. the
confetti-like paper bits punched out of cards or paper tape; this was also
called "chaff", "computer confetti", and "keypunch droppings". Historical
note: one correspondent believes `chad' (sense #2) derives from the Chadless
keypunch (named for its inventor), which cut little u-shaped tabs in the card
to make a hole when the tab folded back, rather than punching out a
circle/rectangle; it was clear that if the `Chadless' keypunch didn't make
them, then the stuff that other keypunches made had to be `chad'. <chad box>
n. <Iron Age> computers contained boxes inside them, about the size of a
lunchbox, that held the <chad>, squares of paper punched out of punch cards.
You had to open the covers of the card punch periodically and empty the chad
box. The <bit bucket> is the equivalent device in the CPU enclosure, which
was typically across the room in another great grey-and-blue box. <chain>
[orig. from BASIC's CHAIN statement] vi. When used of programming languages,
refers to a statement that allows a parent executable to hand off execution
to a child without going through the <OS> command interpreter. The state of
the parent program is lost and there is no returning to it. Though this
facility used to be common on memory-limited micros and is still widely
supported for backward compatibility, the jargon usage is semi-obsolescent;
in particular most UNIX programmers will think of this as an <exec>. Oppose
the more modern <subshell>. <char> /keir/ or /char/; rarely, /kar/ n.
Shorthand for `character'. Esp. used by C programmers, as `char' is C's
typename for character data. <chase pointers> 1. vi. To go through multiple
levels of indirection, as in traversing a linked list or graph structure.
Used esp. by programmers in C, where explicit pointers are a very common data
type. This is almost jargon in the strict sense, but remains slang when used
of human networks. "I'm chasing pointers. Bob said you could tell me who to
talk to about..." 2. [Cambridge] <pointer chase> or <pointer hunt>: the
process of going through a dump (interactively or on a large piece of paper
printed with hex <runes>) following dynamic data-structures. Only used in a
debugging context. <chemist> [Cambridge] n. Someone who wastes CPU time on
number-crunching when you'd far rather the CPU was doing something more
productive, such as working out anagrams of your name or printing Snoopy
calendars or running <life> patterns. May or may not refer to someone who
actually studies chemistry. <Chernobyl packet> /cher-noh'b@l pak'@t/ n. An IP
Ethergram with both source and destination Ether and IP address set as the
respective broadcast address. So called because it induces <network
meltdown>. <choke> vt. To reject input, often ungracefully. "I tried building
an <EMACS> binary to use <X>, but `cpp' choked on all those #defines." see
<barf>, <gag>, <vi>. <chiclet keyboard> n. A keyboard with small rectangular
or lozenge-shaped rubber or plastic keys that look like pieces of chewing-gum
(Chiclet is a brand-name and also the Spanish common noun for the stuff).
Used esp. to describe the original PCjr keyboard. Vendors unanimously liked
these because they're cheap, and a lot of early portable and laptop products
got launched using them. Customers rejected the idea with almost equal
unanimity, and chiclets are not often seen on anything larger than a digital
watch any more. <chomp> vt. To lose; to chew on something of which more was
bitten off than one can. Probably related to gnashing of teeth. see
<bagbiter>. A hand gesture commonly accompanies this, consisting of the four
fingers held together as if in a mitten or hand puppet, and the fingers and
thumb open and close rapidly to illustrate a biting action (much like what
the PacMan does in the classic video game, though this pantomime seems to
predate that). The gesture alone means "chomp chomp" (see Verb Doubling). The
hand may be pointed at the object of complaint, and for real emphasis you can
use both hands at once. For example, to do this to a person is equivalent to
saying "You chomper!" If you point the gesture at yourself, it is a humble
but humorous admission of some failure. You might do this if someone told you
that a program you had written had failed in some surprising way and you felt
dumb for not having anticipated it. <chomper> n. Someone or something that is
chomping; a loser. see <loser>, <bagbiter>, <chomp>. <Christmas tree> n. A
kind of RS-232 line tester or breakout box featuring rows of blinking red and
green LEDs like Christmas lights. <Christmas tree packet> n. A packet with
every single option set for whatever protocol is in use. <chrome> [from
automotive slang via wargaming] n. Showy features added to attract users, but
which contribute little or nothing to the power of a system. "The 3D icons in
Motif are just chrome!" Distinguished from <bells and whistles> by the fact
that the latter are usually added to gratify developers' own desires for
featurefulness. <Church of the Sub-Genius> n. A mutant offshoot of
<Discordianism> launched in 1981 as a spoof of fundamentalist Christianity by
the `Rev.' Ivan Stang, a brilliant satirist with a gift for promotion.
Popular among hackers as a rich source of bizarre imagery and references such
as: `Bob' the divine drilling-equipment salesman, the Benevolent Space Xists
and the Stark Fist of Removal. Much Sub-Genius theory is concerned with the
acquisition of the mystical substance or quality of `slack'. see also <ha ha
only serious>. <Cinderella book> [CMU] n. `Introduction to Automata Theory,
Languages', and Computation', by John Hopcroft and Jeffrey Ullman,
Addison-Wesley, 1979. So-called because the cover depicts a girl (notionally
Cinderella) sitting in front of a Rube Goldberg device and holding a rope
from that device. The back cover depicts the girl with the Rube Goldberg in
shambles after having pulled on the rope. <Classic C> /klas'ik see/ [a play
on "Coke Classic"] n. The C programming language as defined in the first
edition of <K&R>, with some small additions. It is also known as `K&R C.' The
name came into use during the standardization process for C by the ANSI X3J11
committee. Also <C Classic>. This is sometimes applied elsewhere: thus, `X
Classic' where X = Star Trek (referring to the original TV series), or X = PC
(referring to IBM's ISA-bus machines as opposed to the PS/2 series). This
construction is especially used of product series in which the newer versions
are considered serious losers relative to the older ones. In one particularly
strong parallel to the Coke fiasco, Apple Computer released a new computer
called the Mac Classic. Unfortunately, just as the Coca Cola company had
`restored' Coke Classic made with nasty-tasting corn syrup rather than real
sugar, the new Mac Classic was inferior to the machine Mac hackers had always
called the `classic Mac' (the original 128K Macintosh) causing much confusion
and upset. <clean> adj. Used of hardware or software designs, implies
`elegance in the small', that is, a design or implementation which may not
hold any surprises but does things in a way that is reasonably intuitive and
relatively easy to comprehend from the outside. The antonym is <grungy> or
<crufty>. <CLM> [Sun, `Career Limiting Move'] 1. n. Endangering one's future
prospects of getting plum projects and raises, also possibly one's job. "He
used a bubblesort! What a CLM!" 2. adj. denoting extreme severity of a bug,
discovered by a customer and obviously due to poor testing: "That's a CLM
bug!" <clobber> vt. Mistakenly overwrite. As in "I walked off the end of the
array and clobbered the stack." Compare <mung>, <scribble>, <trash>, and
<smash the stack>. <clocks> n. Processor logic cycles, so called because each
generally corresponds to one clock pulse in the processor's timing. The
relative execution times of instructions on a machine are usually discussed
in clocks rather than absolute fractions of a second. Compare <cycle>.
<clone> n. 1. An exact duplicate, as in "Our product is a clone of their
product." Implies a legal re-implementation from documentation or by
reverse-engineering, as opposed to the illegalities under sense #3. Also
connotes lower price. 2. A shoddy, spurious copy, as in "Their product is a
clone of our product." 3. A blatant ripoff, most likely violating copyright,
patent, or trade secret protections, as in "Your product is a clone of my
product." This usage implies legal action is pending. 4. A "PC clone"; a
PC-BUS/ISA or EISA-compatible 80x86 based microcomputer (this use is
sometimes spelled "klone"). These invariably have much more bang for the bug
than the IBM prototypes they resemble. 5. In the construction "UNIX clone":
An OS designed to deliver a UNIX-lookalike environment sans UNIX license
fees, or with additional `mission-critical' features such as support for
real-time programming. <close> /klohz/ [from the verb `to close', thus the
`z' sound] 1. n. Abbreviation for `close (or right) parenthesis', used when
necessary to eliminate oral ambiguity. see <open>. 2. adj. Of a delimiting
character, used at the right-hand end of a grouping. Used in such terms as
"close parenthesis", "close bracket", etc. 3. vt. To release a file or
communication channel after access. <clustergeeking> /kluh'ster-gee`king/
[CMU] n. An activity defined by spending more time at a computer cluster
doing CS homework than most people spend breathing. <COBOL> n. Synonymous
with <evil>. Hackers believe all COBOL programmers are <suit>s or <code
grinder>s, and no self-respecting hacker will ever admit to having learned
the language. Its very name is seldom uttered without ritual expressions of
disgust or horror. <COBOL fingers> /koh'bol fing'grs/ n. Reported from
Sweden, a (hypothetical) disease one might get from programming in COBOL. The
language requires extremely voluminous code. Programming too much in COBOL
causes the fingers to wear down (by endless typing), until short stubs
remain. This malformity is called "COBOL fingers". "I refuse to type in all
that source code again, it will give me cobol fingers!" <code grinder> n. 1.
A <suit>-wearing minion of the sort hired in legion strength by banks and
insurance companies to implement payroll packages in RPG and other such
unspeakable horrors. This is about as far from hackerdom as you can get and
still touch a computer. Connotes pity. see <Real World>. 2. Used of or to a
hacker, a really serious slur on the person's creative ability; connotes a
design style characterized by primitive technique, rule-boundedness, and
utter lack of imagination. Compare <card walloper>. <code police> [by analogy
with `thought police'] n. A mythical team of Gestapo-like storm troopers that
might burst into one's office and arrest one for violating style rules. May
be used either seriously, to underline a claim that a particular style
violation is dangerous, or ironically, to suggest that the practice under
discussion is condemned mainly by anal-retentive weenies. The ironic usage is
perhaps more common. <codewalker> n. A program component that traverses other
programs for a living. Compilers have codewalkers in their front ends; so do
cross-reference generators and some database front-ends. Other utility
programs which try to do too much with source code may turn into codewalkers.
As in "This new vgrind feature would require a codewalker to implement."
<coefficient of x> n. Hackish speech makes rather heavy use of
pseudo-mathematical metaphors. Four particularly important ones involve the
terms "coefficient", "factor", "index" and "quotient". They are often loosely
applied to things you cannot really be quantitative about, but there are
subtle distinctions between them that convey information about the way the
speaker mentally models whatever he or she is describing. "Foo factor" and
"foo quotient" tend to describe something for which the issue is one of
presence or absence. The canonical example is <fudge factor>. It's not
important how much you're fudging; the term simply acknowledges that some
fudging is needed. You might talk of liking a movie for its silliness factor.
Quotient tends to imply that the property is a ratio of two opposing factors:
"I would have won except for my luck quotient.' This could also be, "I would
have won except for the luck factor", but using *quotient* emphasises that it
was bad luck overpowering good luck. "Foo index" and "coefficient of foo"
both tend to imply that foo is, if not strictly measurable, at least
something that can be larger or smaller. Thus, you might refer to a paper or
person as having a "high bogosity index", whereas you would be less likely to
speak of a "high bogosity factor". "Foo index" suggests that foo is a
condensation of many quantities, as in the mundane cost of living index;
"coefficient of foo" suggests that foo is a fundamental quantity, as in a
coefficient of friction. The choice between these terms is often one of
personal preference; e.g., some people might feel that bogosity is a
fundamental attribute and thus say "coefficient of bogosity", whereas others
might feel it is a combination of factors and thus say "bogosity index".
<cokebottle> /kohk'bot-l/ n. Any very unusual character, particularly one
that isn't on your keyboard so you can't type it. MIT people used to complain
about the `control-meta-cokebottle' commands at SAIL, and SAIL people
complained right back about the `altmode-altmode-cokebottle' commands at MIT.
After the demise of the <space-cadet keyboard> cokebottle faded away as
serious usage, but was often invoked humorously to describe an (unspecified)
weird or non-intuitive keystroke command. It may be due for a second inning,
however. The OSF/Motif window manager, mwm, has a reserved keystroke for
switching to the default set of keybindings and behaviour. This keystroke is
(believe it or not) `control-shift-meta-exclam'. Since the exclamation point
looks a lot like an upside down coke bottle, Motif hackers have begun
referring to this keystroke as cokebottle. see also <quadruple-bucky>. <COME
FROM> n. A semi-mythical language construct dual to the `go to'; COME FROM
<label> would cause the referenced label to act as a sort of trapdoor, so
that if the program ever reached it control would quietly fall through to the
statement following the COME FROM. COME FROM was first proposed in a
Datamation article of December 1973 (reprinted in the April 1984 issue of
CACM) that parodied the then-raging `structured programming' wars (see
<considered harmful>). Mythically, some variants are the "assigned come
from", and the "computed come from" (parodying some nasty control constructs
in BASIC and FORTRAN). Notionally, multi-tasking could be implemented by
having more than one COME FROM statement coming from the same label. In some
ways the Fortran DO loop is a form of COME FROM statement, since after the
terminating label is reached control continues at the statement following the
DO. Some generous Fortrans would even allow arbitrary statements for the
label, for example: DO 10 I=1,LIMIT C imagine many lines of code here,
leaving the original DO C statement lost in the spaghetti... WRITE(6,10)
I,FROB(I) 10 FORMAT(1X,I5,G10.4) While sufficiently astonishing to the
unsuspecting reader, this form of COME FROM statement isn't completely
general. After all, control will eventually pass to the following statement.
The implementation of the general form was left to Univac Fortran, c.1975.
The statement `AT 100' would perform a `COME FROM 100'. It was intended
strictly as a debugging aid, with dire consequences promised to anyone so
deranged as to use it in production code. COME FROM was supported under its
own name for the first time fifteen years later, in C-INTERCAL (see
<INTERCAL>, <retrocomputing>); knowledgeable observers are still reeling from
shock. <comment out> vt. To surround a section of code with comment
delimiters in order to prevent it from being compiled. This may be done for a
variety of reasons, most commonly when the code is redundant or obsolete but
you want to leave it in the source to make the intent of the active code
clearer. <com[m] mode> /kom mohd/ [from the ITS feature supporting on-line
chat, spelled with one or two Ms] Syn. for <talk mode>. COMMONWEALTH HACKISH
n. Hacker slang as spoken outside the U.S., esp. in the British Commonwealth.
It is reported that Commonwealth speakers are more likely to pronounce
`char', `soc' etc. as spelled (/char/, /sok/) as opposed to American /keir/
or /sohsh/. Dots in names tend to be pronounced more often (/sok dot wi'bble/
rather than /sohsh wib'ble/). <Meta-> may be pronounced /mee't@-/; similarly,
Greek letter beta is often /bee't@/, zeta is often /zee'ta/ and so forth.
Preferred metasyntactic variables include EEK, OOK, FRODO and BILBO; WIBBLE,
WOBBLE and in emergencies WUBBLE; BANANA, WOMBAT, FROG, <fish> and so on and
on. Alternatives to verb doubling include suffixes `-o-rama', `frenzy' (as in
feeding frenzy) and `city' (as in "barf city!" "hack-o-rama!" "core dump
frenzy!"). Finally, note that the American usages `parens' `brackets' and
`braces' for (), [], and {} are uncommon; Commonwealth hackish prefers
`bracket', `square bracket' and `curly bracket'. Also, the use of `pling' for
<bang> is common outside the U.S.. see also <calculator>, <chemist>, <console
jockey>, <fish>, <grunge>, <hakspek>, <heavy metal>, <leaky heap>, <lord high
fixer>, <noddy>, <psychedelicware>, <plingnet>, <raster blaster>, <seggie>,
<spin-lock>, <terminal junkie>, <tick-list features>, <weeble>, <weasel>,
<YABA> and notes or definitions under <Bad Thing>, <barf>, <bogus>, <bum>,
<chase pointers>, <cosmic rays>, <crippleware>, <crunch>, <dodgy>, <gonk>,
<nybble>, <root>, <tweak>, and <xyzzy>. <compact> adj. Of a design, describes
the valuable property that it can all be apprehended at once in one's head.
This generally means the thing created from the design can be used with
greater facility and fewer errors than an equivalent tool that is not
compact. Note that compactness does not imply triviality or lack of power;
for example, C is compact and Fortran is not, but C is more powerful than
Fortran. Designs become non-compact through accreting features and <cruft>
that don't merge cleanly into the overall design scheme. <compress> [UNIX]
vt. When used without a qualifier, generally refers to <crunch>ing of a file
using a particular C implementation of Lempel-Ziv compression by James A.
Woods et al. and widely circulated via <USENET>. Use of <crunch> itself in
this sense is rare among UNIX hackers. <computer geek> n. One who eats
(computer) bugs for a living. One who fulfills all of the dreariest negative
stereotypes about hackers: an asocial, malodorous, pasty-faced monomaniac
with all the personality of a cheese grater. Cannot be used by outsiders
without implied insult to all hackers; compare black-on-black usage of
`nigger'. A computer geek may be either a fundamentally clueless individual
or a proto-hacker in <larval stage>. Also called "turbo nerd", "turbo geek".
see also <clustergeeking>, <wannabee>, <terminal junkie>. <computron>
/kom'pyoo-tron`/ n. 1. A notional unit of computing power combining
instruction speed and storage capacity, dimensioned roughly in
instructions-per-sec times megabytes-of-main-store times
megabytes-of-mass-storage. "That machine can't run GNU Emacs, it doesn't have
enough computrons!" This usage is usually found in metaphors that treat
computing power as a fungible commodity good like a crop yield or diesel
horsepower. see <bitty box>, <get a real computer>, <toy>, <crank>. 2. A
mythical subatomic particle that bears the unit quantity of computation or
information, in much the same way that an electron bears one unit of electric
charge (see <bogon>). An elaborate pseudo-scientific theory of computrons has
been worked out based on the physical fact that the molecules in a solid
object move more rapidly as it is heated. It is argued that an object melts
because the molecules have lost their information about where they are
supposed to be (that is, they have emitted computrons). This explains why
computers get so hot and require air conditioning; they use up computrons.
Conversely, you should be able to cool down an object by placing it in the
path of a computron beam. It is believed that this may also explain why
machines that work at the factory fail in the computer room --- because the
computrons there have been all used up by your other hardware. <condom> n.
The protective plastic baggy that accompanies 3.5" microfloppy diskettes.
Rarely, used of (paper) disk envelopes. Unlike the write protect, the condom
(when left on) not only impedes the practice of <SEX>, it has shown to have a
high failure rate as drive mechanisms attempt to access the disk. <connector
conspiracy> [probably came into prominence with the appearance of the KL-10,
none of whose connectors match anything else] n. The tendency of
manufacturers (or, by extension, programmers or purveyors of anything) to
come up with new products which don't fit together with the old stuff,
thereby making you buy either all new stuff or expensive interface devices.
<cons> /konz/ or /cons/ [from LISP] 1. v. To add a new element to a list,
esp. at the top. 2. "cons up": vt. To synthesize from smaller pieces: "to
cons up an example". <considered harmful> adj. Edsger Dijkstra's infamous
March 1968 CACM note, `Goto Statement Considered Harmful', fired the first
salvo in the `structured programming' wars. Amusingly, ACM considered the
resulting acrimony sufficiently harmful that they will (by policy) no longer
print an article which takes up that assertive a position against a coding
practice. In the ensuing decades a large number of both serious papers and
parodies have borne titles of the form `X considered Y'. The `structured
programming' wars eventually blew over with the realization that both sides
were wrong, but use of such titles has remained as a persistent minor in-joke
(the `considered silly' found at various places in this jargon file is
related). <console> n. 1. The operator's station of a <mainframe>. In times
past this was a privileged location which conveyed godlike powers to he
(almost invariably a he) with his fingers on the keys. Under UNIX and other
modern timesharing OSs it is just the tty the system was booted from. Some of
the mystique remains, however, and it is traditional for sysadmins to post
urgent messages to all users from /dev/console. 2. On microcomputer UNIX
boxes: the main screen and keyboard (as opposed to character-only terminals
talking to a serial port board). Typically only the console can do real
graphics or run <X>. see also <CTY>. <console jockey> n. see <terminal
junkie>. <content-free> adj. Ironic analogy with `context-free', used of a
message which adds nothing to the recipient's knowledge. Though this
adjective is sometimes applied to <flamage>, it more usually connotes
derision for communication styles which exalt form over substance, or are
centered on concerns irrelevant to the subject ostensibly at hand. Perhaps
most used with reference to speeches by company presidents and like animals.
"Content-free? Uh...that's anything printed on glossy paper". <Conway's Law>
prov. The rule that the organization of the software and the organization of
the software team will be congruent; originally stated as "If you have four
groups working on a compiler, you'll get a four-pass compiler." This was
originally promulgated by Melvin Conway, an early proto-hacker who wrote an
assembler for the Burroughs 220 called SAVE. The name `SAVE' didn't stand for
anything, it was just that you lost fewer decks and listings because they all
had SAVE written on top of them. <cookie> n. A handle, transaction ID or
other form of agreement between cooperating programs. "I give him a packet,
he gives me back a cookie." see <magic cookie>. <cookie monster> [from
`Sesame Street'] n. Any of a family of early (1970s) hacks reported on
<TOPS-10>, <ITS> and elsewhere that would lock up either the victim's
terminal (on a time-sharing machine) or the <console> (on a batch
<mainframe>), repeatedly demanding "I WANT A COOKIE". The required responses
ranged in complexity from "COOKIE" through "HAVE A COOKIE" and upward. see
also <wabbit>. <copper> n. Conventional electron-carrying network cable
(which uses copper as a core conductor), as opposed to fiber-optic cable (or,
say, a short-range microwave link). Oppose <light pipe>. <copy protection>
[MS-DOS] n. A clever method of preventing incompetent pirates from stealing
software and legitimate customers from using it. Considered silly.
<copybroke> adj. Used to describe an instance of a copy-protected program
which has been `broken'; that is, a copy with the copy-protection scheme
disabled. Syn. <copywronged>. <copyleft> /kop'ee-left/ n. 1. The copyright
notice (`General Public License') carried by <GNU EMACS> and other Free
Software Foundation software, granting re-use and reproduction rights to all
comers (but see also <General Public Virus>). 2. By extension, any copyright
notice intended to achieve similar aims. <copywronged> [play on "copyright"]
adj. Syn. for <copybroke>. <core> n. Main storage or RAM. Dates from the days
of ferrite-core memory; now archaic, but still used in the UNIX community and
by old-time hackers or those who would sound like same. Some derived idioms
are quite current; "in core", for example, means `in memory' (as opposed to
`on disk'), and both <core dump> and the "core image" or "core file" produced
by one are preferred terms. <core dump> n. [common <Iron Age> slang,
preserved by UNIX] 1. A symptom of catastrophic program failure due to
internal error. 2. By extension, used for humans passing out, vomiting, or
registering extreme shock. "He dumped core. All over the floor. What a mess."
"He heard about ... and dumped core." 3. Occasionally used for a human
rambling on pointlessly at great length; esp. in apology: "Sorry I dumped
core on you". 4. A recapitulation of knowledge (compare <bits>, sense 1).
Hence, spewing all one knows about a topic, esp. in a lecture or answer to an
exam question. "Short, concise answers are better than core dumps" [From the
instructions to a qual exam at Columbia]. see <core>. <core leak> n. Syn.
with <memory leak>. <Core Wars> n. A game between `assembler' programs in a
simulated machine, where the objective is to kill your opponent's program by
overwriting it. This was popularized by A.K. Dewdney's column in `Scientific
American' magazine, but is said to have been first devised by Victor
Vyssotsky as a PDP-1 hack, during the early '60s at Bell Labs. It is rumored
that the game is a civilized version of an amusement called DARWIN common on
pre-MMU multitasking machines. see <core>. <corge> /korj/ [originally, the
name of a cat] n. Yet another meta-syntactic variable, invented by Mike
Gallaher and propagated by the Gosmacs documentation. see <grault>. <cosmic
rays> n. Notionally, the cause of <bit rot>. However, this is a
semi-independent usage which may be invoked as a humorous way to <handwave>
away any minor <randomness> that doesn't seem worth the bother of
investigating. "Hey, Eric --- I just got a burst of garbage on my <tube>,
where did that come from?" "Cosmic rays, I guess". Compare <sunspots>, <phase
of the moon>. The British seem to prefer the usage "cosmic showers"; "alpha
particles" is also heard, because stray alpha particles passing through a
memory chip can cause single bit errors (this becomes increasingly more
likely as memory sizes and densities increase). <cowboy> [Sun, from William
Gibson's cyberpunk SF] n. Synonym for <hacker>. It is reported that at Sun,
this is often said with reverence. <CP/M> (see-pee-em) [Control Program for
Microcomputers] An early microcomputer <OS> written by hacker Gary Kildall
for 8080 and Z-80 based machines, very popular in the late 1970s until
virtually wiped out by MS-DOS after the release of the IBM PC in 1981 (legend
has it that Kildall's company blew their chance to write the PC's OS because
Kildall decided to spend the day IBM's reps wanted to meet with him enjoying
the perfect flying weather in his private plane). Many of its features and
conventions strongly resemble those of early DEC operating systems such as
OS-8, RSTS and RSX-11. see <MS-DOS>, <operating system>. <CPU Wars> n. A 1979
large-format comic by Chas Andres chronicling the attempts of the brainwashed
androids of `IPM' (Impossible to Program Machines) to conquer and destroy the
peaceful denizens of HEC (Human Engineered Computers). This rather
transparent allegory featured many references to <ADVENT> and the immortal
line "Eat flaming death, minicomputer mongrels!" (uttered, of course, by an
IPM stormtrooper). It is alleged that the author subsequently received a
letter of appreciation on IBM company stationery from the then-head of IBM's
Thomas J. Watson research laboratories (then as now one of the few islands of
true hackerdom in the IBM archipelago). The lower loop of the `B' in the IBM
logo, it is said, had been carefully whited out. see <eat flaming death>.
<cracker> n. One who breaks security on a system. Coined c.1985 by hackers in
defense against journalistic misuse of <hacker> (q.v., sense #7). There had
been an earlier attempt to establish `worm' in this sense around 1981-1982 on
USENET; this largely failed. <crank> [from automotive slang] vt. Verb used to
describe the performance of a machine, especially sustained performance.
"This box cranks about 6 MegaFLOPS, with a burst mode of twice that on
vectorized operations." <crash> 1. n. A sudden, usually drastic failure. Most
often said of the <system> (q.v., sense #1), sometimes of magnetic disk
drives. "Three lusers lost their files in last night's disk crash." A disk
crash which entails the read/write heads dropping onto the surface of the
disks and scraping off the oxide may also be referred to as a "head crash",
whereas the term "system crash" usually, though not always, implies that the
operating system or other software was at fault. 2. vi. To fail suddenly.
"Has the system just crashed?" Also used transitively to indicate the cause
of the crash (usually a person or a program, or both). "Those idiots playing
<SPACEWAR> crashed the system." 3. Sometimes said of people hitting the sack
after a long <hacking run>; see <gronk> (sense #4). <crash and burn> vi.,n. A
spectacular crash, in the mode of the conclusion of the car chase scene from
Steve McQueen's `Bullitt'. Sun-3 monitors losing the flyback transformer and
lightning strikes on VAX-11/780 backplanes are notable crash and burn
generators. The construction "crash and burn machine" is reported for a
computer used for alpha or <beta> testing, or reproducing bugs, only (not
development). The implication is that it wouldn't be such a disaster if that
machine crashed, since only the testers would be inconvenienced. <crawling
horror> n. Ancient crufty hardware or software that forces beyond the control
of the hackers at a site refuse to let die. Like <dusty deck> or
<gonkulator>, but connotes that the thing described is not just an irritation
but an active menace to health and sanity. "Mostly we code new stuff in C,
but they pay us to maintain one big Fortran II application from
nineteen-sixty-X that's a real crawling horror...". Compare <WOMBAT>. <cray>
/kray/ n. 1. One of the line of supercomputers designed by Cray Research. The
term is actually the lowercased last name of Seymour Cray, a noted computer
architect and co-founder of the company. Numerous vivid legends surround him,
some true and some admittedly invented by Cray Research brass to shape their
corporate culture. 2. Any supercomputer at all. <cray instability> n. A
shortcoming of a program or algorithm which only manifests itself when
running a large problem on a powerful machine. Generally more subtle than
bugs which can be detected in smaller problems running on a workstation or
mini. <crayola> n. A super-mini or -micro computer that provides some
reasonable percentage of supercomputer performance for an unreasonably low
price. Might also be a <killer micro>. <crayon> n. Someone who works on Cray
supercomputers. More specifically implies a programmer, probably of the CDC
ilk, probably male, and almost certainly wearing a tie (irrespective of
gender). Unicos systems types who have a Unix background tend not to be
described as crayons. <creationism> n. The (false) belief that large,
innovative designs can be completely specified in advance and then painlessly
magicked out of the void by the normal efforts of a team of normally talented
programmers. In fact, experience has shown repeatedly that good designs arise
only from evolutionary, exploratory interaction between one (or at most a
small handful) of exceptionally able designer(s) and an active user
population --- and that the first try at a big new idea is always wrong.
Unfortunately, because these truth doesn't fit the planning models beloved of
<management> they are generally ignored. <creeping elegance> n. Describes a
tendency for parts of a design to become <elegant> past the point of
diminishing return. This often happens at the expense of the less interesting
parts of the design, schedule, and other things deemed important in the <Real
World>. see also <creeping featuritis>. <creeping featuritis> /kree'ping
fee-ch@r-ie't@s/ n. 1. Describes a systematic tendency to load more <chrome>
onto systems at the expense of whatever elegance they may have possessed when
originally designed. see also <feeping creaturitis>. "You know, the main
problem with <BSD UNIX> has always been creeping featuritis". At MIT, this
tends to be called `creeping featur*ism*' (and likewise, `feeping
creaturism'). (After all, -ism means `condition' whereas -itis usually means
`inflammation of'...) 2. More generally, the tendency for anything
complicated to become even more complicated because people keep saying, "Gee,
it would be even better if it had this feature too." (see <feature>.) The
result is usually a patchwork because it grew one ad-hoc step at a time,
rather than being planned. Planning is a lot of work, but it's easy to add
just one extra little feature to help someone... and then another... and
another.... When creeping featurism gets out of hand it's like a cancer.
Usually this term is used to describe computer programs, but it could also be
said of the federal government, the IRS 1040 form, and new cars. see also
<creeping elegance>. <cretin> /kre'tn/ or /kree'tn/ n. Congenital <loser>; an
obnoxious person; someone who can't do anything right. It has been observed
that American hackers tend to favor the British pronunciation /kre'tn/ over
standard American /kree'tn/; it is thought this may be due to the insidious
phonetic influence of Monty Python's Flying Circus. <cretinous> /kre't@n-uhs/
or /kree't@n-uhs/ adj. Wrong; non-functional; very poorly designed (Also used
pejoratively of people). Synonyms: <bletcherous>, <bagbiter>, <losing>,
<brain-damaged>. <crippleware> n. 1. <shareware> which has some important
functionality deliberately removed, so as to entice potential users to pay
for a working version. see also <guiltware>. 2. [Cambridge] <guiltware> which
exhorts you to donate to some charity. <crlf> /ker'l@f/, sometimes /kru'l@f/
n. A carriage return (CR) followed by a line feed (LF). More loosely,
whatever it takes to get you from the end of one line of text to the
beginning of the next line. see <newline>, <terpri>. Under <UNIX> influence
this usage has become less common (UNIX uses a bare line feed as its `CRLF').
<crock> [from the obvious mainstream scatologism] n. 1. An awkward feature or
programming technique that ought to be made cleaner. Example: Using small
integers to represent error codes without the program interpreting them to
the user (as in, for example, UNIX `make(1)') is a crock. 2. Also, a
technique that works acceptably but which is quite prone to failure if
disturbed in the least, for example depending on the machine opcodes having
particular bit patterns so that you can use instructions as data words too; a
tightly woven, almost completely unmodifiable structure. see <kluge>. Also in
the adjectives "crockish", "crocky" and the noun "crockitude". <cross-post>
[USENET] vi. To post a single article directed to several newsgroups.
Distinguished from posting the article repeatedly, once to each newsgroup,
which causes people to see it multiple times. Cross-posting is frowned upon,
as it tends to cause <followup> articles to go to inappropriate newsgroups,
as people respond to only one part of the original posting (unless the
originator is careful to specify a newsgroup for followups.) <crudware>
/kruhd'weir/ n. Pejorative term for the hundreds of megabytes of low-quality
<freeware> circulated by user's groups and BBS systems in the micro-hobbyist
world. "Yet *another* set of disk catalog utilities for <MS-DOS>? What
crudware!" The related usage "fuckware" is reported for software so bad it
mutilates your disk, broadcasts to the Internet, or some similar fiasco.
<cruft> /kruhft/ 1. [back-formation from <crufty>] n. 1. An unpleasant
substance. The dust that gathers under your bed is cruft. 2. n. The results
of shoddy construction. 3. vt. [from hand cruft, pun on hand craft] to write
assembler code for something normally (and better) done by a compiler (see
<hand-hacking>). 4. Excess; superfluous junk. Esp. used of redundant or
superseded code. <cruft together> vt. (also "cruft up") To throw together
something ugly but temporarily workable. Like vt. <kluge>, but more
pejorative. "There isn't any program now to reverse all the lines of a file,
but I can probably cruft one together in about ten minutes." see <crufty>.
<cruftsmanship> /kruhfts'man-ship / n. [from <cruft>] The antithesis of
craftsmanship. <crufty> /kruhf'tee/ [origin unknown; poss. from `crusty' or
`cruddy'] adj. 1. Poorly built, possibly overly complex. The <canonical>
example is "This is standard old crufty DEC software". In fact, one theory of
the origin of `crufty' holds that was originally a mutation of `crusty'
applied to DEC software so old that the Ss were tall and skinny, looking more
like Fs. 2. Unpleasant, especially to the touch, often with encrusted junk.
Like spilled coffee smeared with peanut butter and catsup. 3. Generally
unpleasant. 4. (sometimes spelled "cruftie") n. A small crufty object (see
<frob>); often one which doesn't fit well into the scheme of things. "A LISP
property list is a good place to store crufties (or, random cruft)." <crumb>
n. Two binary digits; a quad. Larger than a <bit>, smaller than a <nybble>.
Syn. <tayste>. <crunch> 1. vi. To process, usually in a time-consuming or
complicated way. Connotes an essentially trivial operation which is
nonetheless painful to perform. The pain may be due to the triviality being
imbedded in a loop from 1 to 1000000000. "FORTRAN programs do mostly number
crunching." 2. vt. To reduce the size of a file by a complicated scheme that
produces bit configurations completely unrelated to the original data, such
as by a Huffman code. (The file ends up looking like a paper document would
if somebody crunched the paper into a wad.) Since such compression usually
takes more computations than simpler methods such as counting repeated
characters (such as spaces) the term is doubly appropriate. (This meaning is
usually used in the construction `file crunch(ing)' to distinguish it from
`number crunch(ing)'.) see <compress>. 3. n. The character `#'. Usage: used
at Xerox and CMU, among other places. see <ASCII>. 4. [Cambridge] To squeeze
program source into a minimum-size representation that will still compile.
The term came into being specifically for a famous program on the BBC micro
which crunched BASIC source in order to make it run more quickly (it was a
wholly-interpretive basic). <cruncha cruncha cruncha> /kruhn'ch@ kruhn'ch@
kruhn'ch@/ interj. An encouragement sometimes muttered to a machine bogged
down in a serious <grovel>. Also describes a notional sound made by
grovelling hardware. see <wugga wugga>, <grind> (sense #3). <cryppie>
/krip'ee/ n. A cryptographer. One who hacks or implements cryptographic
software or hardware. <CTSS> /see-tee-ess-ess/ n. Compatible Time-Sharing
System. An early (1963) experiment in the design of interactive time-sharing
operating systems. Cited here because it was ancestral to <Multics>, <UNIX>,
and <ITS>. The name <ITS> ("Incompatible Time-sharing System") was a hack on
CTSS. <CTY> /sit'ee/ or /see tee wie/ n. [MIT] The terminal physically
associated with a computer's system <console>. The term is a contraction of
`Console TTY', that is, `Console TeleTYpe'. This <ITS> and
<TOPS-10>-associated term has become less common than formerly, as most UNIX
hackers simply refer to the CTY as `the console'. <cube> n. A module in the
open-plan offices used at many programming shops. "I've got the manuals in my
cube". <cubing> [parallel with `tubing'] vi. 1. Hacking on an IPSC (Intel
Personal SuperComputer) hypercube. "Louella's gone cubing *again*!!" 2. An
indescribable form of self-torture (see sense #1). <cursor dipped in X> adj.
There are a couple of metaphors in English of the form `pen dipped in X'
(perhaps the most common values of X are `acid' and `bile'). These map over
neatly to this hackish usage (the cursor being what moves, leaving letters
behind, when one is composing on-line). <cuspy> /kuhs'pee/ [coined at WPI
from the DEC acronym CUSP, for Commonly Used System Program, i.e., a utility
program used by many people] adj. 1. (of a program) Well-written. 2.
Functionally excellent. A program which performs well and interfaces well to
users is cuspy. see <rude>. 3. [NYU] Said of an attractive woman, especially
one regarded as available. <cut a tape> vi. To write a software or document
distribution on magnetic tape for shipment. Has nothing to do with physically
cutting the medium! Though this usage is quite widespread, one never speaks
of analogously `cutting a disk' or anything else in this sense. <cybercrud>
/sie'ber-kruhd/ [coined by Ted Nelson] n. Obfuscatory tech-talk. Verbiage
with a high <MEGO> factor. The computer equivalent of bureaucratese.
<cyberpunk> /sie'ber-puhnk/ [orig. by SF writer Bruce Bethke and/or editor
Gardner Dozois] n.,adj. A subgenre of SF launched in 1982 by William Gibson's
epoch-making novel `Neuromancer' (though its roots go back through Vernor
Vinge's `True Names' (see Appendix C) to John Brunner's 1975 Hugo winner,
`The Shockwave Rider'). Gibson's near-total ignorance of computers and the
present-day hacker culture enabled him to speculate about the role of
computers and hackers in futures in ways hackers have since found both
irritatingly naive and tremendously stimulating. Gibson's work was widely
imitated, in particular by the short-lived but innovative `Max Headroom' TV
series. see <cyberspace>, <ice>, <go flatline>. <cyberspace> /sie'ber-spays/
n. 1. Notional `information-space' loaded with visual cues and navigable with
brain-computer interfaces called `cyberspace decks'; a characteristic prop of
<cyberpunk> SF. At time of writing (1990) serious efforts to construct
<virtual reality> interfaces modelled explicitly on <cyberspace> are already
under way, using more conventional devices such as glove sensors and
binocular TV headsets. Few hackers are prepared to outright deny the
possibility of a cyberspace someday evolving out of the network (see
<network, the>). 2. Occasionally, the notional location of the mind of a
person in <hack mode>. Some hackers report experiencing strong eidetic
imagery when in hack mode; interestingly, independent reports from multiple
sources suggest that there are common features to the experience. In
particular, the dominant colors of this kind of subjective `cyberspace' are
often gray and silver, and the imagery often involves constellations of
marching dots, elaborate shifting patterns of lines and angles, or moire
patterns. <cycle> n. The basic unit of computation. What every hacker wants
more of. One might think that single machine instructions would be the
measure of computation, and indeed computers are often compared by how many
instructions they can process per second, but some instructions take longer
than others. Nearly all computers have an internal clock, though, and you can
describe an instruction as taking so many "clock cycles". Frequently the
computer can access its memory once on every clock cycle, and so one speaks
also of "memory cycles". These are technical meanings of <cycle>. The slang
meaning comes from the observation that there are only so many cycles per
second, and when you are sharing a computer, the cycles get divided up among
the users. The more cycles the computer spends working on your program rather
than someone else's, the faster your program will run. That's why every
hacker wants more cycles: so he can spend less time waiting for the computer
to respond. <cycle crunch> n. The situation where the number of people trying
to use the computer simultaneously has reached the point where no one can get
enough cycles because they are spread too thin. Usually the only solution is
to buy more computer. Happily, this has rapidly become easier in recent
years, so much so that the very term <cycle crunch> now has a faintly archaic
flavor (most hackers now use workstations or personal computers as opposed to
traditional timesharing systems). <cycle drought> n. A scarcity of cycles. It
may be due to a <cycle crunch>, but could also occur because part of the
computer is temporarily not working, leaving fewer cycles to go around.
Example: "The <high moby> is <down>, so we're running with only half the
usual amount of memory. There will be a cycle drought until it's fixed."
<cycle server> n. A powerful machine which exists primarily for running large
batch jobs. Interactive tasks such as editing should be done on other
machines on the network, such as workstations. {= D =} <daemon> /day'm@n/ or
/dee'm@n/ [Disk And Execution MONitor] n. A program which is not invoked
explicitly, but which lies dormant waiting for some condition(s) to occur.
The idea is that the perpetrator of the condition need not be aware that a
daemon is lurking (though often a program will commit an action only because
it knows that it will implicitly invoke a daemon). For example, under <ITS>
writing a file on the LPT spooler's directory would invoke the spooling
daemon, which prints the file. The advantage is that programs which want (in
this example) files printed need not compete for access to the LPT. They
simply enter their implicit requests and let the daemon decide what to do
with them. Daemons are usually spawned automatically by the system, and may
either live forever or be regenerated at intervals. Usage: <daemon> and
<demon> are often used interchangeably, but seem to have distinct
connotations. The term <daemon> was introduced to computing by <CTSS> people
(who pronounced it dee'mon) and used it to refer to what ITS called a
<dragon>. The meaning and pronunciation have drifted, and we think this
glossary reflects current usage. see also <demon>. <dangling pointer> n. A
reference that doesn't actually lead anywhere (in C and some other languages,
a pointer that doesn't actually point at anything valid). Used as slang in a
generalization of its technical meaning; a local phone number for a person
who's since moved to the other coast, for example. <DATAMATION> n. A magazine
that many hackers assume all <suits> read. Used to question an unbelieved
quote, as in "Did you read that in DATAMATION?". <day mode> n. see <phase>
(of people). <dd> /dee-dee/ [from IBM <JCL>] vt. Equivalent to <cat> or
<BLT>. A UNIX copy command with special options suitable for block-oriented
devices. Often used in heavy-handed system abuse, as in "Let's dd the root
partition onto a tape, then use the boot prom to load it back on to a new
disk". The UNIX `dd(1)' was desugned with a weird, distinctly non-UNIXy
keyword option syntax reminiscent of IBM System/360 JCL (which had a similar
DD command); though the command filled a need, the design choice looks to
have been somebody's joke. The slang usage is now very rare outside UNIX
sites and now nearly obsolescent even there, as `dd(1)' has been <deprecated>
for a long time (though it has no replacement). Replaced by <BLT> or simple
English `copy'. <DDT> /dee-dee-tee/ n. 1. Generic term for a program that
helps you to debug other programs by showing individual machine instructions
in a readable symbolic form and letting the user change them. In this sense
the term DDT is now slightly archaic, having been widely displaced by
`debugger' 2. [ITS] Under MIT's fabled <ITS> operating system, its DDT was
also used as the SHELL or top level command language used to execute other
programs. 3. Any one of several specific DDTs (sense 1) supported on early
DEC hardware. The DEC PDP-10 Reference Handbook (1969) contained a footnote
on the first page of the documentation for DDT which illuminates the origin
of the term: Historical footnote: DDT was developed at MIT for the PDP-1
computer in 1961. At that time DDT stood for "DEC Debugging Tape". Since
then, the idea of an on-line debugging program has propagated throughout the
computer industry. DDT programs are now available for all DEC computers.
Since media other than tape are now frequently used, the more descriptive
name "Dynamic Debugging technique" has been adopted, retaining the DDT
acronym. Confusion between DDT-10 and another well known pesticide,
dichloro-diphenyl-trichloroethane (C14-H9-Cl5) should be minimal since each
attacks a different, and apparently mutually exclusive, class of bugs. Sadly,
this quotation was removed from later editions of the handbook as the <suit>s
took over and DEC became much more `businesslike'. <dead code> n. Routines
which can never be accessed because all calls to them have been removed, or
code which cannot be reached because it is guarded by a control structure
which provably must always transfer control somewhere else. The presence of
dead code may reveal either logical errors due to alterations in the program
or significant changes in the assumptions and environment of the program (see
also <software rot>); a good compiler should detect flag dead code so a
maintainer can think about what it means. Syn. <grunge>. <deadlock> n. 1. A
situation wherein two or more processes are unable to proceed because each is
waiting for another to do something. A common example is a program
communicating to a server, which may find itself waiting for output from the
server before sending anything more to it, while the server is similarly
waiting for more input from the controlling program before outputting
anything. (It is reported that this particular flavor of deadlock is
sometimes called a "starvation deadlock", though that term is more properly
used for situations where a program can never run simply because it never
gets high enough priority. Another common flavor is "constipation", where
each process is trying to send stuff to the other, but all buffers are full
because nobody is reading anything.) see <deadly embrace>. 2. Also used of
deadlock-like interactions between humans, as when two people meet in a
narrow corridor, and each tries to be polite by moving aside to let the other
pass, but they end up swaying from side to side without making any progress
because they always both move the same way at the same time. <deadly embrace>
n. Same as <deadlock>, though usually used only when exactly two processes
are involved. This is the more popular term in Europe; <deadlock> in the
United States. Also "deadly embrace" is often restricted to the case where
exactly two processes are involved, while <deadlock> can involve any number.
<death star> [from the movie `Star Wars'] The AT&T corporate logo, which
appears on computers sold by AT&T and bears an uncanny resemblance to the
`Death Star' in the movie. This usage is particularly common among partisans
of <BSD> UNIX, who tend to regard the AT&T versions as inferior and AT&T as a
bad guy. AT&T's internal magazine, `Focus', uses "death star" for an
incorrectly done AT&T logo in which the inner circle in the top left is dark
instead of light -- a frequent result of dark-on-light logo images. <DEC
Wars> n. A 1983 <USENET> posting by Alan Hastings and Steve Tarr, spoofing
the `Star Wars' movies in hackish terms. Some years later, ESR (disappointed
by Hastings/Tarr's failure to exploit a great premise more thoroughly) posted
a three-times-longer complete rewrite called `UNIX WARS'; the two are often
confused. <deckle> [from dec- and <nickle>] /dek'l/ n. Two <nickle>s; 10
bits. Reported among developers for Mattel's GI 1600 (the Intellivision games
processor), a chip with 16-bit-wide RAM but 10-bit-wide ROM. <deep magic>
[poss. fr. C.S. Lewis's `Narnia' books.] n. An awesomely arcane technique
central to a program or system, esp. one not generally published and
available to hackers at large (compare <black art>). one which could only
have been uttered by a true <wizard>. Compiler optimization techniques and
many aspects of <OS> design used to be <deep magic>; many techniques in
cryptography, signal processing, graphics and AI still are. Compare <heavy
wizardry>. Esp. found in comments of the form "Deep magic begins here...".
Compare <voodoo programming>. <deep space> adj. 1. Describes the notional
location of any program which has gone <off the trolley>. Esp. used of
programs which just sit there silently grinding long after either failure or
some output is expected. Compare <buzz>, <catatonia>, <hyperspace>. 2. The
metaphorical location of a human so dazed and/or confused or caught up in
some esoteric form of <bogosity> that he/she no longer responds coherently to
normal communication. Compare <page out>. <defenestration> [from the
traditional Czechoslovak method of assassinating prime ministers, via SF
fandom] n. 1. Proper karmic retribution for an incorrigible punster. "Oh,
ghod, that was *awful*!" "Quick! Defenestrate him!" see also <h infix>. 2.
The act of exiting a window system in order to get better response time from
a full-screen program. 3. [proposed] The requirement to support a
command-line interface. As: "It has to run on a VT100." "Curses! I've been
defenestrated". <defined as> adj. Currently in the role of, usually in an
off-the-organization-chart sense. "Pete is currently defined as bug
prioritizer". <dehose> vt. To clear a <hosed> condition. <delint> vt. To
modify code to remove problems detected when linting. see <lint>. <demo>
/de'moh/ [short for `demonstration'] 1. v. To demonstrate a product or
prototype. A far more effective way of inducing bugs to manifest than any
number of <test> runs, especially when important people are watching. 2. n.
The act of demoing. <demo mode> [Sun] n. State of being <heads down> in order
to finish code in time for a <demo>, usually due <RSN>. <delta> n. 1. A
change, especially a small or incremental change. Example: "I just doubled
the speed of my program!" "What was the delta on program size?" "About thirty
percent." (He doubled the speed of his program, but increased its size by
only thirty percent.) 2. [UNIX] A <DIFF>, especially a <DIFF> stored under
the set of version-control tools called SCCS (Source Code Control System). 3.
n. A small quantity, but not as small as <epsilon>. The slang usage of
<delta> and <epsilon> stems from the traditional use of these letters in
mathematics for very small numerical quantities, particularly in so-called
`epsilon-delta' proofs in the differential calculus. <delta> is often used
once <epsilon> has been mentioned to mean a quantity that is slightly bigger
than <epsilon> but still very small. For example, "The cost isn't epsilon,
but it's delta" means that the cost isn't totally negligible, but it is
nevertheless very small. Compare <within delta of>, <within epsilon of>: that
is, close to and even closer to. <demented> adj. Yet another term of disgust
used to describe a program. The connotation in this case is that the program
works as designed, but the design is bad. For example, a program that
generates large numbers of meaningless error messages implying it is on the
point of imminent collapse. <demigod> n. Hacker with years of experience, a
national reputation, and a major role in the development of at least one
design, tool or game used by or known to more than 50% of the hacker
community. To qualify as a genuine demigod, the person must recognizably
identify with the hacker community and have helped shape it. Major demigods
include Ken Thompson and Dennis Ritchie (co-inventors of <UNIX> and C) and
Richard M. Stallman (inventor of <EMACS>). In their hearts of hearts most
hackers dream of someday becoming demigods themselves, and more than one
major software project has been driven to completion by the author's veiled
hopes of apotheosis. see also <net.god>, <true-hacker>. <demon> n. 1. [MIT] A
portion of a program which is not invoked explicitly, but which lies dormant
waiting for some condition(s) to occur. see <daemon>. The distinction is that
demons are usually processes within a program, while daemons are usually
programs running on an operating system. Demons are particularly common in AI
programs. For example, a knowledge manipulation program might implement
inference rules as demons. Whenever a new piece of knowledge was added,
various demons would activate (which demons depends on the particular piece
of data) and would create additional pieces of knowledge by applying their
respective inference rules to the original piece. These new pieces could in
turn activate more demons as the inferences filtered down through chains of
logic. Meanwhile the main program could continue with whatever its primary
task was. 2. [outside MIT] Often used equivalently to <daemon>, especially in
the <UNIX> world where the latter spelling and pronunciation is considered
mildly archaic. <depeditate> vt. Humourously, to cut off the feet of. When
using some computer-aided phototypesetting tools, careless placement of text
blocks within a page or above a rule can result in chopped-off letter
descenders. Such letters are said to have been depeditated. <deprecated> n.
Said of a program or feature that is considered obsolescent and in the
process of being phased out, usually in favor of a specified replacement.
Deprecated features can, unfortunately, linger on for many years. <de-rezz,
derez> /dee-rez'/ [from the movie `Tron'] 1. vi. To disappear or dissolve;
the image that goes with it is of an object breaking up into raster lines and
static and then dissolving. Occasionally used of a person who seems to have
suddenly "fuzzed out" mentally rather than physically. Usage: extremely
silly, also rare. This verb was actually invented as *fictional* hacker
slang, and adopted in a spirit of irony by real hackers years after the fact.
2. vt. On a Macintosh, the data is compiled separately from the program, in
small segments of the program file known as "resources". The standard
resource compiler is Rez. The standard resource decompiler is DeRez. Usage:
very common. <desk check> n.,v. To grovel over hardcopy of source code
mentally simulating the control flow; a method of catching bugs. No longer
common practice in this age of on-screen editing and fast compiles, though
some maintain stoutly that it ought to be. <devo> /dee'voh/ [orig. in-house
slang at Symbolics] n. A person in a development group. see also <doco> and
<mango>. <dickless workstation> n. Extremely pejorative hackerism for
"diskless workstation", a class of botches including the Sun 3/50 and other
machines designed exclusively to network with an expensive central disk
server. These combine all the disadvantages of time-sharing with all the
disadvantages of distributed personal computers. <diddle> 1. vt. To work with
in a not particularly serious manner. "I diddled a copy of <ADVENT> so it
didn't double-space all the time." "Let's diddle this piece of code and see
if the problem goes away." see <tweak> and <twiddle>. 2. n. The action or
result of diddling. see also <tweak>, <twiddle>, <frob>. <diffs> n. 1.
Differences, especially difference in source code or documents. Includes
additions. "Send me your diffs for the jargon file!" 2. (often in the
singular <diff>) the output from the `diff(1)' utility, esp. when used as
specification input to the `patch(1)' utility (which can actually perform the
modifications). This is a common method of distributing patches and source
updates in the UNIX/C world. <digit> /dij'it/ n. An employee of Digital
Equipment Corporation. see also <VAX>, <VMS>, <PDP-10>, <TOPS-10>, <field
circus>. <dike> vt. To remove or disable a portion of something, as a wire
from a computer or a subroutine from a program. A standard slogan runs: "When
in doubt, dike it out." (The implication is that it is usually more effective
to attack software problems by reducing complexity rather than increasing
it). The word `dikes' is widely used among mechanics and engineers to mean
`diagonal cutters', a heavy-duty metal-cutting device; to `dike something
out' means to use such cutters to remove something. Among hackers this term
has been metaphorically extended to non-physical objects such as sections of
code. <ding> /ding/ n.,vi. 1. Synonym for <feep>. Usage: rare among hackers,
but commoner in the <Real World>. 2. <dinged>: What happens when someone in
authority gives you a minor bitching about something, esp. something you
consider trivial. "I was dinged for having a messy desk". <dink> adj. Said of
a machine which has the <bitty box> nature; a machine too small to be worth
bothering with, sometimes the current system you're forced to work on. First
heard from an MIT hacker (BADOB) working on a CP/M system with 64K in
reference to any 6502 system, then from people writing 32 bit software about
16 bit machines. "GNUmacs will never work on that dink machine." Probably
derived from mainstream `dinky', which isn't sufficiently perjorative.
<dinosaur> n. 1. Any hardware requiring raised flooring and special power.
Used especially of old minis and mainframes when contrasted with newer
microprocessor-based machines. In a famous quote from the '88 UNIX EXPO, Bill
Joy compared the mainframe in the massive IBM display with a grazing
dinosaur, "with a truck outside pumping its bodily fluids through it". IBM
was not amused. Compare <big iron>; see also <mainframe>. 2. [IBM] A very
conservative user; a <zipperhead>. <dinosaur pen> n. A traditional
<mainframe> computer room complete with raised flooring, special power, its
own ultra-heavy-duty air conditioning, and a side order of Halon fire
extinguishers. see <boa>. <dinosaurs mating> n. Said to occur when yet
another <big iron> merger or buyout occurs; reflects a perception by hackers
that these signal another stage in the long-drawn-out death throes of the
<mainframe> industry. In its glory days of the Sixties, it was `IBM and the
Seven Dwarves': Burroughs, Control Data, General Electric, Honeywell, NCR,
RCA and Univac. RCA and GE sold out early and it was `IBM and the Bunch'
(Burroughs, Univac, NCR, Control Data, and Honeywell) for a while. Honeywell
was bought out by Bull; Burroughs merged with Univac (in 1984, this was when
the phrase `dinosaurs mating' was coined), and at time of writing AT&T is
attempting to recover from a disasterously bad first six years in the
hardware industry by buying NCR. More such earth-shaking unions of doomed
giants seem inevitable. <dirty power> n. Electrical mains voltage which is
unfriendly to the delicate innards of computers. <Drop-outs>, spikes, average
voltage significantly higher or lower than nominal or plain noise can all
cause problems of varying subtlety and severity. <Discordianism>
/dis-kor'di-@n-ism/ n. The veneration of <Eris>, aka Discordia; widely
popular among hackers. Popularized by Robert Anton Wilson's `Illuminatus!'
trilogy as a sort of self-subverting dada-Zen for Westerners --- it should on
no account be taken seriously but is far more serious than most jokes.
Usually connected with an elaborate conspiracy theory/joke involving
millenia-long warfare between the anarcho-surrealist partisans of Eris and a
malevolent, authoritarian secret society called the Illuminati. see Appendix
B, <Church of the Sub-Genius>, and <ha ha only serious>. <display hack> n. A
program with the same approximate purpose as a kaleidoscope: to make pretty
pictures. Famous display hacks include <munching squares>, <smoking clover>,
the BSD UNIX `rain(6)' program, `worms(6)' on miscellaneous UNIXes, and the
<X> kaleid program. Display hacks can also be implemented without programming
by creating text files containing numerous escape sequences for
interpretation by a video terminal; one notable example displayed, on any
VT100, a Christmas tree with twinkling lights and a toy train circling its
base. Syn. <psychedelicware>. <disk farm> n. (also <laundromat>) A large room
or rooms filled with disk drives (esp. <washing machines>). <distribution> n.
1. A software source tree packaged for distribution; but see <kit>. 2. A
vague term encompassing mailing lists and USENET newsgroups; any
topic-oriented message channel with multiple recipients. <do protocol> [from
network protocol programming] vt. To perform an interaction with somebody or
something that follows a clearly defined procedure. For example, "Let's do
protocol with the check" at a restaurant means to ask for the check,
calculate the tip and everybody's share, collect money from everybody,
generate change as necessary, and pay the bill. <doco> /do'koh/ [orig.
in-house slang at Symbolics] n. A documentation writer. see also <devo> and
<mango>. <documentation> n. The multiple kilograms of macerated, pounded,
steamed, bleached, and pressed trees that accompanies any modern software or
hardware product (see also <tree-killer>). Hackers seldom read paper
documentation and (too often) resist writing it; they prefer theirs to be
terse and on-line. see <drool-proof paper>. <dodgy> adj. Syn. with <flaky>.
Preferred outside the U.S. <dogcow> n. see <moof>. <dogwash> [From a quip in
the `urgency' field of a very optional software change request, about 1982.
It was something like, "Urgency: Wash your dog first."] n. A project of
minimal priority, undertaken as an escape from more serious work. Also, to
engage in such a project. Many games and much <freeware> gets written this
way. <domainist> adj. 1. Said of an <Internet address> (as opposed to a <bang
path>) because of the part to the right of the `@', which specifies a nested
series of "domains"; for example, "eric@snark.thyrsus.com" specifies the
machine called "snark" in the subdomain called <thyrsus> within the top-level
domain called "com". 2. Said of a mailer or routing program which knows how
to handle domainist addresses. 3. Said of a site which runs a domainist
mailer. Reading domain addresses is something of an art. Here are the five
most important top-level functional domains followed by a selection of
geographical domains: `com' Machines at commercial organizations. `edu'
Machines at educational instututions. `gov' U.S. Government civilian sites.
`mil' U.S. military sites. `us' Sites in the U.S. not within one of the
functional domains `su' Sites in the Soviet Union (only one really active one
so far!) `uk' Sites in the United Kingdom Within the `us' domain there are
subdomains for the fifty states, generally with a name identical to the state
postal code. <Don't do that, then!> [from an old doctor's office joke about a
patient with a trivial complaint] interj. Stock response to a user complaint.
"When I type control-S, the whole system comes to a halt for thirty seconds."
"Don't do that, then." Compare <RTFM>. <dongle> /dong'gl/ n. 1. A security
device for commercial microcomputer programs consisting of a serialized EPROM
and some drivers in a D-25 connector shell. Programs that use a dongle query
the port at startup and programmed intervals thereafter, and terminate if it
does not respond with the dongle's programmed validation code. Thus, users
could make as many copies of the program as they want but must pay for each
dongle. The idea was clever but initially a failure, as users disliked tying
up a serial port this way. Most dongles on the market today (1990) will pass
data through the port, and monitor for `magic codes' (and combinations of
status lines) with minimal if any interference with devices further down the
line (this innovation was necessary to allow daisy-chained dongles for
multiple pieces of software). The devices are still not widely used, as the
industry has trended away from copy-protection schemes in general. 2. By
extension, any physical electronic key or transferrable ID required for a
program to function. see <dongle-disk>. <dongle-disk> /don'gl disk/ n. see
<dongle>; a `dongle-disk' is a floppy disk with some coding which allows an
application to identify it uniquely. It can therefore be used as a <dongle>.
Also called a "key disk". <donuts> n. Collective noun for any set of memory
bits. This is really archaic and may no longer be live slang; it dates from
the days of ferrite-core memories in which each bit was represented by a
doughnut-shaped magnetic flip-flop. Compare <core>. <doorstop> n. Used to
describe equipment that is non-functional and halfway expected to remain so,
especially obsolescent equipment kept around for political reasons or
ostensibly as a backup. "When we get another Wyse-50 in here that ADM3 will
turn into a doorstop." Compare <boat anchor>. <dot file> [UNIX] n. A file
that is not visible to normal directory-browsing tools (on UNIX, files named
beginning with a dot are normally invisible to the directory lister). <double
bucky> adj. Using both the CTRL and META keys. "The command to burn all LEDs
is double bucky F." see also <meta bit>, <cokebottle>, <quadruple bucky>,
<space-cadet keyboard>. The following lyrics were written on May 27, 1978, in
celebration of the Stanford keyboard. A typical MIT comment was that the
Stanford <bucky bits> (control and meta shifting keys) were nice, but there
weren't enough of them; you could only type 512 different characters on a
Stanford keyword. An obvious thing was simply to add more shifting keys, and
this was eventually done; one problem, is that a keyboard with that many
shifting keys is hard on touch-typists, who don't like to move their hands
away from the home position on the keyboard. It was half-seriously suggested
that the extra shifting keys be pedals; typing on such a keyboard would be
very much like playing a full pipe organ. This idea is mentioned below, in a
parody of a very fine song by Jeffrey Moss called `Rubber Duckie', which was
published in `The Sesame Street Songbook'. Double Bucky Double bucky, you're
the one! You make my keyboard lots of fun. Double bucky, an additional bit or
two: (Vo-vo-de-o!) Control and meta, side by side, Augmented ASCII, nine bits
wide! Double bucky! Half a thousand glyphs, plus a few! Oh, I sure wish that
I Had a couple of Bits more! Perhaps a Set of pedals to Make the number of
Bits four: Double double bucky! Double bucky, left and right OR'd together,
outta sight! Double bucky, I'd like a whole word of Double bucky, I'm happy I
heard of Double bucky, I'd like a whole word of you! --- The Great Quux (with
apologies to Jeffrey Moss) [This is, by the way, an excellent example of
computer <filk> --- ESR] <doubled sig> [USENET] n. A <sig block> that has
been included twice in a <USENET> article or, less frequently, in an
electronic mail message. An article or message with a doubled sig can be
caused by improperly configured software. More often, however, it reveals the
author's lack of experience in electronic communication. see <biff>,
<pseudo>. <down> 1. adj. Not operating. "The up escalator is down." That is
considered a humorous thing to say, but "The elevator is down" always means
"The elevator isn't working" and never refers to what floor the elevator is
on. With respect to computers, this usage has passed into the mainstream; the
extension to other kinds of machine is still hackish. 2. "go down" vi. To
stop functioning; usually said of the <system>. The message every hacker
hates to hear from the operator is, "The system will go down in five
minutes." 3. "take down", "bring down" vt. To deactivate purposely, usually
for repair work. "I'm taking the system down to work on that bug in the tape
drive." <DP> n. Data Processing. Listed here because according to hackers,
use of it marks one immediately as a <suit>. see <DPer>. <DPB> /d@-pib'/
[from the PDP-10 instruction set] vt., obs. To plop something down in the
middle. Usage: silly. Example: "Dpb yourself into that couch, there." The
connotation would be that the couch is full except for one slot just big
enough for you to sit in. DPB means `DePosit Byte', and was the name of a
PDP-10 instruction that inserts some bits into the middle of some other bits.
This usage has been kept alive by the Common Lisp function of the same name.
<DPer> n. Data Processor. Hackers are absolutely amazed that <suits> use this
term self-referentially. "*Computers* process data, not people!" see <DP>.
<dragon> n. [MIT] A program similar to a <daemon>, except that it is not
invoked at all, but is instead used by the system to perform various
secondary tasks. A typical example would be an accounting program, which
keeps track of who is logged in, accumulates load-average statistics, etc.
Under ITS, many terminals displayed a list of people logged in, where they
are, what they're running, etc. along with some random picture (such as a
unicorn, Snoopy, or the Enterprise) which was generated by the `name dragon'.
Usage: rare outside MIT --- under UNIX and most other OSs this would be
called a "background demon" or <daemon>. The best-known UNIX example of a
dragon is `cron(1)'. At SAIL they called this sort of thing a "phantom".
<Dragon Book> n. Aho, Sethi and Ullman's classic compilers text `Compilers:
Principles, Techniques and Tools', so called because of the cover design
depicting a knight slaying a dragon labelled `compiler complexity'. This
actually describes the `Red Dragon Book'; an earlier edition (sans Sethi and
titled `Principles Of Compiler Design') was the `Green Dragon Book'. see also
<Blue Book>, <Red Book>, <Green Book>, <Silver Book>, <Purple Book>, <Orange
Book>, <White Book>, <Pink-Shirt Book>, <Aluminum Book>. <drain> [IBM] v.
Syn. for <flush> (sense #4). <dread high bit disease> n. A condition endemic
to PRIME (formerly PR1ME) minicomputers which results in all the characters
having their high (0x80) bit ON rather than OFF. This of course makes
transporting files to other systems much more difficult, not to mention
talking to true eightbit devices. It is reported that PRIME adopted the
reversed eight bit convention in order to save 25 cents/serial line/machine.
This probably qualifies as one of the most <cretinous> design tradeoffs ever
made. see <meta bit>. <DRECNET> /drek'net/ [fr. German & Yiddish `dreck'] n.
Deliberate distortion of DECNET, a networking protocol used in the <VMS>
community. So-called because DEC helped write the Ethernet specification, and
then (either stupidly or as a malignant customer-control tactic) violated
that spec in the design of DRECNET in a way that made it incompatible. see
also <connector conspiracy>. <driver> n. 1. The <main loop> of an interactive
program; the code that gets commands and dispatches them for execution. 2. In
"device driver", code designed to handle a particular peripheral device such
as a magnetic disk or tape. <drool-proof paper> n. Documentation which has
been obsessively dumbed down, to the point where only a <cretin> could bear
to read it, is said to have succumbed to the `drool-proof paper syndrome' or
to have been `written on drool-proof paper'. For example, this is an actual
quote from Apple's LaserWriter manual: "Do not expose your LaserWriter to
open fire or flame." <drop on the floor> vt. To react to an error condition
by silently discarding messages or other valuable data. Example: "The gateway
ran out of memory, so it just started dropping packets on the floor." Also
frequently used of faulty mail and netnews relay sites that lose messages.
see also <black hole>. <drop-ins> [prob. by anology with <drop-outs>] n.
Spurious characters appearing on a terminal or console due to line noise or a
system malfunction of some sort. Esp. used when these are interspered with
your own typed input. Compare <drop-outs>. <drop-outs> n. 1. A variety of
"power glitch" (see <glitch>); momentary zero voltage on the electrical
mains. 2. Missing characters in typed input due to software malfunction or
system saturation (this can happen under UNIX, for example, when a bad
connect to a modem swamps the processor with spurious character interrupts).
3. Mental glitches; used as a way of describing those occasions when the mind
just seems to shut down for a couple of beats. see <glitch>, <fried>.
<drugged> adj., also "on drugs". 1. Conspicuously stupid, heading towards
<brain-damaged>. Often accompanied by a pantomime of toking a joint. 2. Of
hardware, very slow relative to normal performance. <drunk mouse syndrome> n.
A malady exhibited by the mouse pointing device of some workstations. The
typical symptom is for the mouse cursor on the screen to move to random
directions and not in sync with the moving of the actual mouse. Can usually
be corrected by unplugging the mouse and plugging it back again. Another
recommended fix is to rotate your optical mouse pad 90 degrees. <dumbass
attack> /duhm'ass @-tak'/ [Purdue] n. A novice's mistake made by the
experienced, especially one made by running as root under UNIX, e.g. typing
`rm -r *' or `mkfs' on a mounted file system. Compare <adger>. <dump> n. An
undigested and voluminous mass of information about a problem or the state of
a system, especially one routed to the slowest available output device
(compare <core dump>), and most especially one consisting or hex and octal
<runes> describing the byte-by-byte state of memory, mass storage or some
file. In elder days, debugging was generally done by "grovelling over a dump"
(see <grovel>); increasing use of high-level languages and interactive
debuggers has made this uncommon, and the term `dump' now has a faintly
archaic flavor. <double DECkers> n. Married couples both working for Digital
Equipment Corporation. <dup loop> /doop loop/ (also <dupe loop>) [Fidonet] n.
an incorrectly configured system or network gateway may propagate duplicate
messages on one or more <echo>s, with different identification information
which renders <dup killers> ineffective. If such a duplicate message passes
eventually reaches a system which it had already passed through (with the
original identification information), all systems passed on the way back to
that system are said to be involved in a <dup loop>. <dup killer> /doop
killer/ [Fidonet] n. Software which is supposed to detect and delete
duplicates of a message which may have reached the Fidonet system via
different routes. <dusty deck> n. Old software (especially applications) with
which one is obliged to remain compatible. The term implies that the software
in question is a holdover from card-punch days. Used esp. when referring to
old scientific and number-crunching software, much of which was written in
FORTRAN and very poorly documented but would be too expensive to replace. see
<fossil>. <DWIM> /dwim/ [Do What I Mean] 1. adj. Able to guess, sometimes
even correctly, what result was intended when provided with bogus input. 2.
n.,obs. The INTERLISP function that attempted to accomplish this feat by
correcting many of the more common errors. see <hairy>. 3. Occasionally, an
interjection hurled at a balky computer, esp. when one senses one might be
tripping over legalisms. DWIM is often suggested in jest as a desired feature
for a complex program; also, occasionally described as the single instruction
the ideal computer would have. Back when proof of program correctness were in
vogue, there were also jokes about "DWIMC": Do What I Mean, Correctly). A
related term, more often seen as a verb, is DTRT (Do The Right Thing), see
<Right Thing, The>. <dynner> /din'r/ 32 bits, by analogy with <nybble> and
<byte>. Usage: rare and extremely silly. see also <playte>, <taste>, <crumb>.
{= E =} <earthquake> [IBM] n. The ultimate real-world shock test for computer
hardware. Hacker sources at IBM deny the rumor that the Bay Area quake of
1989 was initiated by the company to test QA at its California plants.
<Easter egg> n. 1. A message hidden in the object code of a program as a
joke, intended to be found by persons disassembling or browsing the code. 2.
A message, graphic, or sound-effect emitted by a program (or, on a PC, the
BIOS ROM) in response to some undocumented set of commands or keystrokes,
intended as a joke or to display program credits. One well-known early Easter
egg found in a couple of OSs caused them to respond to the command `make
love' with `not war?'. Many personal computers (other than the IBM PC) have
much more elaborate eggs hidden in ROM, including lists of the developers'
names, political exhortations, snatches of music, and (in one case) graphics
images of the entire development team. <Easter egging> [IBM] n. The act of
replacing unrelated parts more or less at random in hopes that a malfunction
will go away. Hackers consider this the normal operating mode of <field
circus> techs and do not love them for it. Compare <shotgun debugging>. <eat
flaming death> imp. A construction popularized among hackers by the infamous
<DEC WARS> comic; supposed to derive from a famously turgid line in a
WWII-era anti-Nazi propaganda comic in which X was "non-Aryan mongrels" or
something of the sort. Used in humorously overblown expressions of hostility.
"Eat flaming death, <EBCDIC> users!" <EBCDIC> /eb's'dik/ [Extended Binary
Coded Decimal Interchange Code] n. An alleged character set used on IBM
<dinosaur>s that exists in six mutually incompatible versions, all featuring
such delights as non-contiguous letter sequences and the absence of several
ASCII punctuation characters fairly important for modern computer languages
(exactly which characters are absent vary according to which version of
EBCDIC you're looking at). IBM created EBCDIC in the early nineteen-sixties
as a customer-control tactic, spurning the already established ASCII
standard. Today, IBM claims to be an open-systems company, but IBM's own
description of the EBCDIC variants and how to convert between them is still
internally classified top-secret, burn-before reading. Hackers blanch at the
very *name* of EBCDIC and consider it a manifestation of purest <evil>. see
also <fear and loathing>. <echo> [Fidonet] n. A topic group on <Fidonet>'s
echomail system. Compare <newsgroup>. <eighty-column mind> [IBM] n. The sort
said to be employed by persons for whom the transition from card to tape was
traumatic (nobody has dared tell them about disks yet). It is said that these
people, like (according to an old joke) the founder of IBM, will be buried
`face down, 9-edge first' (the 9-edge is the bottom of the card). This is
inscribed on IBM's 1422 and 1602 card readers, and referenced in a famous bit
of doggerel called "The Last Bug", which ends: He died at the console Of
hunger and thirst. Next day he was buried, Face down, 9-edge first. The
eighty-column mind is thought by most hackers to dominate IBM's customer
base, and its thinking. see <IBM>, <fear and loathing>, <card walloper>. <El
Camino Bignum> /el' k@-mee'noh big'num/ n. El Camino Real. El Camino Real is
the name of a street through the San Francisco peninsula that originally
extended (and still appears in places) all the way down to Mexico City.
Navigation on the San Francisco peninsula is usually done relative to El
Camino Real, which is assumed to run north and south even though it doesn't
really in many places (see <logical>). El Camino Real runs right past
Stanford University, and so is familiar to hackers. The Spanish word `real'
(which has two syllables (ray-ahl')) means `royal'; El Camino Real is `the
royal road'. Now the English word `real' is used in mathematics to describe
numbers (and by analogy is misused in computer jargon to mean floating-point
numbers). In the FORTRAN language, for example, a `real' quantity is a number
typically precise to seven decimal places, and a `double precision' quantity
is a larger floating-point number, precise to perhaps fourteen decimal
places. When a hacker from MIT visited Stanford in 1976 or so, he remarked
what a long road El Camino Real was. Making a pun on `real', he started
calling it `El Camino Double Precision' --- but when the hacker was told that
the road was hundreds of miles long, he renamed it `El Camino Bignum', and
that name has stuck. (see <bignum>.) <elegant> [from mathematical usage] adj.
Combining simplicity, power, and a certain ineffable grace of design. Higher
praise than `clever', `winning' or even <cuspy>. <elephantine> adj. Used of
programs or systems which are both conspicuous <hog>s (due perhaps to poor
design founded on <brute force and ignorance>) and exceedingly <hairy> in
source form. An elephantine program may be functional and even friendly, but
(like the old joke about being in bed with an elephant) it's tough to have
around all the same, esp. a bitch to maintain. In extreme cases, hackers have
been known to make trumpeting sounds or perform expressive zoomorphic mime at
the mention of the offending program. Usage: semi-humorous. Compare `has the
elephant nature' and the somewhat more pejorative <monstrosity>. see also
<second-system effect> and <baroque>. <EMACS> /ee'maks/ [from Editing MACroS]
n. The ne plus ultra of hacker editors, a program editor with an entire LISP
interpreter inside it. Originally written by Richard Stallman in <TECO> at
the MIT-AI lab, but the most widely used versions now run under UNIX. It
includes facilities to run compilation subprocesses and send and receive
mail; many hackers spend up to 80% of their <tube time> inside it. Some
versions running under window managers iconify as an overflowing kitchen
sink, perhaps to suggest the one feature the editor doesn't include. Indeed,
some hackers find EMACS too heavyweight and <baroque> for their taste, and
expand the name as `Escape Meta Alt Control Shift' to spoof its heavy
reliance on complex bucky-bitted keystrokes. Other spoof expansions include
Eight Megabytes And Constantly Swapping, Eventually malloc()s All Computer
Storage, and EMACS Makes A Computer Slow (see RECURSIVE ACRONYMS). see also
<vi>. <email> /ee'mayl/ vt.,n. Electronic mail automatically passed through
computer networks and/or via modems common-carrier lines. Contrast
<snail-mail>, <paper-net>, <voice-net>. see <network address>. <emoticon>
/ee-moh'ti-con/ n. An ASCII glyph used to indicate an emotional state in
email or news. Hundreds have been proposed, but only a few are in common use.
These include: :-) Smiley face (indicates laughter) :-( Frowney face
(indicates sadness, anger or upset) ;-) Half-smiley (ha ha only serious) Also
known as "semi-smiley" or "winkey face". :-/ Wry face It appears that the
emoticon was invented by one Scott Fahlman on the CMU <bboard> systems around
1980. He later wrote "I wish I had saved the original post, or at least
recorded the date for posterity, but I had no idea that I was starting
something that would soon pollute all the world's communication channels". Of
these, the first two are by far the most frequently encountered. Hyphenless
forms of them are common on CompuServe, GEnie and BIX; see also <bixie>. On
<USENET>, "smiley" is often used as a generic (synonym for emoticon) as well
as specifically for the happy-face emoticon. Note for the <newbie>: overuse
of the smiley is a mark of loserhood! More than one per paragraph is a fairly
sure sign that you've gone over the line. <empire> n. Any of a family of
military simulations derived from a game written by Peter Langston many years
ago. There are 5 or 6 multi-player variants of varying degrees of
sophistication, and one single-player version implemented for both UNIX and
VMS which is even available as MS-DOS freeware. All are notoriously
addictive. <engine> n. 1. A piece of hardware that encapsulates some function
but can't be used without some kind of <front end>. This generalization has a
long history; Charles Babbage's 1844 design for a mechanical stored-program
computer was to be called the `Analytical Engine'). Today we have,
especially, "print engine": the guts of a laser printer. 2. An analogous
piece of software; notionally, one that does a lot of noisy crunching such as
a <database engine>. <English> n.,obs. The source code for a program, which
may be in any language, as opposed to <binary>. The idea behind the term is
that to a real hacker, a program written in his favorite programming language
is as readable as English. Usage: obsolete, used mostly by old-time hackers,
though recognizable in context. <enhancement> n. <Marketroid>-speak for a bug
<fix>. This abuse of language is a popular and time-tested way to turn
incompetence into increased revenue. <ENQ> /enkw/ [from the ASCII mnemonic
for 0000101] 1. An on-line convention for querying someone's availability.
After opening a <talk mode> connection to someone apparently in heavy hack
mode, one might type "SYN SYN ENQ?" (the SYNs representing notional
synchronization bytes) expecting a return of <ACK> or NAK depending on
whether or not the person felt interruptible. see <ACK>; compare <ping>,
<finger>, and the usage of "FOO?" listed under <talk mode>. <EOF> /ee-oh-ef/
[UNIX/C] n. End Of File. 1. Refers esp. to whatever pseudo-character value is
returned by C's sequential input functions (and their equivalents in other
environments) when the logical end of file has been reached (this was 0 under
V6 UNIX, is -1 under V7 and all subsequent versions and all non-UNIX C
library implementations). 2. Used by extension in non-computer contexts when
a human is doing something that can be modelled as a sequential read and
can't go further. "Yeah, I looked for a list of 360 mnemonics to post as a
joke, but I hit <EOF> pretty fast, all the library had was a <JCL> manual."
<EOL> /ee-oh-el/ [End Of Line] n. Syn. <newline> derived perhaps from the
original CDC6600 Pascal. Now rare, but widely recognized and occasionally
used because it's shorter. It's used in the example entry under <BNF>. <EOU>
/ee-oh-yoo/ The mnemonic of a mythical ASCII control character (End Of User)
that could make a Model 33 Teletype explode on receipt. This parodied the
numerous obscure record-delimiter control characters left in ASCII from the
days when it was more associated with wire-service teletypes than computers
(e.g. FS, GS, RS, US, EM, SUB, ETX and esp. EOT). It is worth remembering
that ASR-33s were big, noisy mechanical beasts with a lot of clattering
parts; the notion that one might explode was nowhere near as ridiculous as it
might seem to someone sitting in front of a <tube> or flatscreen today.
<epoch, the> [UNIX] [perhaps from astronomical timekeeping] n. The time and
date corresponding to zero in an operating system's clock and timestamp
values. Under most UNIX versions, 00:00:00 GMT January 1, 1970. System time
is measured in seconds or <tick>s past the epoch. see <tick>s, <wall time>.
Note that weird problems may ensue when the clock wraps around (see <wrap
around>), and that this is not a necessarily a rare event; on systems
counting 10 <tick>s per second, a 32 bit count of ticks is only good for 6.8
years. The 1-per-second clock of UNIX is good until January 18, 2038,
assuming word lengths don't increase by then. <epsilon> [see <delta> for
etymology] 1. n. A small quantity of anything. "The cost is epsilon." 2. adj.
Very small, negligible; less than marginal. "We can get this feature for
epsilon cost." 3. <within epsilon of>: close enough to be indistinguishable
for all practical purposes. this is even closer than being <within delta of>.
Example: "That's not what I asked for, but it's within epsilon of what I
wanted." Alternatively, it may mean not close enough, but very little is
required to get it there: "My program is within epsilon of working." see
<asymptotic>. <epsilon squared> n. A quantity even smaller than <epsilon>, as
small in comparison to it as it is to something normal. If you buy a
supercomputer for a million dollars, the cost of the thousand-dollar terminal
to go with it is <epsilon>, and the cost of the ten-dollar cable to connect
the two is <epsilon squared>. <era, the> Syn. <epoch>. The Webster's
Unabridged makes these words almost synonymous, but `era' usually connotes a
span of time rather than a point in time. The <epoch> usage is recommended.
<Eric Conspiracy> n. Notional group of mustachioed hackers named Eric first
pinpointed as a sinister conspiracy by an infamous talk.bizarre posting c.
1986; this was doubtless influenced by the numerous `Eric' jokes in the Monty
Python oeuvre. There do indeed seem to be considerably more mustachioed Erics
in hackerdom than the frequency of these three traits can account for unless
they are correlated in some arcane way. Well known examples include Eric
Allman of <BSD> fame, Erik Fair (coauthor of NNTP); your editor has heard
from about fourteen others by email, and the organization line `Eric
Conspiracy Secret Laboratories' now emanates regularly from more than one
site. <Eris> /e'ris/ pn. The Greco-Roman goddess of Chaos, Discord, Confusion
and Things You Know Not Of; aka Discordia. Not a very friendly deity in the
Classical original, she was re-invented as a more benign personification of
creative anarchy starting in 1959 by the adherents of <Discordianism> and has
since been a semi-serious subject of veneration in several `fringe' cultures
including hackerdom. see <Discordianism>, <Church of the Sub-Genius>.
<erotics> /ee-ro'tiks/ n. Reported from Scandinavia as English-language
university slang for electronics. Often used by hackers, maybe because of its
exciting aspects. <essentials> n. Things necessary to maintain a productive
and secure hacking environment. "A jug of wine, a loaf of bread, a
20-megahertz 80386 box with 8 meg of core and a 300-megabyte disk supporting
full UNIX with source and X windows and EMACS and UUCP to a friendly Internet
site, and thou." <evil> adj. As used by hackers, implies that some system,
program, person or institution is sufficiently mal-designed as to be not
worth the bother of dealing with. Unlike the adjectives in the
<cretinous>/<losing>/<brain-damaged> series, `evil' does not imply
incompetence or bad design, but rather a set of goals or design criteria
fatally incompatible with the speaker's. This is more an esthetic and
engineering judgement than a moral one in the mainstream sense. "We thought
about adding a <Blue Glue> interface but decided it was too evil to deal
with." "<TECO> is neat, but it can be pretty evil if you're prone to typos."
Often pronounced with the first syllable lengthened, as /eeeevil/. <exa->
/ek's@/ pref. Multiplier, 10 ^ 18 or [proposed] 2 ^ 60. see <kilo->.
<examining the entrails> n. The process of rooting through a core dump or hex
image in the attempt to discover the bug that brought your program or system
down. Compare <runes>, <incantation>, <black art>. <EXCH> /eks'ch@, eksch/
vt. To exchange two things, each for the other; to swap places. If you point
to two people sitting down and say "Exch!", you are asking them to trade
places. <EXCH>, meaning EXCHange, was originally the name of a PDP-10
instruction that exchanged the contents of a register and a memory location.
Many newer hackers tend to be thinking instead of the PostScript exchange
operator. <excl> /eks'kl/ n. Abbreviation for "exclamation point". see
<bang>, <shriek>, <wow>. <EXE> /eks'ee/ An executable binary file. Some
operating systems (notably MS-DOS, VMS, and TOPS-20/TWENEX) use the extension
.EXE to mark such files. This usage is also occasionally found among UNIX
programmers even though UNIX executables don't have any required extension
(in fact, the term `extension' in this sense is not part of UNIX jargon).
<exec> /eg-zek'/ [shortened from "executive" or "execute"] vt.,n. 1. [UNIX]
Synonym for <chain>, derives from the `exec(2)' call. 2. (obs) The command
interpreter for an <OS> (see <shell>); term esp. used on mainframes, and
prob. derived from UNIVAC's archaic EXEC 2 and EXEC 8 operating systems. 3.
At IBM, the equivalent of a <script> (sense #1). <exercise, left as an>
[Technical reference books] Used to complete a proof when one doesn't mind a
<handwave>, or to avoid one entirely. The complete phrase is: "The proof (or
rest) is left as an exercise for the reader." <eyeball search> n. To look for
something in a mass of code by hand, as opposed to using some sort of pattern
matcher like <grep> or any other automated search tool. Confusingly, this may
also be described as a search <by hand>. {= F =} <fab> /fab/ [from English
fabricate] 1. To produce chips from a design that may have been created by
someone at another company. <fabbing> chips based on the designs of others is
the activity of a <silicon foundry>. 2. Also "fab line" the production system
(lithographry, diffusion, etching, etc.) for chips at a chip manufacturer.
Different "fab lines" are run with different process parameters, die sizes,
or technologies, or simply to provide more manufacturing volume. <face time>
n. Time spent interacting with somebody face-to-face (as opposed to via
electronic links). "Oh, yeah, I spent some face time with him at the last
Usenix." <fall over> [IBM] vi. Yet another synonym for <crash> or <lose>.
`Fall over hard' equates to <crash and burn>. <fall through> vt. 1. To exit a
loop by exhaustion, i.e. by having fulfilled its exit condition rather than
via a break or exception condition that exits from the middle of it. This
usage appears to be *really* old, as in dating from the '40s and '50s. It may
no longer be live slang. 2. To fail a test that would have passed control to
a subroutine or other distant portion of code. 2. In C, `fall-through' is
said to occur when the flow of execution in a switch statement reaches a
`case' label other than by jumping there from the switch header, passing a
point where one would normally expect to find a `break'. A trivial example:
switch (color) { case GREEN: do_green(); break; case PINK: do_pink(); /* FALL
THROUGH */ case RED: do_red(); break; default: do_blue(); break; } The effect
of this code is to `do_green()' when color is `GREEN', `do_red()' when color
is `RED', `do_blue()' on any other color than PINK, and (this is the
important part) `do_pink()' and *then* `do_red()' when color is `PINK'.
Fall-through is <considered harmful> by some; among those who use it, it is
considered good practice to include a comment highlighting the fall through,
at the point one would normally expect a break. <fandango on core> [UNIX/C
hackers, from the Mexican dance] n. In C, a wild pointer that runs out of
bounds causing a <core dump>, or corrupts the `malloc(3)' <arena> in such a
way as to cause mysterious failures later on, is sometimes said to have `done
a fandango on core'. On low-end personal machines without an MMU this can
corrupt the OS itself, causing massive lossage. Other third-world dances such
as the rhumba, cha-cha or watusi may be substituted. see <aliasing bug>,
<precedence lossage>, <smash the stack>, <memory leak>, <overrun screw>,
<core>. <FAQ list> /ef-ay-kyoo list/ [Usenix] n. Compendium of accumulated
lore, posted periodically to high-volume newsgroups in an attempt to
forestall Frequently Asked Questions. The jargon file itself serves as a good
example of a collection of one kind of lore, although it is far too big for a
regular posting. Several extant FAQ lists do (or should) make reference to
the jargon file. "How do you pronounce `char'?" and "What's that funny name
for the `#' character?" are, for example, both Frequently Asked Questions.
<farming> [Adelaide University, Australia] n. What the heads of a Winchester
are said to do when they plow little furrows in the magnetic media.
Associated with a <crash>. Typically used as follows: "Oh no, the machine has
just crashed, I hope the hard drive hasn't gone <farming> again." <fascist>
adj. Said of a computer system with excessive or annoying security barriers,
usage limits or access policies. The implication is that said policies are
preventing hackers from getting interesting work done. The variant
"fascistic" seems to have been preferred at MIT, poss. by analogy with
"touristic" (see <tourist>). <faulty> adj. Non-functional; buggy. Same
denotation as <bletcherous>, <losing>, q.v., but the connotation is much
milder. <fd leak> /ef dee leek/ n. A kind of programming bug analogous to a
<core leak>, in which a program fails to close file descriptors (`fd's) after
file operations are completed, and thus eventually runs out. see <leak>.
<fear and loathing> [from Hunter Thompson] n. State inspired by the prospect
of dealing with certain real-world systems and standards which are totally
<brain-damaged> but ubiquitous --- Intel 8086s, or COBOL, or <EBCDIC>, or any
IBM machine except the Rios (aka the RS/6000). "Ack. They want PCs to be able
to talk to the AI machine. Fear and loathing time!" see also IBM. <feature>
n. 1. An intended property or behavior (as of a program). Whether it is good
or not is immaterial. 2. A good property or behavior (as of a program).
Whether it was intended or not is immaterial. 3. A surprising property or
behavior; in particular, one that is purposely inconsistent because it works
better that way -- such an inconsistency is therefore a <feature> and not a
<bug>. This kind of feature is sometimes called a <miswart>; see that entry
for a classic example. 4. A property or behavior that is gratuitous or
unnecessary, though perhaps also impressive or cute. For example, one feature
of the MACLISP language is the ability to print numbers as Roman numerals.
see <bells and whistles>. 5. A property or behavior that was put in to help
someone else but that happens to be in your way. 6. A <bug> that has been
documented. To call something a feature sometimes means the author of the
program did not consider the particular case, and the program responded in a
way that was unexpected, but not strictly incorrect. A standard joke is that
a <bug> can be turned into a <feature> simply by documenting it (then
theoretically no one can complain about it because it's in the manual), or
even by simply declaring it to be good. "That's not a bug, that's a feature!"
see also <feetch feetch>, <creeping featuritis>, <wart>. <feature creature>
n. One who loves to add features to designs or programs, perhaps at the
expense of coherence, concision, or <taste>. see also <creeping featurism>.
<feature shock> n. A user's confusion when confronted with a package that has
too many features and poor introductory material. Originally a pun on Alvin
Toffler's title `Future Shock'. <featurectomy> /fee`ch@r-ek'to-mee/ n. The
act of removing a feature from a program. Featurectomies generally come in
two varieties, the "righteous" and the "reluctant". Righteous featurectomies
are performed because the remover believes the program would be more elegant
without the feature, or there is already an equivalent and `better' way to
achieve the same end. (This is not quite the same thing as removing a
<misfeature>.) Reluctant featurectomies are performed to satisfy some
external constraint such as code size or execution speed. <feep> /feep/ 1. n.
The soft bell of a display terminal (except for a VT-52!); a beep (in fact,
the microcomputer world seems to prefer <beep>). 2. vi. To cause the display
to make a feep sound. TTY's do not have feeps; they have mechanical bells
that ring. Alternate forms: <beep>, <bleep>, or just about anything suitably
onomatopoeic. (Jeff Macnelly, in his comic strip `Shoe', uses the word `eep'
for sounds made by computer terminals and video games; this is perhaps the
closest written approximation yet.) The term <beedle> was sometimes heard at
SAIL, where the terminal bleepers are not particularly `soft' (they sound
more like the musical equivalent of a raspberry or Bronx cheer; for a close
approximation, imagine the sound of a Star Trek communicator's beep lasting
for five seconds.). The `feeper' on a VT-52 has been compared to the sound of
a '52 Chevy stripping its gears. see also <ding>. <feeper> /fee'pr/ n. The
device in a terminal or workstation (usually a loudspeaker of some kind) that
makes the <feep> sound. <feeping creaturitis> /fee'ping kree`ch@r-ie'tis/ n.
Deliberate spoonerization of <creeping featuritis>, meant to imply that the
system or program in question has become a misshapen creature of hacks. This
term isn't really well-defined, but it sounds so neat that most hackers have
said or heard it. It is probably reinforced by an image of terminals prowling
about in the dark making their customary noises. <feetch feetch> interj. If
someone tells you about some new improvement to a program, you might respond,
"Feetch, feetch!" The meaning of this depends critically on vocal inflection.
With enthusiasm, it means something like, "Boy, that's great! What a great
hack!" Grudgingly or with obvious doubt, it means "I don't know; it sounds
like just one more unnecessary and complicated thing." With a tone of
resignation, it means, "Well, I'd rather keep it simple, but I suppose it has
to be done." <fence> n. One or `out-of-band' characters used to delimit a
piece of data intended to be treated as a unit. The NUL character that
terminates strings in C is a fence. Hex FF is probably the most common fence
character after NUL. <fencepost error> n. 1. The discrete equivalent of a
boundary condition. Often exhibited in programs by iterative loops. From the
following problem: "If you build a fence 100 feet long with posts ten feet
apart, how many posts do you need?" (Either 9 or 11 is a better answer than
the obvious 10.) For example, suppose you have a long list or array of items,
and want to process items m through n; how many items are there? The obvious
answer is `n - m', but that is off by one; the right answer is `n - m + 1'. A
program that used the `obvious' formula would have a fencepost error in it.
see also <off-by-one error>, and note that not all off-by-one errors are
fencepost errors. The game of Musical Chairs involves an off-by-one problem
where N people try to sit in N-1 chairs, but it's not a fencepost error.
Fencepost errors come from counting things rather than the spaces between
them, or vice versa, or by neglecting to consider whether one should count
one or both ends of a row. 2. Occasionally, an error induced by unexpectedly
regular spacing of inputs, which can (for instance) screw up your hash table.
<Fidonet> n. A world-wide hobbyist network of personal computers which
exchange mail, discussion groups, and files. Originally consisting only of
IBM PCs and compatibles, Fidonet now includes such diverse machines as Apple
][s, Ataris, Amigas, and Unix systems. Fidonet is a sizeable fraction of
<USENET>'s size at some 8000 systems (late 1990), although it is much younger
than USENET. <field circus> [a derogatory pun on `field service'] n. The
field service organization of any hardware manufacturer, but especially DEC.
There is an entire genre of jokes about DEC field circus engineers: Q: How
can you recognize a DEC field circus engineer with a flat tire? A: He's
changing each tire to see which one is flat. Q: How can you recognize a DEC
field circus engineer who is out of gas? A: He's changing each tire to see
which one is flat. <field servoid> [play on "android"] /fee'ld ser'voyd/ n.
Representative of a Field Service organization (see <field circus>).
<Fight-o-net> [Fidonet] n. Deliberate distortion of <Fidonet>, often applied
after a flurry of <flamage> in a particular <echo>, especially the SYSOP echo
or Fidonews (see <'Snooze>). <File Attach> [Fidonet] 1. n. A file sent along
with a mail message from one BBS to another. 2. vt. Sending someone a file by
using the File Attach option in the BBS mailer. <File Request> [Fidonet] 1.
n. The <Fidonet> equivalent of <FTP>, in which one BBS system automatically
dials another and <snarf>s one or more files. Files are often announced as
being "available for <FReq>" in the same way that files are announced as
being "available for/by <anonymous FTP>" on the <Internet>. 2. vt. The act of
getting a copy of a file by using the File Request option of the BBS mailer.
<filk> /filk/ [from SF fandom, where a typo for `folk' was adopted as a new
word] n.,v. A "filk" is a popular or folk song with lyrics revised or
completely new lyrics, intended for humorous effect when read and/or to be
sung late at night at SF conventions. There is a flourishing subgenre of
these called "computer filks", written by hackers and often containing
technical humor of quite sophisticated nature. see <double bucky> for an
example. <film at 11> [MIT, in parody of TV newscasters], interj. Used in
conversation to announce ordinary events, with a sarcastic implication that
these events are earth-shattering. "<ITS> crashes; film at 11." "Bug found in
scheduler; film at 11." <filter> [orig. UNIX, now also in <MS-DOS>] n. A
program which processes an input text stream into an output text stream in
some well-defined way, and does no I/O to anywhere else except possibly on
error conditions; one designed to be used as a stage in a <pipeline>. <fine>
[WPI] adj. Good, but not good enough to be <cuspy>. The word `fine' is used
elsewhere, of course, but without the implicit comparison to the higher level
implied by <cuspy>. <finger> [SAIL's mutant TOPS-10, via BSD UNIX] 1. n. A
program that displays a particular user or all users logged on the system or
a remote system. Typically shows full name, last login time, idle time,
terminal line and terminal location. May also display a "plan file" left by
the user. 2. vt. To apply finger to a username. 3. vt. By extension, to check
a human's current state by any means. "Foodp?" "T!" "OK, finger Lisa and see
if she's idle". 4. Any picture (composed of ASCII characters) depicting `the
finger'. Originally a humorous component of one's plan file to deter the
curious fingerer (sense #2), it has entered the arsenal of some <flamer>s.
<finger-pointing syndrome> n. All-too-frequent result of bugs, esp. in new or
experimental configurations. The hardware vendor points a finger at the
software. The software vendor points a finger at the hardware. All the poor
users get is the finger. <firebottle> n. A large, primitive, power-hungry
active electrical device, similar to an FET constructed out of glass, metal,
and vacuum. Characterized by high cost, low density, low reliability,
high-temperature operation, and high power dissipation. Sometimes mistakenly
called a "tube" in the U.S. or a "valve" in England. <firefighting> n. The
act of throwing lots of manpower and late nights at a project to get it out
before deadline. see also <gang bang>, <Mongolian Hordes technique>; however,
<firefighting> connotes that the effort is going into chasing bugs rather
than adding features. <firewall machine> n. A dedicated gateway machine with
special security precautions on it, used to service outside network/mail/news
connections and/or accept remote logins for (read only) shared-file-system
access via FTP. The idea is to protect a cluster of more loosely administered
machines `hidden' behind it from crackers. The typical firewall is an
inexpensive micro-based UNIX box kept clean of critical data, with a bunch of
modems and public network ports on it but just one carefully watched
connection back to the rest of the cluster. The special precautions may
include threat monitoring, callback, and even a complete <iron box> keyable
to particular incoming IDs or activity patterns. Syn. <flytrap>, <Venus
flytrap>. <fireworks mode> n. The mode a machine is sometimes said to be in
when it is performing a <crash and burn> operation. <firmware> n. Software
installed into a computer-based piece of equipment on ROM. So-called because
it's harder to change than software but easier than hardware. <fish>
[Adelaide University, Australia] n. Another metasyntactic variable. see
<foo>. Derived originally from the Monty Python skit in the middle of `The
Meaning of Life', entitled `Find the fish'. <FISH queue> [acronym, by analogy
with FIFO (First In, First Out)] n. First In, Still Here. A joking way of
pointing out that processing of a particular sequence of events or requests
has stopped dead. Also "FISH mode" and "FISHnet"; the latter may be applied
to any network that is running really slowly or exhibiting extreme flakiness.
Compare <belly up>. <fix> n.,v. What one does when a problem has been
reported too many times to be ignored. <flag> n. A variable or quantity that
can take on one of two values; a bit, particularly one that is used to
indicate one of two outcomes or is used to control which of two things is to
be done. Examples: "This flag controls whether to clear the screen before
printing the message." "The program status word contains several flag bits."
see also <bit>, <hidden flag>, <mode bit>. <flag day> n. A software change
which is neither forward nor backward compatible, and which is costly to make
and costly to revert. "Can we install that without causing a flag day for all
users?" This term has nothing to do with the use of the word <flag> to mean a
variable that has two values. It came into use when a massive change was made
to the <Multics> timesharing system to convert from the old ASCII code to the
new one; this was scheduled for Flag Day, June 14, 1966. <flaky> adj. (var
sp. "flakey") Subject to frequent lossages. see <lossage>. This use is of
course related to the common slang use of the word, to describe a person as
eccentric or crazy. A system that is flaky is working, sort of, enough that
you are tempted to try to use it, but it fails frequently enough that the
odds in favor of finishing what you start are low. Commonwealth hackish
prefers <dodgy>. <flamage> /flay'm@j/ n. High-noise, low-signal postings to
<USENET> or other electronic fora. Often in the phrase "the usual flamage".
<flame> 1. vi. To speak incessantly and/or rabidly on some relatively
uninteresting subject or with a patently ridiculous attitude. When a
discussion degenerates into useless controversy, one might tell the
participants, "Now you're just flaming" or "Stop all that flamage!" to try to
get them to cool down (so to speak). 2. To post an email message intended to
insult and provoke. <FLAME ON>: vi. To continue to flame. see <rave>,
<burble>. The punning reference to Marvel comics's Human Torch has been lost
as recent usage completes the circle: "Flame on" now usually means "beginning
of flame". A USENETter who was at WPI from 1972 to 1976 adds: I am 99%
certain that the use of `flame' originated at WPI. Those who made a nuisance
of themselves insisting that they needed to use a TTY for `real work' came to
be known as `flaming asshole lusers'. Other, particularly annoying people
became `flaming asshole ravers', which shortened to `flaming ravers', and
ultimately `flamers'. I remember someone picking up on the Human Torch pun,
but I don't think `flame on/off' was ever much used at WPI. see also
<asbestos cork award>. The term may have been independent invented at several
different places; it is also reported that `flaming' was in use to mean
something like `interminably drawn-out semi-serious discussions' (late-night
bull-sessions) at Carleton College during 1968-1971. <flame bait> n. A
posting intended to trigger a <flame war>, or one which invites flames in
reply. <flame war> n. Acrimonious dispute, especially when conducted on a
public electronic forum such as <USENET>. Often merged to one word,
<flamewar>. <flamer> n. One who habitually flames others. Said esp. of
obnoxious <USENET> personalities. <flap> vt. 1. To unload a DECtape (so it
goes flap, flap, flap...). Old hackers at MIT tell of the days when the disk
was device 0 and microtapes were 1, 2,... and attempting to flap device 0
would instead start a motor banging inside a cabinet near the disk! 2. By
extension, to unload any magnetic tape. see <microtape>, <macrotape>. Modern
cartridge tapes no longer actually flap, but the usage has remained.
<flat-ASCII> adj. Said of a text file wich contains only 7-bit ASCII
characters and uses only ASCII-standard control characters (that is, has no
embedded codes specific to a particular text formatter or markup language,
and no <meta>-characters). Syn. <plain-ASCII>. The description <flat-file> is
roughly synonymous. <flat-file> adj. A <flatten>ed representation of some
database or tree or network structure, as a single file from which the
structure could implicitly be rebuilt, esp. one in <flat-ASCII> form.
<flatten> vt. To remove structural information, esp. to filter something with
an implicit tree structure into a simple sequence of leaves. "This code
flattens an expression with parentheses into an equivalent <canonical> form."
<flavor> n. 1. Variety, type, kind. "DDT commands come in two flavors."
"These lights come in two flavors, big red ones and small green ones." see
<vanilla>. 2. The attribute that causes something to be <flavorful>. Usually
used in the phrase "yields additional flavor." "This convention yields
additional flavor by allowing one to print text either right-side-up or
upside-down." see <vanilla>. This usage is almost certainly influenced by
accepted terminology in particle physics, in which quarks (the constituents
of e.g. protons) come in six flavors (up, down, strange, charm, top, bottom)
and three colors (red, blue, green) --- however, its use at MIT almost
certainly predated quark theory. <flavorful> adj. Aesthetically pleasing. see
<random> and <losing> for antonyms. see also the entries for <taste> and
<elegant>. <flippy> /flip'ee/ n. A single-side floppy disk altered for
double-sided use by addition of a second write-notch, so called because it
must be flipped over for the second side to be accessible. No longer common.
<flowchart> n. An archaic form of visual control-flow specification employing
arrows and `speech balloons' of various shapes. Hackers never use flowcharts,
consider them extremely silly, and associate them with COBOL programmers and
other lower forms of life. This is because (from a hacker's point of view)
they are just as difficult to read as code, not as precise, and tend to fall
out of sync with the code (so that they either obfuscate it rather than
explaining it, or require extra maintainence effort that doesn't improve the
code). see also <pdl>, sense #3. <flush> v. 1. To delete something, usually
superfluous. "All that nonsense has been flushed." Standard ITS terminology
for aborting an output operation (but note sense 4 below!); one speaks of the
text that would have been printed, but was not, as having been flushed. Under
ITS, if you asked to have a file printed on your terminal, it was printed a
page at a time; at the end of each page, it asked whether you want to see
more, and if you said no, it replied "FLUSHED". (It is speculated that this
term arose from a vivid image of flushing unwanted characters by hosing down
the internal output buffer, washing the characters away before they can be
printed.) 2. To leave at the end of a day's work (as opposed to leaving for a
meal). "I'm going to flush now." "Time to flush." 3. To exclude someone from
an activity, or to ignore a person. 4. [UNIX/C] To force buffered I/O to
disk, as with an `fflush(3)' call. This is *not* an abort as in sense 1 but a
demand for early completion! UNIX hackers find the ITS usage confusing and
vice versa. <flytrap> n. see <firewall machine>. <FOAF> [USENET] n.
Written-only acronym for Friend Of A Friend. The source of an unverified,
possibly untrue story. This was not originated by hackers (it is used in Jan
Brunvand's books on urban folklore) but is much better recognized on USENET
and elsewhere than in the mainstream. <FOD> v. [Abbreviation for `Finger of
Death', originally a spell-name from fantasy gaming] To terminate with
extreme prejudice and with no regard for other people. From <MUD>s where the
wizards' command `FOD <player>' results in the immediate and total death of
<player>, usually as punishment for obnoxious behaviour. This migrated to
other circumstances, such as "I'm going to fod that process which is burning
all the CPU". Compare <gun>. <fold case> v. see <smash case>. This term tends
to be used more by people who don't "mind" that their tools smash case.
<followup> n. On USENET, a <posting> generated in response to another posting
(as opposed to a <reply>, which goes by email rather than being broadcast).
Followups include the ID of the <parent message> in their headers; smart
news-readers can use this information to present USENET news in
`conversation' sequence rather than order-of-arrival. see <thread>. <foo>
/foo/ 1. interj. Term of disgust. 2. Name used for temporary programs, or
samples of three-letter names. Other similar words are <bar>, <baz> (Stanford
corruption of <bar>), and rarely RAG. 3. Used very generally as a sample name
for absolutely anything. 4. First on the standard list of metasyntactic
variables used in syntax examples. see also: <bar>, <baz>, <qux>, <quux>,
<QUUUX>, <corge>, <grault>, <garply>, <waldo>, <fred>, <plugh>, <xyzzy>.
<moby foo>: see <moby>. <foo> is the <canonical> example of a `metasyntactic
variable'; a name used in examples and understood to stand for whatever thing
is under discussion, or any random member of a class of things under
discussion. To avoid confusion, hackers never use `foo' or other words like
it as permanent names for anything. The etymology of hackish `foo' is
obscure. When used in connection with `bar' it is generally traced to the
WWII-era army slang acronym FUBAR (Fucked Up Beyond All Recognition), later
expurgated to <foobar> and then truncated. However, the use of the word `foo'
itself has more complicated antecedents, including a long history in comic
strips and cartoons. The old `Smokey Stover' comic strips by Bill Holman
often included the word `FOO', in particular on license plates of cars;
allegedly, `FOO' and `BAR' also occurred in Walt Kelly's `Pogo' strips. In a
1938 cartoon Daffy Duck holds up a sign saying "SILENCE IS FOO!". It is even
possible that hacker usage actually springs from the title `FOO, Lampoons and
Parody' of a comic book first issued 20 years later, in September 1958; the
byline read `C. Crumb' but this may well have been a sort-of pseudonym for
noted weird-comix artist Robert Crumb. The title FOO was featured in large
letters on the front cover. Very probably hackish `foo' had no single origin
and derives through all these channels from Yiddish `feh', or English
`fooey!'. <foobar> n. Another common metasyntactic variable; see <foo>.
<fool> n. As used by hackers, specifically describes a person who habitually
reasons from obviously or demonstrably incorrect premises and cannot be
persuaded to do otherwise by evidence; it is not generally used in its other
senses, i.e. to describe a person with a native incapacity to reason
correctly, or a clown. Indeed, in hackish experience many fools are capable
of reasoning all too effectively in executing their errors. see also
<cretin>, <loser>. <footprint> n. 1. The floor or desk area taken up by a
piece of hardware. 2. [IBM] The audit trail (if any) left by a crashed
program (often in plural, "footprints"). see also <toeprint>. <for the rest
of us> [from the Mac slogan "The computer for the rest of us"] adj. Used to
describe a <spiffy> product whose affordability shames other comparable
products, or (more often) used sarcastically to describe <spiffy>, but very
overpriced products. <foreground> [UNIX] adj.,vt. On a time-sharing system, a
task executing in foreground is one able to accept input from and return
output to the user; oppose <background>. Normally, there is only one
foreground task per terminal (or terminal window); having multiple processes
simultaneously reading the keyboard is a good way to <lose>. By extension, to
"foreground a task" is to bring it to the top of one's <stack> for immediate
processing, and in this sense hackers often use it for non-computer tasks.
<forked> [UNIX] adj. Terminally slow, or dead. Originated when the system
slowed to incredibly bad speeds due to a process recursively spawning copies
of itself (using the Unix system call `fork(2)') and taking up all the
process table entries. <fortune cookie> [UNIX] n. A random quote, item of
trivia, joke or maxim printed to the user's tty at login time or (less
commonly) at logout time. Items from this jargon file have often been used as
fortune cookies. <fossil> n. 1. In software, a misfeature that becomes
understandable only in historical context, as a remnant of times past
retained so as not to break compatibility. Example: the retention of octal as
default base for string escapes in C in spite of the better match of
hexadecimal to modern byte-addressable architectures. see <dusty deck>. 2.
More restrictively, a feature with past but no present utility. Example: the
force-all-caps (LCASE) bits in the V7 and <BSD UNIX> tty driver, designed for
use with monocase terminals. In a perversion of the usual backwards
compatibility goal, this functionality has actually been expanded and renamed
in some later <USG UNIX> releases as the IUCLC and OLCUC bits. 3. FOSSIL
(Fido/Opus/Seadog Standard Interface Level) specification for serial-port
access to replace the <brain-dead> routines in the IBM PC ROMs. Fossils are
used by most MSDOS <BBS> software in lieu of programming the <bare metal> of
the serial ports, as the ROM routines do not support interrupt-driven
operation or setting speeds above 9600. Since the FOSSIL specification allows
additional functionality to be hooked in, drivers which use the <hook> but do
not provide serial-port access themselves are named with a modifier, as in
`video fossil'. <fred> n. The personal name most frequently used as a
metasyntactic variable (see <foo>). Allegedly popular because it's easy to
type on a standard QWERTY keyboard. It is alternatively alleged to be an
acronym for `Flipping Ridiculous Electronic Device' (other f-verbs may be
substituted for "flipping") <frednet> n. Used to refer to some <random> and
uncommon protocol encountered on a network. "We're implementing bridging in
our router to solve the frednet problem." <freeware> n. Free software, often
written by enthusiasts and usually distributed by electronic mail, local
bulletin boards, <USENET>, or other electronic media. see <shareware>.
<freeze> v. To lock an evolving software distribution or document against
changes so it can be released with some hope of stability. Carries the strong
implication that the item in question will `unfreeze' at some future date.
"OK, fix that bug and we'll freeze for release." <FReq> [Fidonet]
written-only abbreviation for <File Request>. <fried> adj. 1. Non-working due
to hardware failure; burnt out. Especially used of hardware brought down by a
"power glitch" (see <glitch>), <drop-outs>, a short, or other electrical
event. (Sometimes this literally happens to electronic circuits! In
particular, resistors can burn out and transformers can melt down, emitting
terribly-smelling smoke. However, this term is also used metaphorically.) 2.
Of people, exhausted. Said particularly of those who continue to work in such
a state. Often used as an explanation or excuse. "Yeah, I know that fix
destroyed the file system, but I was fried when I put it in." <frob> /frob/
1. n. [MIT] The official Tech Model Railroad Club definition was `FROB =
protruding arm or trunnion', and by metaphoric extension any somewhat small
thing; an object that you can comfortably hold in one hand; something you can
frob. see <frobnitz>. 2. vt. Abbreviated form of <frobnicate>. 3. [from the
<MUD> world] To request <wizard> privileges on the `professional courtesy'
grounds that one is a wizard elsewhere. <frobnicate> /frob'ni-kayt/ vt.
[Poss. derived from <frobnitz>, and usually abbreviated to <frob>, but
<frobnicate> is recognized as the official full form.] To manipulate or
adjust, to tweak. One frquently frobs bits or other two-state devices. Thus:
"Please frob the light switch." (That is, flip it), but also "Stop frobbing
that clasp; you'll break it." One also sees the construction `to frob a
frob'. see <tweak> and <twiddle>. Usage: <frob>, <twiddle>, and <tweak>
sometimes connote points along a continuum. <frob> connotes aimless
manipulation; <twiddle> connotes gross manipulation, often a coarse search
for a proper setting; <tweak> connotes fine-tuning. If someone is turning a
knob on an oscilloscope, then if he's carefully adjusting it he is probably
tweaking it; if he is just turning it but looking at the screen he is
probably twiddling it; but if he's just doing it because turning a knob is
fun, he's frobbing it. The variant "frobnosticate" has been recently
reported. <frobnitz> /frob'nits/, pl. <frobnitzem> (frob'nit-zm) n. An
unspecified physical object, a widget. Also refers to electronic black boxes.
This rare form is usually abbreviated to "frotz", or more commonly to <frob>.
Also used are "frobnule" and "frobule". Starting perhaps in 1979, "frobozz"
/fruh-bahz'/, plural "frobbotzim" /fruh-bot'z@m/ has also become very
popular, largely due to its exposure as a name via <Zork>. These can also be
applied to nonphysical objects, such as data structures. <frog> alt. "phrog"
1. interj. Term of disgust (we seem to have a lot of them). 2. Used as a name
for just about anything. see <foo>. 3. n. Of things, a crock. Of people,
somewhere inbetween a turkey and a toad. 4. <froggy>: adj. Similar to
<bagbiting>, but milder. "This froggy program is taking forever to run!"
<front end> n. 1. A subsidiary computer that doesn't do much. 2. What you're
talking to when you have a conversation with someone who is making replies
without paying attention. "Look at the dancing elephants!" "Uh-huh." "Do you
know what I just said?" "Sorry, you were talking to the front end". 3.
Software which provides an interface to another program `behind' it, which
may not be as user-friendly. Probably from analogy with hardware front-ends
(see sense #1) which interfaced with mainframes. <frotz> /frotz/ 1. n. see
<frobnitz>. 2. <mumble frotz>: An interjection of very mild disgust.
<frotzed> /frotzt/ adj. <down> due to hardware problems. <fry> 1. vi. To
fail. Said especially of smoke-producing hardware failures. More generally,
to become non-working. Usage: never said of software, only of hardware and
humans. see <fried>, <magic smoke>. 2. vt. To cause to fail; to <roach>,
<toast> or <hose> a piece of hardware (never used of software or humans).
<FTP> /ef-tee-pee/, *not* /fit'ip/ 1. n. The File Transfer Protocol for
transmitting files between systems on the Internet. 2. vt. To transfer a file
using the File Transfer Protocol. 3. Sometimes used as a generic even for
file transfers not using <FTP>. "Lemme get this copy of Wuthering Heights
FTP'd from uunet." <fuck me harder> excl. Sometimes uttered in response to
egregious misbehavior, esp. in software, and esp. of those which seem
unfairly persistent (as though designed in by the imp of the perverse). Often
theatrically elaborated: "Aiighhh! Fuck me with a piledriver and sixteen feet
of curare-tipped wrought-iron fence *and no lubricants!*" The phrase is
sometimes heard abbreviated FMH in polite company. <FUD> /fuhd/ n. Fear,
Uncertainty and Doubt. Defined by Gene Amdahl after he left IBM to found his
own company: "FUD is the fear, uncertainty and doubt that IBM sales people
instill in the minds of potential customers who might be considering [Amdahl]
products." The idea, of course, was to persuade them to go with safe IBM gear
rather than with competitors' equipment. This was traditionally done by
promising that Good Things would happen to people who stuck with IBM, but
Dark Shadows loomed over the future of the competitors' equipment or
software. see <IBM>. <FUD wars> /fuhd worz/ n. [from `Fear, Uncertainty and
Doubt'] Political posturing engaged in by hardware and software vendors
ostensibly committed to standardization but actually willing to fragment the
market to protect their own share. The OSF vs. UNIX International conflict,
for example. <fudge> 1. vt. To perform in an incomplete but marginally
acceptable way, particularly with respect to the writing of a program. "I
didn't feel like going through that pain and suffering, so I fudged it." 2.
n. The resulting code. <fudge factor> n. A value or parameter that is varied
in an ad hoc way to produce the desired result. The terms "tolerance" and
"slop" are also used, though these usually indicate a one-sided leeway, such
as a buffer which is made larger than necessary because one isn't sure
exactly how large it needs to be, and it is better to waste a little space
than to lose completely for not having enough. A fudge factor, on the other
hand, can often be tweaked in more than one direction. A good example is the
<fuzz> typically needed in floating-point calculations: two numbers being
compared for equality must be allowed to differ by a small amount; if that
amount is too small, a computation may never terminate, while if it is too
large, results will be needlessly inaccurate. Fudge factors are frequently
adjusted incorrectly by programmers who don't fully understand their import.
see also <coefficient of x>. <fuel up> vi. To eat or drink hurriedly in order
to get back to hacking. "Food-p?" "Yeah, let's fuel up." "Time for a
<great-wall>!". see also ORIENTAL FOOD. <fuggly> /fuhg'lee/ adj. Emphatic
form of <funky>; funky + ugly (or possibly a contraction of "fuckin' ugly").
Unusually for hacker slang, this may actually derive from black street-jive.
To say it properly, the first syllable should be growled rather than spoken.
Usage: humorous. "Man, the ASCII-to-<EBCDIC> code in that printer driver is
*fuggly*." see also <wonky>. <funky> adj. Said of something which functions,
but in a slightly strange, klugey way. It does the job and would be difficult
to change, so its obvious non-optimality is left alone. Often used to
describe interfaces. The more bugs something has that nobody has bothered to
fix because workarounds are easier, the funkier it is. <TECO> and UUCP are
funky. The Intel i860's exception handling is extraordinarily funky. Most
standards acquire funkiness as they age. "The new mailer is installed, but is
still somewhat funky; if it bounces your mail for no reason, try resubmitting
it." "This UART is pretty funky. The data ready line is active-high in
interrupt mode, and active-low in DMA mode." see <fuggly>. <funny money> n.
1. Notional `dollar' units of computing time and/or storage handed to
students at the beginning of a computer course by professors; also called
"play money" or "purple money" (in implicit opposition to real or "green"
money). When your funny money ran out, your account froze and you needed to
go to a professor to get more. Formerly a common practice, this has now been
made sufficiently rare by the plunging cost of timesharing cycles that it has
become folklore. The amounts allocated were almost invariably too small, even
for the non-hackers who wanted to slide by with minimum work. In extreme
cases the practice led to small-scale black markets in bootlegged computer
accounts. 2. By extension, phantom money or quantity tickets of any kind used
as a resource-allocation hack within a system. <fuzz> n. In floating-point
arithmetic, the maximum difference allowed between two quantities for them to
compare equal. Has to be set properly relative to the FPU's precision limits.
see <fudge factor>. <fuzzball> [TCP/IP hackers] n. A DEC LSI-11 running a
particular suite of homebrewed software by Dave Mills and assorted
co-conspirators, used in the early 80's for Internet protocol testbedding and
experimentation. These were used as NSFnet backbone sites in its early
56KB-line days; a few of these are still active on the Internet as of early
1990, doing odd jobs such as network time service. {= G =} <gabriel>
/gay'bree-@l/ [for Dick Gabriel, SAIL volleyball fanatic] n. An unnecessary
(in the opinion of the opponent) stalling tactic, e.g., tying one's shoelaces
or hair repeatedly, asking the time, etc. Also used to refer to the
perpetrator of such tactics. Also, "pulling a Gabriel", "Gabriel mode". <gag>
vi. Equivalent to <choke>, but connotes more disgust. "Hey, this is Fortran
code. No wonder the C compiler gagged." see also <barf>. <gang bang> n. The
use of large numbers of loosely-coupled programmers in an attempt to wedge a
great many features into a product in a short time. While there have been
memorable gang bangs (e.g. that over-the-weekend assembler port mentioned in
Steven Levy's `Hackers'), most are perpetrated by large companies trying to
meet deadlines and produce enormous buggy masses of code entirely lacking in
orthogonality (see <orthogonal>). When market-driven managers make a list of
all the features the competition have and assign one programmer to implement
each, they often miss the importance of maintaining strong invariants, like
relational integrity. see also <firefighting>, <Mongolian Hordes technique>.
<garbage collect> vi., (also "garbage collection", n.) see <GC>. <garply>
/gar'plee/ n. [Stanford] Another meta-syntactic variable (see <foo>) popular
among SAIL hackers. <gas> [as in "gas chamber"] interj. 1. A term of disgust
and hatred, implying that gas should be dispensed in generous quantities,
thereby exterminating the source of irritation. "Some loser just reloaded the
system for no reason! Gas!" 2. A term suggesting that someone or something
ought to be flushed out of mercy. "The system's wedging every few minutes.
Gas!" 3. vt. <flush>. "You should gas that old crufty software." 4. GASEOUS
adj. Deserving of being gassed. Usage: primarily used by Geoff Goodfellow at
SRI, but spreading; became particularly popular after the Moscone/Milk
murders in San Francisco, when it was learned that Dan White (who supported
Proposition 7) would get the gas chamber under 7 if convicted. He was
eventually found not guilty by reason of insanity. <GC> /jee-see/ [from LISP
terminology; "Garbage Collect"] 1. vt. To clean up and throw away useless
things. "I think I'll <GC> the top of my desk today." When said of files,
this is equivalent to <GFR>. 2. vt. To recycle, reclaim, or put to another
use. 3. n. An instantiation of the garbage collector process. "Garbage
collection" is computer science jargon for a particular class of strategies
for dynamically reallocating computer memory. One such strategy involves
periodically scanning all the data in memory and determining what is no
longer useful; useless data items are then discarded so that the memory they
occupy can be recycled and used for another purpose. Implementations of the
LISP language usually use garbage collection. In slang, the full phrase is
sometimes heard but the acronym is more frequently used because it's shorter.
Note that there is an ambiguity in usage that has to be resolved by context:
"I'm going to garbage-collect my desk" usually means to clean out the
drawers, but it could also mean to throw away or recycle the desk itself.
Warning: in X programming, a `GC' may be a graphics context. This technical
term has nothing to do with the jargon <GC>! <GCOS> n. A quick and dirty
<clone> of System/360 DOS that emerged from GE about 1970; originally called
GECOS (the General Electric Comprehensive Operating System) and later kluged
to support primitive timesharing and transaction processing. After the buyout
of GE's computer division by Honeywell the name was changed to General
Comprehensive Operating System (GCOS). Other OS groups at Honeywell began
referring to it as `God's Chosen Operating System', allegedly in reaction to
the GCOS crowd's uninformed and snotty attitude about the superiority of
their product. All this might be of zero interest, except for two facts: 1.
the GCOS people won the political war, resulting in the orphaning and
eventual death of Honeywell <Multics>, and 2. GECOS/GCOS left one permanent
mark on UNIX. Some early UNIX systems at Bell Labs were used as front ends to
GCOS machines; the field added to /etc/passwd to carry GCOS ID information
was called the "GECOS field" and survives today as the pw_gecos member used
for the user's full name and other human-id information. GCOS later played a
major role in keeping Honeywell a dismal also-ran in the mainframe market,
and was itself ditched for UNIX in the late 1980s when Honeywell retired its
aging <big iron> designs. <GECOS> n. see GCOS <gedanken> /g@-dahn'kn/ adj.
Wild-eyed; impractical; not well-thought-out; untried; untested. "Gedanken"
is a German word for "thought". A thought experiment is one you carry out in
your head. In physics, the term "gedanken experiment" is used to refer to an
experiment that is impractical to carry out, but useful to consider because
you can reason about it theoretically. (A classic gedanken experiment of
relativity theory involves thinking about a man flying through space in an
elevator.) Gedanken experiments are very useful in physics, but you have to
be careful. It was a gedanken experiment that led Aristotle to conclude that
heavy things always fall faster than light things (he thought about a rock
and a feather); this was accepted until Galileo proved otherwise. Among
hackers, however, the word has a pejorative connotation. It is said of a
project, especially one in artificial intelligence research, which is written
up in grand detail (typically as a Ph.D. thesis) without ever being
implemented to any great extent. Such a project is usually perpetrated by
people who aren't very good hackers or find programming distasteful or are
just in a hurry. A gedanken thesis is usually marked by an obvious lack of
intuition about what is programmable and what is not, and about what does and
does not constitute a clear specification of an algorithm. <geek out> vi. To
temporarily enter techno-nerd mode while in a non-hackish context, for
example at parties held near computer equipment. Especially used when you
need to do something highly technical and don't have time to explain: "Pardon
me while I geek out for a moment." <gen> /jen/ n.,v. Short for <generate>,
used frequently in both spoken and written contexts. <gender mender> n., also
"gender bender", "gender blender", "sex changer" and even "homosexual
adaptor"; there appears to be some confusion as to whether a `male homosexual
adapter' has pins on both sides (is male) or sockets on both sides (connects
two males). A cable connector shell with either two male or two female
connectors on it, used to correct the mismatches that result when some
<loser> didn't understand the RS232C specification and the distinction
between DTE and DCE. Used esp. for RS-232C parts in either the original D-25
or the IBM PC's bogus D-9 format. <General Public Virus> n. Pejorative name
for some versions of the <GNU> project <copyleft> or General Public License
(GPL), which requires that any tools or <app>s incorporating copylefted code
must be source-distributed on the same counter-commercial terms as GNU stuff.
Thus it is alleged that the copyleft `infects' software generated with GNU
tools, which may in turn infect other software that reuses any of its code.
The Free Software Foundation's official position as of January 1991 is that
copyright law limits the scope of the GPL to "programs textually
incorporating significant amounts of GNU code", and that the `infection' is
not passed on to third parties unless actual GNU source is transmitted (as
in, for example, use of the Bison parser skeleton). Nevertheless, widespread
suspicion that the <copyleft> language is `boobytrapped' has caused many
developers to avoid using GNU tools and the GPL license. <generate> vt. To
produce something according to an algorithm or program or set of rules, or as
a (possibly unintended) side effect of the execution of an algorithm or
program. The opposite of <parse>. This term retains its mechanistic
connotations (though often humorously) when used of human behavior. "The guy
is rational most of the time, but mention nuclear energy around him and he'll
generate <infinite> flamage." <Get a life!> imp. Hacker-standard way of
suggesting that the person to whom you are speaking has succumbed to terminal
geekdom (see <computer geek>). Often heard on <USENET>. This exhortation was
originally uttered by William Shatner on a Saturday Night Live episode in a
speech which ended "Get a *life*!". <Get a real computer!> imp. Typical
hacker response to news that somebody is having trouble getting work done on
a system that is a) single-tasking, b) has no Winchester, or c) has an
address space smaller than 4 megabytes. This is as of 1990; note that the
threshold for `real computer' rises with time, and it may well be (for
example) that machines with character-only displays will be considered
`unreal' in a few years. see <bitty box> and <toy>. <GFR> /jee eff ar/ vt.
[acronym, ITS] From "Grim File Reaper", an ITS utility. To remove a file or
files according to some program-automated or semi-automatic manual procedure,
especially one designed to reclaim mass storage space or reduce namespace
clutter. Often generalized to pieces of data below file level. "I used to
have his phone number but I guess I <GFR>ed it." see also <prowler>,
<reaper>. <gig> /jig/ or /gig/ n. Short for "gigabyte" (1024 megabytes); esp.
used in describing amounts of <core> or mass storage. "My machine just got
upgraded to a quarter-gig". see also <kilo->. <giga-> /ji'ga/ or /gi'ga/
pref. Multiplier, 10 ^ 9 or 2 ^ 30. see <kilo->. <GIGO> /gie'goh/ [acronym]
1. Garbage In, Garbage out --- Usually said in response to lusers who
complain that a program didn't complain about faulty data. Also commonly used
to describe failures in human decision making due to faulty, incomplete or
imprecise data. 2. Garbage In, Gospel Out --- this more recent expansion is a
sardonic comment on the tendency human beings have to put excessive trust in
"computerized" data. <gillion> /jill'y@n/ n. 10 ^ 9. [From <giga->, following
construction of mega/million and notional tera/trillion] Same as an American
billion or a British `milliard'. <glark> /glark/ vt. To figure something out
from context. "The System III manuals are pretty poor, but you can generally
glark the meaning from context". Interestingly, the word was originally
`glork'; the context was "This gubblick contains many nonsklarkish English
flutzpahs, but the overall pluggandisp can be glorked [sic] from context." by
David Moser, quoted by Douglas Hofstadter in his `Metamagical Themas' column
in the January 1981 Scientific American. It is conjectured that hackish usage
mutated the verb to `glark' because <glork> was already an established jargon
term. <glass> [IBM] n. Synonym for <silicon>. <glass tty> /glas tee-tee-wie/
or /glas ti'tee/ n. A terminal which has a display screen but which, because
of hardware or software limitations, behaves like a teletype or other
printing terminal, thereby combining the disadvantages of both: like a
printing terminal, it can't do fancy display hacks, and like a display
terminal, it doesn't produce hard copy. An example is the early `dumb'
version of Lear-Siegler ADM-3 (without cursor control). see <tube>, <tty>.
see Appendix A for an interesting true story about glass ttys. <glitch>
/glich/ [from German "glitschen" to slip, via Yiddish "glitshen", to slide or
skid] 1. n. A sudden interruption in electric service, sanity, continuity, or
program function. Sometimes recoverable. An interruption in electric service
is specifically called a "power glitch". This is of grave concern because it
usually crashes all the computers. More common in slang, though, a hacker who
got to the middle of a sentence and then forgot how he or she intended to
complete it might say, "Sorry, I just glitched". 2. vi. To commit a glitch.
see <gritch>. 3. vt. [Stanford] To scroll a display screen several lines at a
time. This derives from some oddities in the terminal behavior under the
mutant TOPS-10 formerly used at SAIL. 4. (obs.) Same as <magic cookie>, sense
#2. <glob> /glob/, *not* /glohb/ [UNIX, from `glob', the name of a subprogram
that translated wildcards in archaic Bourne Shell versions] vt.,n. To expand
special characters in a wildcarded name, or the act of so doing (the action
is also called "globbing"). The UNIX conventions for filename wildcarding
have become sufficiently pervasive that many hackers use some of them in
written English, especially in email or news on technical topics. Those
commonly encountered include: * wildcard for any string (see UN*X). ?
wildcard for any character (generally only read this way at the beginning or
in the middle of a word). [] wildcard matching one character from a specified
set. {} alternation of comma-separated alternatives. Thus, `foo{bar,baz}'
would be read as `foobar' or `foobaz'. Some examples: "He said his name was
[KC]arl" (expresses ambiguity). "That got posted to talk.politics.*" (all the
talk.politics subgroups on <USENET>). Other examples are given under the
entry for <X>. <glork> /glork/ 1. interj. Term of mild surprise, usually
tinged with outrage, as when one attempts to save the results of two hours of
editing and finds that the system has just crashed. 2. Used as a name for
just about anything. see <foo>. 3. vt. Similar to <glitch>, but usually used
reflexively. "My program just glorked itself." <glue> n. Generic term for any
interface logic or protocol that connects between two monolithic component
blocks. For example, the <Blue Glue> is IBM's SNA protocol, and hardware
designers call anything used to connect large VLSI's or circuit blocks "glue
logic". <gnarly> adj. Both <obscure> and <hairy> in the sense of complex.
"Yeech --- the tuned assembler implementation of BitBlt is really gnarly!"
From a similar but less specific usage in surfer slang. <GNU> /gnoo/, *not*
/noo/ 1. [acronym for "GNU's Not UNIX!"] A UNIX-workalike development effort
of the Free Software Foundation headed by Richard Stallman
(rms@prep.ai.mit.edu). GNU EMACS and the GNU C compiler, two tools designed
for this project, have become very popular in hackerdom. The GNU project was
designed partly to prosyletize for RMS's position that information is
community property and all software source should be shared (one of its
slogans is "Help stamp out software hoarding!"). Though this remains
controversial (because it implicitly denies any right of designers to own and
assign the results of their labors), many hackers who disagree with him have
nevertheless cooperated to produce large amounts of high-quality software
available for free redistribution under the Free Software Foundation
imprimatur. see <EMACS>, <copyleft>, <General Public Virus>. 2. Noted UNIX
hacker John Gilmore (gnu@toad.com), founder of USENET's anarchic alt.*
hierarchy. <GNUMACS> /gnoo'maks/ [contraction of `Gnu Emacs'] Often-heard
abbreviated name for the <GNU> project's flagship tool, <EMACS>. Used esp. in
contrast with <GOSMACS>. <go flatline> [from cyberpunk SF, refers to
flattening of EEG traces upon brain-death] vi., also adjectival <flatlined>.
1. To die, terminate, or fail, esp. irreversibly. In hacker parlance this is
used of machines only, human death being considered somewhat too serious a
matter to employ jargon-jokes about. 2. To go completely quiescent; said of
machines undergoing controlled shutdown. "You can suffer file damage if you
shut down UNIX but power off before the system has gone flatline." 3. A
particular failure mode of video tubes in which vertical scan is lost, so all
one sees is a bright horizontal line bisecting the screen. <gobble> vt. To
consume or to obtain. The phrase <gobble up> tends to imply `consume', while
<gobble down> tends to imply `obtain'. "The output spy gobbles characters out
of a <tty> output buffer." "I guess I'll gobble down a copy of the
documentation tomorrow." see also <snarf>. <golden> adj. [perh. from
folklore's `golden egg'] When used to describe a magnetic medium (e.g.
`golden disk', `golden tape'), describes one containing a tested, up-to-spec,
ready-to-ship software version. <gonk> /gonk/ vt.,n. 1. To prevaricate or to
embellish the truth beyond any reasonable recognition. It is alleged that in
German the term is (fictively) "gonken", in Spanish the verb becomes
"gonkar". "You're gonking me. That story you just told me is a bunch of
gonk." In German, for example, "Du gonkst mir" (You're pulling my leg). see
also <gonkulator>. 2. [British] To grab some sleep at an odd time.
<gonkulator> /gon'kyoo-lay-tr/ [from the old `Hogan's Heroes' TV series] n. A
pretentious piece of equipment that actually serves no useful purpose.
Usually used to describe one's least favorite piece of computer hardware. see
<gonk>. <gonzo> /gon'zo/ [from Hunter S. Thompson] adj. Overwhelming;
outrageous; over the top; very large, esp. used of collections of source
code, source files or individual functions. Has some of the connotations of
<moby> and <hairy>. <Good Thing> adj. Often capitalized; always pronounced as
if capitalized. 1. Self-evidently wonderful to anyone in a position to
notice: "The Trailblazer's 19.2Kbaud PEP mode with on-the-fly Lempel-Ziv
compression is a Good Thing for sites relaying netnews." 2. Something which
can't possibly have any ill side effects and may save considerable grief
later: "Removing the self-modifying code from that shared library would be a
Good Thing." 3. When said of software tools or libraries, as in "YACC is a
Good Thing", specifically connotes that the thing has drastically reduced a
programmer's work load. Oppose <Bad Thing>. <gorilla arm> n. The side-effect
that destroyed touch-screens as a mainstream input technology despite a
promising start in the early eighties. It seems the designers of all those
<spiffy> touch-menu systems failed to notice that humans aren't designed to
hold their arms in front of their faces making small motions. After more than
a very few selects the arm begins to feel sore, cramped, and oversized, hence
`gorilla arm'. This is now considered a classic Horrible Example and
cautionary tale to human-factors designers; "Remember the gorilla arm!" is
shorthand for "How's this gonna fly in *real* use?" <gorp> /gorp/ [CMU,
perhaps from the canonical hiker's food, Good Old Raisins And Peanuts]
Another metasyntactic variable, like <foo> and <bar>. <GOSMACS> /goz'maks/
[contraction of `Gosling Emacs'] n. The first <EMACS>-in-C implementation,
predating but now largely eclipsed by <GNUMACS>. Originally freeware; a
commercial version is now modestly popular as `UniPress Emacs'. The author
(James Gosling) went on to invent NeWS. <Gosperism> /gos'p@r-iz-m/ A hack,
invention, or saying by arch-hacker R. William (Bill) Gosper. This notion
merits its own term because there are so many of them. Many of the entries in
<HAKMEM> are Gosperisms; see also <life>. <grault> /grawlt/ n. Yet another
meta-syntactic variable, invented by Mike Gallaher and propagated by the
<GOSMACS> documentation. see <corge>. <gray goo> n. A hypothetical substance
composed of <sagans> of sub-micron-sized Von Neumann machines
(self-replicating robots) programmed to make copies of themselves out of
whatever is available. The image that goes with the term is one of the entire
biosphere of Earth being eventually converted to robot goo. This is the
simplest of the <nanotechnology> disaster scenarios and is easily refuted by
arguments from energy requirements and elemental abundances. <Great Renaming>
n. The <flag day> on which all of the groups on the <USENET> had their names
changed from the net.- format to the current multiple-hierarchies scheme.
<Great Runes> n. Uppercase-only text or display messages. Some archaic
operating systems still emit these. see also <runic>, <smash case>, <fold
case>, <mixed case>. <great-wall> [from SF fandom] vi.,n. A mass expedition
to an oriental restaurant, esp. one where food is served family-style and
shared. There is a common heuristic about the amount of food to order
expressed as "For N people, get N - 1 entrees.". see ORIENTAL FOOD, <ravs>,
<stir-fried random>. <Green Book> n. 1. One of the three standard PostScript
references (`PostScript Language Program Design', Adobe Systems,
Addison-Wesley 1988 QA76.73.P67P66 ISBN 0-201-14396-8); see also <Red Book>,
<Blue Book>). 2. Informal name for one of the three standard references on
PostScript: `Smalltalk-80: Bits of History, Words of Advice', Glenn Krasner,
Addison-Wesley 1983, QA76.8.S635S58, ISBN 0-201-11669-3 (this is also
associated with blue and red books). 3. The `X/Open Compatibility Guide'.
Defines an international standard <UNIX> environment that is a proper
superset of POSIX/SVID; also includes descriptions of a standard utility
toolkit, systems administrations features, and the like. This grimoire is
taken with particular seriousness in Europe. see <Purple Book>. 4. The IEEE
1003.1 POSIX Operating Systems Interface standard has been dubbed "The Ugly
Green Book". 5. Any of the 1992 standards which will be issued by the CCITT
10th plenary assembly. Until now, these have changed color each review cycle
(1984 was <Red Book>, 1988 <Blue Book>); however, it is rumored that this
convention is going to be dropped befor 1992. These include, among other
things, the X.400 email spec and the Group 1 through 4 fax standards. see
also <Blue Book>, <Red Book>, <Green Book>, <Silver Book>, <Purple Book>,
<Orange Book>, <White Book>, <Dragon Book>, <Pink-Shirt Book>. <green bytes>
n. 1. Meta-information imbedded in a file such as the length of the file or
its name; as opposed to keeping such information in a separate description
file or record. Name comes from an IBM user's group meeting where these two
approaches were being debated and the diagram of the file on the blackboard
had the `green bytes' drawn in green. 2. By extension, the non-data bits in
any self-describing format. "A GIF file contains, among other things, green
bytes describing the packing method for the image." <green card> n. [after
the IBM System/360 Reference Data card] This is used for any summary of an
assembly language, even if the color is not green. Less frequently used now
because of the decrease in the use of assembly language. "I'll go get my
green card so I can check the addressing mode for that instruction." Some
green cards are actually booklets. The original green card became a yellow
card when the System/370 was introduced, and later a yellow booklet. An
anecdote from IBM refers to a scene that took place in a programmers'
terminal room at Yorktown in 1978. A luser overheard one of the programmers
ask another "Do you have a green card?". The other grunted and passed the
first a thick yellow booklet. At this point the luser turned a delicate shade
of olive and rapidly left the room, never to return. see also <card>. <green
lightning> [IBM] n. 1. Apparently random flashing streaks on the face of
3278-9 terminals while a new symbol set is being downloaded. This hardware
bug was left deliberately unfixed, as some genius within IBM suggested it
would let the user know that `something is happening'. That, it certainly
does. 2. [proposed] Any bug perverted into an alleged feature by adroit
rationalization or marketing. E.g. "Motorola calls the CISC cruft in the
88000 architecture `compatibility logic', but I call it green lightning".
<green machine> n. A computer or peripheral device that has been designed and
built to military specifications for field equipment (that is, to withstand
mechanical shock, extremes of temperature and humidity, and so forth). Comes
from the olive-drab `uniform' paint used for military equipment. <grep>
/grep/ [from the qed/ed editor idiom g/re/p , where re stands for a regular
expression, to Globally search for the Regular Expression and Print the lines
containing matches to it) via <UNIX> `grep(1)'] vt. To rapidly scan a file or
file set looking for a particular string or pattern. By extension, to look
for something by pattern. "Grep the bulletin board for the system backup
schedule, would you?" <grind> vt. 1. [MIT and Berkeley] To format code,
especially LISP code, by indenting lines so that it looks pretty. This usage
was associated with the MACLISP community and is now rare; <prettyprint> was
and is the generic term for such operations. 2. [UNIX] To generate the
formatted version of a document from the nroff, troff, TeX or Scribe source.
The BSD program `vgrind' grinds code for printing on a Versatec bitmapped
printer. 3. To run seemingly interminably, esp. (but not necessarily) if
performing some tedious and inherently useless task. Similar to <crunch> or
<grovel>. Grinding has a connotation of using a lot of CPU time, but it is
possible to grind a disk, network, etc. see also <hog>. 4. To make the whole
system slow, e.g. "Troff really makes things grind to a halt on a PDP-11". 5.
<grind grind> excl. Roughly, "Isn't the machine slow today!" <grind crank> n.
A mythical accessory to a terminal. A crank on the side of a monitor, which
when operated makes a zizzing noise and causes the computer to run faster.
Usually one does not refer to a grind crank out loud, but merely makes the
appropriate gesture and noise. see <grind>, and <wugga wugga>. Historical
note: At least one real machine actually had a grind crank --- the R1, a
research machine built towards the the end of the days of the great vacuum
tube computers in 1959. R1 (also known as `The Rice Institute Computer' -
TRIC, and later as `The Rice University Computer' - TRUC) had a single
step/free run switch for use when debugging programs. Since single stepping
through a large program was rather tedious, there was also a crank with a cam
and gear arrangement that repeatedly pushed the single step button. This
allowed one to `crank' through a lot of code, then slow down to single step a
bit when you got near the code of interest, poke at some registers using the
console typewriter, and then keep on cranking. <gritch> /grich/ 1. n. A
complaint (often caused by a <glitch>). 2. vi. To complain. Often
verb-doubled: "Gritch gritch". 3. A synonym for <glitch> (as verb or noun).
<grok> /grok/ [from the novel `Stranger in a Strange Land', by Robert
Heinlein, where it is a Martian verb meaning literally "to drink" and
metaphorically "to be one with"] vt. 1. To understand, usually in a global
sense. Connotes intimate and exhaustive knowledge. Contrast <zen>, similar
supernal understanding as a single brief flash. 2. Used of programs, may
connote merely sufficient understanding, e.g., "Almost all C compilers grok
void these days." <gronk> /gronk/ [popularized by the cartoon strip `B.C.' by
Johnny Hart, but the word apparently predates that] vt. 1. To clear the state
of a wedged device and restart it. More severe than "to <frob>". 2. To break.
"The teletype scanner was gronked, so we took the system down." 3. <gronked>:
adj. Of people, the condition of feeling very tired or sick. Oppose <broken>,
which means about the same as <gronk> used of hardware but connotes
depression or mental/emotional problems in people. 4. <gronk out>: vi. To
cease functioning. Of people, to go home and go to sleep. "I guess I'll gronk
out now; see you all tomorrow." <grovel> vi. 1. To work interminably and
without apparent progress. Often used transitively with `over' or `through'.
"The file scavenger has been grovelling through the file directories for ten
minutes now." Compare <grind> and <crunch>. Emphatic form: <grovel
obscenely>. 2. To examine minutely or in complete detail. "The compiler
grovels over the entire source program before beginning to translate it." "I
grovelled through all the documentation, but I still couldn't find the
command I wanted." <grunge> [Cambridge] n. Code which is `dead' (can never be
accessed) due to changes in other parts of the program. The preferred term in
North America is <dead code>, <grungy> /gruhn'jee/ adj. Incredibly dirty,
greasy, or grubby. Anything which has been washed within the last year is not
really grungy. Also used metaphorically; hence some programs (especially
crocks) can be described as grungy. Now (1990) also common in mainstream
slang. <gubbish> /guh'bish/ [a portmanteau of "garbage" and "rubbish"?] n.
Garbage; crap; nonsense. "What is all this gubbish?" The opposite portmanteau
"rubbage" is also reported. <guiltware> n. <freeware> decorated with a
message telling one how long and hard the author worked on this program and
intimating that one is a no-good freeloader if one does not immediately send
the poor suffering martyr gobs of money. <gumby> /guhm'bee/ [from a class of
Monty Python characters, poss. themselves named after a '60s claymation
character] n. An act of minor but conspicuous stupidity, often in "gumby
maneuver" or "pull a gumby". <gun> [from the :GUN command on ITS] vt. To
forcibly terminate a program or job (computer, not career). "Some idiot left
a background process running soaking up half the cycles, so I gunned it."
Compare <can>. <gurfle> /ger'fl/ interj. An expression of shocked disbelief.
"He said we have to recode this thing in FORTRAN by next week. Gurfle!"
Compare <weeble>. <guru> n. 1. [UNIX] An expert. Implies not only <wizard>
skill but a history of being a knowledge resource for others. Less often,
used (with a qualifier) for other experts on other systems, as in `VMS guru'.
2. Amiga equivalent of "panic" in UNIX. When the system crashes a cryptic
message "GURU MEDITATION #XXXXXXXX.YYYYYYYY" appears, indicating what the
problem was. An Amiga guru can figure things out from the numbers. Generally
a <guru> event must be followed by a <vulcan nerve pinch>. {= H =} <h infix>
[from SF fandom] A method of `marking' common words in the linguist's sense,
i.e. calling attention to the fact that they are being used in a nonstandard,
ironic or humorous way. Orig. in the fannish catchphrase "Bheer is the One
True Ghod" from decades ago. H-infix marking of `Ghod' and other words spread
into the Sixties counterculture via underground comix, and into early
hackerdom either from the counterculture or SF fandom (all three overlapped
heavily at the time). More recently, the h infix has become an expected
feature of benchmark names, i.e. Whetstone, Dhrystone, Rhealstone, etc; this
is prob. patterning on the original Whetstone name but influenced by the
fannish/counterculture H infix. <ha ha only serious> [from SF fandom, orig.
as mutation of HHOK, "Ha Ha Only Kidding"] A phrase that aptly captures the
flavor of much hacker discourse (often seen abbreviated as HHOS). Applied
especially to parodies, absurdities and ironic jokes that are both intended
and perceived to contain a possibly disquieting amount of truth, or truths
which are constructed on in-joke and self-parody. The jargon file contains
many examples of ha-ha-only-serious in both form and content. Indeed, the
entirety of hacker culture is often perceived as ha-ha-only-serious by
hackers themselves; to take it either too lightly or too seriously marks a
person as an outsider, a <wannabee> or in <larval stage>. For further
enlightenment on this subject, consult any Zen master. see also HUMOR, HACKER
and <AI koans>. <hack> 1. n. Originally a quick job that produces what is
needed, but not well. 2. n. An incredibly good, and perhaps very
time-consuming, piece of work that produces exactly what is needed. 4. n. The
result of a hack (sense 1 or 2); 3. "neat hack": n., A clever technique.
Also, a brilliant practical joke, where neatness is correlated with
cleverness, harmlessness, and surprise value. Example: the Caltech Rose Bowl
card display switch (see Appendix A). 5. "real hack": A crock (occasionally
affectionate). vt. 6. With `together', to throw something together so it will
work. 7. vt. To bear emotionally or physically. "I can't hack this heat!" 8.
vt. To work on something (typically a program). In specific sense: "What are
you doing?" "I'm hacking TECO." In general sense: "What do you do around
here?" "I hack TECO." (The former is time-immediate, the latter
time-extended.) More generally, "I hack x" is roughly equivalent to "x is my
major interest (or project)". "I hack solid-state physics." 9. vt. To pull a
prank on. see definition 3 and <hacker> (def #6). 10. vi. To waste time (as
opposed to <tool>). "Watcha up to?" "Oh, just hacking." 11. "hack up", "hack
on": vt., To hack, but generally implies that the result is meanings 1-2. 12.
[UNIX] n. A dungeon game similar to <rogue> but more elaborate, distributed
in C source over <USENET> and very popular at UNIX sites and on PC-class
machines. Recent versions are called `nethack'. 13. n. Short for <hacker>,
which see. Constructions on this term abound. They include: "happy hacking":
A farewell. <how's hacking?>: A friendly greeting among hackers. "hack hack":
A somewhat pointless but friendly comment, often used as a temporary
farewell. For more on the meaning of <hack> see Appendix A. <hack attack>
[poss by analogy with `Big Mac Attack'] n. Nearly synonymous with <hacking
run> though the latter implies an all-nighter more strongly. <hack value> n.
Often adduced as the reason or motivation for expending effort toward a
seemingly useless goal, the point being that the accomplished goal is a hack.
For example, MacLISP has features for reading and printing roman numerals,
which was installed purely for hack value. As a musician once said of jazz,
if you don't understand hack value there is no way it can be explained.
<hack-and-slay> n. 1. To play a <MUD> or go mudding, especially with the
intention of <berserking> for pleasure. 2. To undertake an all-night
programming/hacking session, interspersed with stints of mudding to alleviate
boredom. This term arose on the British academic network amongst students who
worked nights and logged onto Essex University's MUDs during public-access
hours (2am => 7am). Usually more mudding than work was done in these
sessions. <hacked-off> adj. Said of system administrators who have become
annoyed, upset or touchy due to suspicions that their sites have been or are
going to be victimized by crackers, or used for inappropriate, technically
illegal, or even overtly criminal activities. For example, having unreadable
files in your home directory called `worm', `lockpick', or `goroot' would
probably be an effective way to get your sysadmin hacked off at you, not to
mention a monumentally obvious and stupid one. <hacker> [originally, someone
who makes furniture with an axe] n. 1. A person who enjoys learning the
details of programming systems and how to stretch their capabilities, as
opposed to most users who prefer to learn only the minimum necessary. 2. One
who programs enthusiastically (even obsessively), or who enjoys programming
rather than just theorizing about programming. 3. A person capable of
appreciating <hack value>. 4. A person who is good at programming quickly.
Not everything a hacker produces is a hack. 5. An expert at a particular
program, or one who frequently does work using it or on it; example: "A UNIX
hacker". (Definitions 1 to 5 are correlated, and people who fit them
congregate.) 6. An expert of any kind. One might be an astronomy hacker, for
example. 7. (deprecated) A malicious or inquisitive meddler who tries to
discover information by poking around. Hence "password hacker", "network
hacker". see <cracker>. <hack mode> n. 1. What one is in when hacking, of
course. 2. More specifically, a Zen-like state of total focus on The Problem
which may be achieved when one is hacking. Ability to enter such
concentration at will correlates strongly with wizardliness; it is one of the
most important skills learned during <larval stage>. Sometimes amplified as
"deep hack mode". Being yanked out of hack mode (see <priority interrupt>)
may be experienced as an almost physical shock, and the sensation of being in
it is more than a little habituating. The intensity of this experience is
probably by itself sufficient explanation for the existence of hackers, and
explains why many resist being promoted out of positions where they can do
code. see also <cyberspace> (sense #2). <hacking run> [analogy with "bombing
run" or "speed run"] n. A hack session extended long outside normal working
times, especially one longer than 12 hours. May cause you to "change phase
the hard way" (see <phase>). <hackish> /hak'ish/ adj. (also <hackishness> n.)
1. Being or involving a hack. 2. Of or pertaining to hackers or the hacker
subculture. see also <true-hacker>. It is better to be described as hackish
by others than to describe oneself that way. Hackers consider themselves
somewhat of an elite, though one to which new members are gladly welcome. It
is a meritocracy based on ability. There is a certain self-satisfaction in
identifying yourself as a hacker (but if you claim to be one and are not,
you'll quickly be labelled <bogus>). <hackishness> n. The quality of being or
involving a hack. <hackitude> n. Syn. <hackitude>; this word is considered
silly. <hair> [back-formation from <hairy>] n. The complications which make
something hairy. "Decoding <TECO> commands requires a certain amount of
hair." Often seen in the phrase <infinite hair>, which connotes extreme
complexity. Also in <hairiferous> (tending to promote hair growth): "GNUMACS
elisp encourages lusers to write complex editing modes." "Yeah, it's pretty
hairiferous all right." (or just: "Hair squared!") <hairy> adj. 1. Overly
complicated. "<DWIM> is incredibly hairy." 2. Incomprehensible. "<DWIM> is
incredibly hairy." 3. Of people, high-powered, authoritative, rare, expert,
and/or incomprehensible. Hard to explain except in context: "He knows this
hairy lawyer who says there's nothing to worry about." <HAKMEM> /hak'mem/ n.
MIT AI Memo 239 (February 1972). A legendary collection of neat mathematical
and programming hacks contributed by many people at MIT and elsewhere. (The
title of the memo really is "HAKMEM", which is an acronym of sorts for `hacks
memo'.) Some of them are very useful techniques or powerful theorems, but
most fall into the category of mathematical and computer trivia. A sampling
of the entries (with authors), slightly paraphrased: Item 41 (Gene Salamin)
There are exactly 23,000 prime numbers less than 2 ^ 18. Item 46 (Rich
Schroeppel) The most *probable* suit distribution in bridge hands is 4-4-3-2,
as compared to 4-3-3-3, which is the most *evenly* distributed. This is
because the world likes to have unequal numbers: a thermodynamic effect
saying things will not be in the state of lowest energy, but in the state of
lowest disordered energy. Problem 81 (Rich Schroeppel) Count the magic
squares of order 5 (that is, all the 5-by-5 arrangements of the numbers from
1 to 25 such that all rows, columns, and diagonals add up to the same
number). There are about 320 million, not counting those that differ only by
rotation and reflection. Item 174 (Bill Gosper and Stuart Nelson) 21963283741
is the only number such that if you represent it on the <PDP-10> as both an
integer and a floating-point number, the bit patterns of the two
representations are identical. HAKMEM also contains some rather more
complicated mathematical and technical items, but these examples show some of
its fun flavor. <hakspek> /hak'speek/ n. Generally used term to describe a
method of spelling to be found on many British academic bulletin boards and
talker systems. Syllables and whole words in a sentence are replaced by
single ASCII characters which are phonetically similar or equivalent, whilst
multiple letters are usually dropped. Hence `for' becomes `4', `two', `too'
and `to' become `2', `ck' becomes `k'. "Before I see you tomorrow" becomes
"b4 i c u 2moro". First appeared in London about 1986, and was probably
caused by the slow speed of available talker systems, which operated on
archaic machines with outdated operating systems, and no standard methods of
communication. Has become rarer nowadays. see also <talk mode>. <hamster> n.
A particularly slick little piece of code that does one thing well; a small,
self-contained hack. The image is of a hamster happily spinning its exercise
wheel. <hand-hacking> n. 1. The practice of translating <hot spot>s from an
<HLL> into custom hand-optimized assembler, as opposed to trying to coerce
the compiler into generating better code. Both the term and the practice are
becoming uncommon. see <tune>, <bum>; syn. with v. <cruft>. 2. More
generally, manual construction or patching of data sets that would normally
be ground out by a translation utility and interpreted by another program,
and aren't really designed to be read or modified by humans. <handshaking> n.
Hardware or software activity designed to keep two machines or programs in
synchronization as they <do protocol>. Often applied to human activity; thus,
a hacker might watch two people in conversation nodding their heads to
indicate that they've heard each others' points and say "Oh, they're
handshaking!". see also <protocol>. <handwave> [poss. fr. gestures
characteristic of stage magicians] 1. v. To gloss over a complex point; to
distract a listener; to support a (possibly actually valid) point with
blatantly faulty logic. If someone starts a sentence with "Clearly..." or
"Obviously..." or "It is self-evident that...", you can be sure he is about
to handwave. The theory behind this term is that if you wave your hands at
the right moment, the listener may be sufficiently distracted to not notice
that what you have said is <bogus>. Alternatively, if a listener does object,
you might try to dismiss the objection with a wave of your hand. 2. n. The
act of handwaving. "Boy, what a handwave!" The use of this word is often
accompanied by gestures: both hands up, palms forward, swinging the hands in
a vertical plane pivoting at the elbows and/or shoulders (depending on the
magnitude of the handwave); alternatively, holding the forearms still while
rotating the hands at the wrist to make them flutter. In context, the
gestures alone can suffice as a remark; if a speaker makes an outrageous
unsupported assumption, you might simply wave your hands in this way, as an
accusation more eloquent than words could express that his logic is faulty.
<hang> v. 1. To wait for some event to occur; to hang around until something
happens. "The program displays a menu and then hangs until you type a
character." 2. More commonly, to wait for an event that will never occur.
"The system is hanging because it can't read from the crashed drive". see
<wedged>, <hung>. <Hanlon's Razor> n. A `murphyism' parallel to Occam's Razor
that reads "Never attribute to malice that which can be adequately explained
by stupidity". The derivation of the common title Hanlon's Razor is unknown;
a similar epigram has been attributed to William James. Quoted here because
it seems to be a particular favorite of hackers, often showing up in <fortune
cookie> files and the login banners of BBS systems and commercial networks.
This probably reflects the hacker's daily experience of environments created
by the well-intentioned but shortsighted. <harcoded> adj. 1. Data inserted
directly into a program, where it cannot be easily modified, as opposed to
data in some <profile> por environment variable that a <user> or hacker can
easily modify. 2. In C, this is esp. applied to use of a literal instead of a
preprocessor #define (see <magic number>). <hardwarily> /hard-weir'i-lee/
adv. In a way pertaining to hardware. "The system is hardwarily unreliable."
The adjective `hardwary' is *not* used. see <softwarily>. <hardwired> adj. 1.
Syn. for <hardcoded>. Technically, this term only applies to hardware, but
hackers use it for software as well. 2. By extension, anything that is not
modifiable, especially in the sense of customizable to one's particular needs
or tastes. <has the X nature> [seems to derive from Zen Buddhist koans of the
form "Does an X have the Buddha-nature?"] adj. Common hacker construction for
`is an X', used for humorous emphasis. "Anyone who can't even use a program
with on-screen help embedded in it truly has the <loser> nature!" <hash
collision> [from the technical usage] n. When used of people, signifies a
confusion in associative memory or imagination, especially a persistent one
(see <thinko>). True story: one of us [ESR] was once on the phone with a
friend about to move out to Berkeley. When asked what he expected Berkeley to
be like, the friend replied "Well, I have this mental picture of naked women
throwing Molotov cocktails, but I think that's just a collision in my hash
tables." The variant "hash clash" is also reported. <HCF> /aych-see-eff/ n.
Mnemonic for "Halt and Catch Fire", any of several undocumented and
semi-mythical machine instructions with destructive side-effects, supposedly
included for test purposes on several well-known architectures going as far
back as the IBM 360. The MC6800 microprocessor was the first for which the
HCF opcode became widely known. This instruction caused the processor to
<toggle> a subset of the bus lines as rapidly as it can; in some
configurations this can actually cause lines to burn up. <heads down> [Sun]
adj. Concentrating, usually so heavily and for so long that everything
outside the focus area is missed. see also <larval stage>, although it's not
confined to fledgeling hackers. <heartbeat> n. 1. The signal emitted by a
Level 2 Ethernet transceiver at the end of every packet to show that the
collision-detection circuit is still connected. 2. A periodic synchronization
signal used by software or hardware, such as a bus clock or a periodic
interrupt. 2. The `natural' oscillation frequency of a computer's clock
crystal, before frequency division down to the machine's clock rate. 3. A
signal emitted at regular intervals by software to demonstrate that it's
still alive. Sometimes hardware is designed to reboot the machine if it stops
hearing a heartbeat. see also <breath-of-life packet>. <heavy metal>
[Cambridge] n. Syn. <big iron>. <heavy wizardry> n. Code or designs which
trade on a particularly intimate knowledge or experience of a particular
operating system or language or complex application interface. Distinguished
from <deep magic>, which trades more on arcane *theoretical* knowledge.
Writing device drivers is heavy wizardry; so is interfacing to X (sense #2)
without a toolkit. Esp. found in comments of the form "Heavy wizardry begins
here...". Compare <voodoo programming>. <heavyweight> adj. High-overhead;
<baroque>; code-intensive; featureful, but costly. Esp. used of communication
protocols, language designs, and any sort of implementation in which maximum
generality has been pushed at the expense of mundane considerations like
speed, memory utilization, and start-up time. <EMACS> is a heavyweight
editor; <X> is an "extremely" heavyweight window system. This term isn't
pejorative, but one man's heavyweight is another's <elephantine> and a
third's <monstrosity>. Oppose "lightweight". <heisenbug> /hie'zen-buhg/ [from
Heisenberg's Uncertainty Principle in quantum physics] n. A bug which
disappears or alters its behavior when one attempts to probe or isolate it.
Antonym of <Bohr bug>. In C, 9 out of 10 heisenbugs result from either
<fandango on core> phenomena (esp. lossage related to corruption of the
malloc <arena>) or errors which <smash the stack>. <Helen Keller mode> n.
State of a hardware or software system which is deaf, dumb, and blind, i.e.
accepting no input and generating no output, usually due to an infinite loop
or some other excursion into <deep space>. (Unfair to the real Helen Keller,
whose success at learning speech was triumphant.) see also <go flatline>.
<hello sailor!> interj. Occasional West Coast equivalent of <hello, world!>;
seems to have originated at SAIL, later associated with the game <Zork>
(which also included "hello aviator" and "hello implementor"). Originally
from the from traditional hooker's greeting to to a swabbie fresh off the
boat, of course. <hello wall!> excl. see <wall>. <hello world!> interj. 1.
The canonical minimal test message in the C/UNIX universe. In folklore, the
first program a C coder is supposed to write in a new environment is one that
just prints "hello, world!" to standard output (and indeed it is the first
example program in <K&R>). Environments that generate an unreasonably large
executable for this trivial test or which require a <hairy> compiler-linker
invocation to generate it are considered to <lose>. 2. Greeting uttered by a
hacker making an entrance or requesting information from anyone present.
"Hello, world! Is the <VAX> back up yet?" <hex> n. Short for <hexadecimal>,
base 16. This term has nothing to do with <black magic>, though the pun is
appreciated and occasionally used by hackers. True story: as a joke, some
hackers once offered some surplused ICs for sale to be worn as protective
amulets against hostile magic. The chips were, of course, hex inverters.
<hexadecimal> n. Base 16. Coined in the early nineteen-sixties to replace
earlier `sexadecimal', which was too racy and amusing for stuffy IBM, and
later adopted by the rest of the industry. Actually, neither term is
etymologically pure. The most strictly correct term for base-10 is `denary'
(compare `binary'), which comes from `denarius', one of a group of Latin
number words used specifically for partitioning (as opposed to numbering);
the corresponding term for base-16 would be `senidenary'. `Decimal' is from a
numbering word; the corresponding prefix for six would imply `sextidecimal'.
The `sexa-' prefix is Latin but incorrect and `hexa-' is Greek. <hexit>
/hek'sit/ n. A hexadecimal digit (0-9, A-F). Used by people who claim that
there are only <ten> digits, dammit; no one has ever met a sixteen-fingered
human being, regardless of what some keyboard designs might seem to imply
(see <space-cadet keyboard>). <hidden flag> [scientific computation] n. A
extra option added to a routine without changing the calling sequence. For
example, instead of adding an explicit input variable to instruct a routine
to give extra diagnostic output, the programmer might just add a test for
some otherwise meaningless feature of the existing inputs, such as a negative
mass. Liberal use of hidden flags can make a program very hard to debug and
understand. <high bit> [poss. fr. `high order bit'] n. 1. see <meta bit>.
Also meaning most significant part of something other than a data byte, e.g.
"Spare me the whole saga, just give me the high bit." <high moby> /hie
mohb'ee/ n. The high half of a stock <PDP-10>'s address space; the other half
was of course the low moby. This usage has been generalized in a way that has
outlasted the <PDP-10>; for example, at the 1990 Washington D.C Area Science
Fiction Conclave (DISCLAVE) when a miscommunication resulted in two separate
wakes being held in commemoration of the shutdown of MIT's last <ITS>
machines, the one on the upper floor was dubbed the high moby and the other
the low moby. All parties involved grokked this instantly. see <moby>.
<highly> [scientific computation] adv. The preferred modifier for overstating
an understatement. As in: <highly nonoptimal>, the worst possible way to do
something; <highly nontrivial>, either impossible or requiring a major
research project; <highly nonlinear>, completely erratic and unpredictable;
<highly nontechnical>, drivel written for <luser>s, oversimplified to the
point of being misleading or incorrect (compare <drool-proof paper>). In
other computing cultures, postfixing of <in the extreme> might be preferred.
<hirsute> adj. Occasionally used humorously as a synonym for <hairy>. <HLL>
/aych-el-el/ n. [High-Level Language (as opposed to assembler)] Found
primarily in email and news rather than speech. Rarely, the variants `VHLL'
and `MLL' are found. VHLL = `Very-High-Level Language' and is used to
describe a <BONDAGE-AND-DISCIPLINE LANGUAGE> that the speaker happens to
like; Prolog and Backus's FP are often called VHLLs. `MLL' = `Medium-Level
Language' and is sometimes used half-jokingly to describe C, alluding to its
`structured-assembler' image. see also <languages of choice>. <hog> n.,vt.
Favored term to describe programs or hardware which seem to eat far more than
their share of a system's resources, esp. those which noticeably degrade
general timesharing response. *Not* used of programs which are simply
extremely large or complex or which are merely painfully slow themselves (see
<pig, run like a>). More often than not encountered in qualified forms, e.g.
"memory hog", "core hog", "hog the processor", "hog the disk". Example: "A
controller that never gives up the I/O bus gets killed after the bus hog
timer expires." <hobbit> n. The High Order Bit of a byte; same as the <meta
bit>. <holy wars> [from <USENET>, but may predate it] n. <flame war>s over
<religious issues>. The paper by Danny Cohen that popularized the terms
<big-endian> and <little-endian> in connection with the LSB-first/MSB-first
controversy was entitled `On Holy Wars and a Plea for Peace'. Other perennial
Holy Wars have included: <EMACS> vs. <VI>, my personal computer vs. everyone
else's personal computer, <ITS> vs. <UNIX>, <UNIX> vs. <VMS>, <BSD> UNIX vs.
<USG> UNIX, C vs. Pascal, etc. etc. etc. The characteristic that
distinguishes <holy wars> from normal technical disputes is that (regardless
of the technical merits of the case on either side) most participants spend
their time trying to pass off personal value choices and cultural attachments
as objective technical evaluations. <hook> n. An extraneous piece of software
or hardware included in order to simplify later additions or changes by a
user. For instance, a PDP-10 assembler program might execute a location that
is normally a <JFCL>, but by changing the <JFCL> to a PUSHJ one can insert a
debugging routine at that point. As another example, a simple program that
prints numbers might always print them in base ten, but a more flexible
version would let a variable determine what base to use; setting the variable
to 5 would make the program print numbers in base five. The variable is a
simple hook. An even more flexible program might examine the variable, and
treat a value of 16 or less as the base to use, but treat any other number as
the address of a user-supplied routine for printing a number. This is a very
powerful hook; one can then write a routine to print numbers as roman
numerals, say, or as Hebrew characters, and plug it into the program through
the hook. Often the difference between a good program and a superb one is
that the latter has useful hooks in judiciously chosen places. Both may do
the original job about equally well, but the one with the hooks is much more
flexible for future expansion of capabilities. The term "user exit" is
synonymous but more formal. <home box> n. A hacker's personal machine,
especially one he or she owns. "Yeah? Well, *my* home box runs a full 4.2BSD,
so there!" <hop> n. One file transmission in a series required to get a file
from point A to point B on a store-and-foward network. On such networks
(including <UUCPNET> and <Fidonet>), the important `distance' between
machines is the number of hops in the shortest path between them, rather than
their geographical separation. see <bang path>. <hose> 1. vt. To make
non-functional or greatly degraded in performance, as in "That big
ray-tracing program really hoses the system." see <hosed>. 2. n. A narrow
channel through which data flows under pressure. Generally denotes data paths
in a system that represent performance bottlenecks. 3. n. Cabling, especially
thick Ethernet cable. This is sometimes called "bit hose" or "hosery" (play
on `hosiery') or "etherhose". see also <washing machine>. <hosed> adj. Same
as <down>. Used primarily by UNIX hackers. Humorous: also implies a condition
thought to be relatively easy to reverse. Probably derived from the Canadian
slang `hoser' popularized by the Bob and Doug skits on SCTV. see <hose>. It
is aso widely used of people in the mainstream sense of `in an extremely
unfortunate situation'. There is a story that a Cray which had been
experiencing periodic difficulties once crashed, and it was announced to have
been <hosed>. It was discovered that the crash was due to the disconnection
of some coolant hoses. The problem was corrected, and users were then assured
that everything was OK because the system had been rehosed. [This is an
excellent example of hackish wordplay --- ESR]. <hot key> 1. n. A keystroke
(or combination of keystrokes) that switches environments; esp. used if it
flips between different modes or screens of a full-screen interface. Perhaps
so called because they are always active or `hot'; possibly related to "hot
buttons" in <marketroid>-speak. host environment. 2. v. To switch
environments. <hot spot> n. 1. [primarily C/UNIX programmers, but spreading]
n. In most programs, less than 10% of the code eats 90% of the execution
time; if one were to graph instruction visits versus code addresses, one
would typically see a few huge spikes amidst a lot of low-level noise. Such
spikes are called `hot spots' and are good candidates for micro-optimization
or <hand-hacking>. The term is especially used of tight loops and recursions
in the code's central algorithm, as opposed to (say) initial set-up costs or
large but infrequent I/O operations. see <tune>, <bum>, <hand-hacking>. 2.
The active location of a cursor on a bit-map display. "Put the mouse's hot
spot on the `ON' widget and click the left button." <house wizard> [prob.
from ad-agency lingo, cf. `house freak'] n. A lone hacker occupying a
technical-specialist, R&D or systems position at a commercial shop. A really
effective house wizard can have influence out of all proportion to his/her
ostensible rank and still not have to wear a suit. Used esp. of UNIX experts.
The term <house guru> is equivalent. <HP-SUX> /aych pee suhx/ n. Unflattering
hackerism for HP-UX, Hewlett-Packard's UNIX port. Features some truly unique
bogosities in the filesystem internals and elsewhere that occasionally create
portability problems. HP-UX is often referred to as "hockey-pux" inside HP,
and one outside correspondent claims that the proper pronunciation is
/aych-pee ukkkhhhh/ as though one were spitting. Another such alternate
spelling and pronunciation is "H-PUX" /aych-puhks/. Hackers at HP/Apollo (the
former Apollo Computer that was swallowed by HP in 1989) have been heard to
complain that Mr. Packard should have pushed to have his name first, if for
no other reason than the resulting more accurate form for this acronym.
Compare <buglix>. see also <Telerat>, <sun-stools>, <terminak>. <huff> v. To
compress data using a Huffman code. Various programs that use such methods
have been called `HUFF' or some variant thereof. Oppose <puff>. Compare
<compress>. <humma> excl. A filler word used on various `chat' and `talk'
programs when you had nothing to say but felt that it was important to say
something. The word apparently originated (at least with this definition) on
the MECC Timeshare System (MTS) a now-defunct educational time-sharing system
running in Minnesota during the 1970s and early '80s, but was later sighted
on early UNIX systems. <humungous> /hyoo-muhng'g@s/ alt. <humongous>
(hyoo-mohng'g@s) see <hungus>.