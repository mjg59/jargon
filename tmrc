 2. Following the mass-culture discovery of the Internet in 1994 and
subsequent proliferation of cheap TCP/IP connections, "the network" is
increasingly synonymous with the Internet itself (as it was before the second
wave of wide-area computer networking began around 1980). 3. A fictional
conspiracy of libertarian hacker-subversives and anti-authoritarian
monkeywrenchers described in Robert Anton Wilson's novel "Schro"dinger's
Cat", to which many hackers have subsequently decided they belong (this is an
example of {ha ha only serious}). In sense 1, `the network' is often
abbreviated to `the net'. "Are you on the net?" is a frequent question when
hackers first meet face to face, and "see you on the net!" is a frequent
goodbye. :the X that can be Y is not the true X: Yet another instance of
hackerdom's peculiar attraction to mystical references -- a common humorous
way of making exclusive statements about a class of things. The template is
from the "Tao te Ching": "The Tao which can be spoken of is not the true
Tao." The implication is often that the X is a mystery accessible only to the
enlightened. see the {trampoline} entry for an example, and compare {has the
X nature}. :theology: n. 1. Ironically or humorously used to refer to
{religious issues}. 2. Technical fine points of an abstruse nature, esp.
those where the resolution is of theoretical interest but is relatively
{marginal} with respect to actual use of a design or system. Used esp. around
software issues with a heavy AI or language-design component, such as the
smart-data vs. smart-programs dispute in AI. :theory: n. The consensus, idea,
plan, story, or set of rules that is currently being used to inform a
behavior. This usage is a generalization and (deliberate) abuse of the
technical meaning. "What's the theory on fixing this TECO loss?" "What's the
theory on dinner tonight?" ("Chinatown, I guess.") "What's the current theory
on letting lusers on during the day?" "The theory behind this change is to
fix the following well-known screw...." :thinko: /thing'koh/ n. [by analogy
with `typo'] A momentary, correctable glitch in mental processing, especially
one involving recall of information learned by rote; a bubble in the stream
of consciousness. Syn. {braino}; see also {brain fart}. Compare {mouso}.
:This can't happen: Less clipped variant of {can't happen}. :This time, for
sure!: excl. Ritual affirmation frequently uttered during protracted
debugging sessions involving numerous small obstacles (e.g., attempts to
bring up a UUCP connection). For the proper effect, this must be uttered in a
fruity imitation of Bullwinkle J. Moose. Also heard: "Hey, Rocky! Watch me
pull a rabbit out of my hat!" The {canonical} response is, of course, "But
that trick _never_ works!" see {{hacker humor}}. :thrash: vi. To move wildly
or violently, without accomplishing anything useful. Paging or swapping
systems that are overloaded waste most of their time moving data into and out
of core (rather than performing useful computation) and are therefore said to
thrash. Someone who keeps changing his mind (esp. about what to work on next)
is said to be thrashing. A person frantically trying to execute too many
tasks at once (and not spending enough time on any single task) may also be
described as thrashing. Compare {multitask}. :thread: n. [Usenet, GEnie,
CompuServe] Common abbreviation of `topic thread', a more or less continuous
chain of postings on a single topic. To `follow a thread' is to read a series
of Usenet postings sharing a common subject or (more correctly) which are
connected by Reference headers. The better newsreaders can present news in
thread order automatically. Not to be confused with the techspeak sense of
`thread', e.g. a lightweight process. Interestingly, this is far from a
neologism. The OED says: "That which connects the successive points in
anything, esp. a narrative, train of thought, or the like; the sequence of
events or ideas continuing throughout the whole course of anything;"
Citations are given going back to 1642! :three-finger salute: n. Syn. {Vulcan
nerve pinch}. :throwaway account: n. 1. An inexpensive Internet account
purchased on a legitimate {ISP} for the the sole purpose of spewing {spam}.
2. An inexpensive Internet account obtained for the sole purpose of doing
something which requires a valid email address but being able to ignore spam
since the user will not look at the account again. :thud: n. 1. Yet another
{metasyntactic variable} (see {foo}). It is reported that at CMU from the
mid-1970s the canonical series of these was `foo', `bar', `thud', `blat'. 2.
Rare term for the hash character, `#' (ASCII 0100011). see {ASCII} for other
synonyms. :thumb: n. The slider on a window-system scrollbar. So called
because moving it allows you to browse through the contents of a text window
in a way analogous to thumbing through a book. :thundering herd problem:
Scheduler thrashing. This can happen under Unix when you have a number of
processes that are waiting on a single event. When that event (a connection
to the web server, say) happens, every process which could possibly handle
the event is awakened. In the end, only one of those processes will actually
be able to do the work, but, in the meantime, all the others wake up and
contend for CPU time before being put back to sleep. Thus the system thrashes
briefly while a herd of processes thunders through. If this starts to happen
many times per second, the performance impact can be significant. :thunk:
/thuhnk/ n. 1. [obs.]"A piece of coding which provides an address", according
to P. Z. Ingerman, who invented thunks in 1961 as a way of binding actual
parameters to their formal definitions in Algol-60 procedure calls. If a
procedure is called with an expression in the place of a formal parameter,
the compiler generates a thunk which computes the expression and leaves the
address of the result in some standard location. 2. Later generalized into:
an expression, frozen together with its environment, for later evaluation if
and when needed (similar to what in techspeak is called a `closure'). The
process of unfreezing these thunks is called `forcing'. 3. A {stubroutine},
in an overlay programming environment, that loads and jumps to the correct
overlay. Compare {trampoline}. 4. People and activities scheduled in a
thunklike manner. "It occurred to me the other day that I am rather
accurately modeled by a thunk -- I frequently need to be forced to
completion." -- paraphrased from a {plan file}. Historical note: There are a
couple of onomatopoeic myths circulating about the origin of this term. The
most common is that it is the sound made by data hitting the stack; another
holds that the sound is that of the data hitting an accumulator. Yet another
suggests that it is the sound of the expression being unfrozen at
argument-evaluation time. In fact, according to the inventors, it was coined
after they realized (in the wee hours after hours of discussion) that the
type of an argument in Algol-60 could be figured out in advance with a little
compile-time thought, simplifying the evaluation machinery. In other words,
it had `already been thought of'; thus it was christened a `thunk', which is
"the past tense of `think' at two in the morning". :tick: n. 1. A {jiffy}
(sense 1). 2. In simulations, the discrete unit of time that passes between
iterations of the simulation mechanism. In AI applications, this amount of
time is often left unspecified, since the only constraint of interest is the
ordering of events. This sort of AI simulation is often pejoratively referred
to as `tick-tick-tick' simulation, especially when the issue of simultaneity
of events with long, independent chains of causes is {handwave}d. 3. In the
FORTH language, a single quote character. :tick-list features: n. [Acorn
Computers] Features in software or hardware that customers insist on but
never use (calculators in desktop TSRs and that sort of thing). The American
equivalent would be `checklist features', but this jargon sense of the phrase
has not been reported. :tickle a bug: vt. To cause a normally hidden bug to
manifest itself through some known series of inputs or operations. "You can
tickle the bug in the Paradise VGA card's highlight handling by trying to set
bright yellow reverse video." :tiger team: n. [U.S. military jargon] 1.
Originally, a team (of {sneaker}s) whose purpose is to penetrate security,
and thus test security measures. These people are paid professionals who do
hacker-type tricks, e.g., leave cardboard signs saying "bomb" in critical
defense installations, hand-lettered notes saying "Your codebooks have been
stolen" (they usually haven't been) inside safes, etc. After a successful
penetration, some high-ranking security type shows up the next morning for a
`security review' and finds the sign, note, etc., and all hell breaks loose.
Serious successes of tiger teams sometimes lead to early retirement for base
commanders and security officers (see the {patch} entry for an example). 2.
Recently, and more generally, any official inspection team or special
{firefighting} group called in to look at a problem. A subset of tiger teams
are professional {cracker}s, testing the security of military computer
installations by attempting remote attacks via networks or supposedly
`secure' comm channels. Some of their escapades, if declassified, would
probably rank among the greatest hacks of all times. The term has been
adopted in commercial computer-security circles in this more specific sense.
:time bomb: n. A subspecies of {logic bomb} that is triggered by reaching
some preset time, either once or periodically. There are numerous legends
about time bombs set up by programmers in their employers' machines, to go
off if the programmer is fired or laid off and is not present to perform the
appropriate suppressing action periodically. Interestingly, the only such
incident for which we have been pointed to documentary evidence took place in
the Soviet Union in 1986! A disgruntled programmer at the Volga Automobile
Plant (where the Fiat clones called Ladas were manufactured) planted a time
bomb which, a week after he'd left on vacation, stopped the entire main
assembly line for a day. The case attracted lots of attention in the Soviet
Union because it was the first cracking case to make it to court there. The
perpetrator got a suspended sentence of 3 years in jail and was barred from
future work as a programmer. :time sink: n. [poss. by analogy with `heat
sink' or `current sink'] A project that consumes unbounded amounts of time.
:time T: /ti:m T/ n. 1. An unspecified but usually well-understood time,
often used in conjunction with a later time T+1. "We'll meet on campus at
time T or at Louie's at time T+1" means, in the context of going out for
dinner: "We can meet on campus and go to Louie's, or we can meet at Louie's
itself a bit later." (Louie's was a Chinese restaurant in Palo Alto that was
a favorite with hackers.) Had the number 30 been used instead of the number
1, it would have implied that the travel time from campus to Louie's is 30
minutes; whatever time T is (and that hasn't been decided on yet), you can
meet half an hour later at Louie's than you could on campus and end up eating
at the same time. see also {since time T equals minus infinity}.
:times-or-divided-by: quant. [by analogy with `plus-or-minus'] Term
occasionally used when describing the uncertainty associated with a
scheduling estimate, for either humorous or brutally honest effect. For a
software project, the scheduling uncertainty factor is usually at least 2.
:TINC: // [Usenet] Abbreviation: "There Is No Cabal". see {backbone cabal}
and {NANA}, but note that this abbreviation did not enter use until long
after the dispersal of the backbone cabal. :Tinkerbell program: n. [Great
Britain] A monitoring program used to scan incoming network calls and
generate alerts when calls are received from particular sites, or when logins
are attempted using certain IDs. Named after `Project Tinkerbell', an
experimental phone-tapping program developed by British Telecom in the early
1980s. :TINLC: // Abbreviation: "There Is No Lumber Cartel". see {Lumber
Cartel}. TINLC is a takeoff on {TINC}. :tip of the ice-cube: n. // [IBM] The
visible part of something small and insignificant. Used as an ironic comment
in situations where `tip of the iceberg' might be appropriate if the subject
were at all important. :tired iron: n. [IBM] Hardware that is perfectly
functional but far enough behind the state of the art to have been superseded
by new products, presumably with sufficient improvement in bang-per-buck that
the old stuff is starting to look a bit like a {dinosaur}. :tits on a
keyboard: n. Small bumps on certain keycaps to keep touch-typists registered.
Usually on the `5' of a numeric keypad, and on the `F' and `J' of a {QWERTY}
keyboard; but older Macs, perverse as usual, had them on the `D' and `K' keys
(this changed in 1999). :TLA: /T-L-A/ n. [Three-Letter Acronym] 1.
Self-describing abbreviation for a species with which computing terminology
is infested. 2. Any confusing acronym. Examples include MCA, FTP, SNA, CPU,
MMU, SCCS, DMU, FPU, NNTP, TLA. People who like this looser usage argue that
not all TLAs have three letters, just as not all four-letter words have four
letters. One also hears of `ETLA' (Extended Three-Letter Acronym, pronounced
/ee tee el ay/) being used to describe four-letter acronyms. The term `SFLA'
(Stupid Four-Letter Acronym) has also been reported. see also {YABA}. The
self-effacing phrase "TDM TLA" (Too Damn Many...) is often used to bemoan the
plethora of TLAs in use. In 1989, a random of the journalistic persuasion
asked hacker Paul Boutin "What do you think will be the biggest problem in
computing in the 90s?" Paul's straight-faced response: "There are only 17,000
three-letter acronyms." (To be exact, there are 26^3 = 17,576.) There is
probably some karmic justice in the fact that Paul Boutin subsequently became
a journalist. :(TM): // [Usenet] ASCII rendition of the trademark-superscript
symbol appended to phrases that the author feels should be recorded for
posterity, perhaps in future editions of this lexicon. Sometimes used
ironically as a form of protest against the recent spate of software and
algorithm patents and `look and feel' lawsuits. see also {UN*X}. :TMRC:
/tmerk'/ n. The Tech Model Railroad Club at MIT, one of the wellsprings of
hacker culture. The 1959 "Dictionary of the TMRC Language" compiled by Peter
Samson included several terms that became basics of the hackish vocabulary
(see esp. {foo}, {mung}, and {frob}). By 1962, TMRC's legendary layout was
already a marvel of complexity and has grown in the years since. All the
features described here were still present when the old layout was
decomissioned in 1998 just before the demolition of MIT Building 20, and will
almost certainly be retained when the old layout is rebuilt (expected in
2003). The control system alone featured about 1200 relays. There were {scram
switch}es located at numerous places around the room that could be thwacked
if something undesirable was about to occur, such as a train going full-bore
at an obstruction. Another feature of the system was a digital clock on the
dispatch board, which was itself something of a wonder in those bygone days
before cheap LEDs and seven-segment displays. When someone hit a scram switch
the clock stopped and the display was replaced with the word `FOO'; at TMRC
the scram switches are therefore called `foo switches'. Steven Levy, in his
book "Hackers" (see the {Bibliography} in Appendix C), gives a stimulating
account of those early years.