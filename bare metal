 BARE METAL n. 1. New computer hardware, unadorned with such snares and
delusions as an OPERATING SYSTEM, HLL or even assembler. Commonly in the
phrase "programming on the bare metal" which refers to the arduous work of
BIT-BASHING needed to create these basic tools for a new machine. Real
bare-metal programming involves things like building boot proms and BIOS
chips, implementing basic monitors used to test device drivers, and writing
the assemblers that will be used to write the compiler back ends that will
give the new machine a real development environment. 2. The same phrase is
also used to describe a style of HAND-HACKING that relies on bit-level
peculiarities of a particular hardware design, esp. tricks for speed and
space optimization that rely on crocks like overlapping opcodes (or, in one
famous case, interleaving of opcodes on a magnetic drum to minimize fetch
delays due to the device's rotational latency). This sort of thing has become
less common as the relative costs of programming time and machine resources
have changed, but is still found in heavily constrained environments like
industrial embedded systems. see REAL PROGRAMMER.