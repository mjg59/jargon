 1. Among people working on virtual reality and {cyberspace} interfaces, an
"avatar" is an icon or representation of a user in a shared virtual reality.
The term is sometimes used on {MUD}s. 2. [CMU, Tektronix] {root},
{superuser}. There are quite a few Unix machines on which the name of the
superuser account is `avatar' rather than `root'. This quirk was originated
by a CMU hacker who found the terms `root' and `superuser' unimaginative, and
thought `avatar' might better impress people with the \responsibility they
were accepting. :awk: /awk/ 1. n. [Unix techspeak] An interpreted language
for massaging text data developed by Alfred Aho, Peter Weinberger, and Brian
Kernighan (the name derives from their initials). It is characterized by
C-like syntax, a declaration-free approach to variable typing and
declarations, associative arrays, and field-oriented text processing. see
also {Perl}. 2. n. Editing term for an expression awkward to manipulate
through normal {regexp} facilities (for example, one containing a {newline}).
3. vt. To process data using `awk(1)'. = B = ===== :back door: n. A hole in
the security of a system deliberately left in place by designers or
maintainers. The motivation for such holes is not always sinister; some
operating systems, for example, come out of the box with privileged accounts
intended for use by field service technicians or the vendor's maintenance
programmers. Syn. {trap door}; may also be called a `wormhole'. see also
{iron box}, {cracker}, {worm}, {logic bomb}. Historically, back doors have
often lurked in systems longer than anyone expected or planned, and a few
have become widely known. Ken Thompson's 1983 Turing Award lecture to the ACM
admitted the existence of a back door in early Unix versions that may have
qualified as the most fiendishly clever security hack of all time. In this
scheme, the C compiler contained code that would recognize when the `login'
command was being recompiled and insert some code recognizing a password
chosen by Thompson, giving him entry to the system whether or not an account
had been created for him. Normally such a back door could be removed by
removing it from the source code for the compiler and recompiling the
compiler. But to recompile the compiler, you have to _use_ the compiler -- so
Thompson also arranged that the compiler would _recognize when it was
compiling a version of itself_, and insert into the recompiled compiler the
code to insert into the recompiled `login' the code to allow Thompson entry
-- and, of course, the code to recognize itself and do the whole thing again
the next time around! And having done this once, he was then able to
recompile the compiler from the original sources; the hack perpetuated itself
invisibly, leaving the back door in place and active but with no trace in the
sources. The talk that suggested this truly moby hack was published as
"Reflections on Trusting Trust", "Communications of the ACM 27", 8 (August
1984), pp. 761-763 (text available at `http://www.acm.org/classics'). Ken
Thompson has since confirmed that this hack was implemented and that the
Trojan Horse code did appear in the login binary of a Unix Support group
machine. Ken says the crocked compiler was never distributed. Your editor has
heard two separate reports that suggest that the crocked login did make it
out of Bell Labs, notably to BBN, and that it enabled at least one late-night
login across the network by someone using the login name `kt'. :backbone
cabal: n. A group of large-site administrators who pushed through the {Great
Renaming} and reined in the chaos of {Usenet} during most of the 1980s.
During most of its lifetime, the Cabal (as it was sometimes capitalized)
steadfastly denied its own existence; it was almost obligatory for anyone
privy to their secrets to respond "There is no Cabal" whenever the existence
or activities of the group were speculated on in public. The result of this
policy was an attractive aura of mystery. Even a decade after the cabal
{mailing list} disbanded in late 1988 following a bitter internal catfight,
many people believed (or claimed to believe) that it had not actually
disbanded but only gone deeper underground with its power intact. This belief
became a model for various paranoid theories about various Cabals with dark
nefarious objectives beginning with taking over the USENET or Internet. These
paranoias were later satirized in ways that took on a life of their own. see
{Eric Conspiracy} for one example. see {NANA} for the subsequent history of
"the Cabal". :backbone site: n. A key Usenet and email site; one that
processes a large amount of third-party traffic, especially if it is the home
site of any of the regional coordinators for the Usenet maps. Notable
backbone sites as of early 1993, when this sense of the term was beginning to
pass out of general use due to wide availability of cheap Internet
connections, included uunet and the mail machines at Rutgers University, UC
Berkeley, {DEC}'s Western Research Laboratories, Ohio State University, and
the University of Texas. Compare {rib site}, {leaf site}. [1996 update: This
term is seldom heard any more. The UUCP network world that gave it meaning
has nearly disappeared; everyone is on the Internet now and network traffic
is distributed in very different patterns. --ESR] :backgammon:: see {bignum}
(sense 3), {moby} (sense 4), and {pseudoprime}. :background: n.,adj.,vt. To
do a task `in background' is to do it whenever {foreground} matters are not
claiming your undivided attention, and `to background' something means to
relegate it to a lower priority. "For now, we'll just print a list of nodes
and links; I'm working on the graph-printing problem in background." Note
that this implies ongoing activity but at a reduced level or in spare time,
in contrast to mainstream `back burner' (which connotes benign neglect until
some future resumption of activity). Some people prefer to use the term for
processing that they have queued up for their unconscious minds (a tack that
one can often fruitfully take upon encountering an obstacle in creative
work). Compare {amp off}, {slopsucker}. Technically, a task running in
background is detached from the terminal where it was started (and often
running at a lower priority); oppose {foreground}. Nowadays this term is
primarily associated with {{Unix}}, but it appears to have been first used in
this sense on OS/360. :backreference: n. 1. In a regular expression or
pattern match, the text which was matched within grouping parentheses
parentheses. 2. The part of the pattern which refers back to the matched
text. 3. By extension, anything which refers back to something which has been
seen or discussed before. "When you said `she' just now, who were you
backreferencing?" :backronym: n. [portmanteau of back + acronym] A word
interpreted as an acronym that was not originally so intended. Examples are
given under {BASIC}, {recursive acronym} (Cygnus), {Acme}, and {mung}.
Discovering backronyms is a common form of wordplay among hackers. :backspace
and overstrike: interj. Whoa! Back up. Used to suggest that someone just said
or did something wrong. Common among APL programmers. :backward
combatability: /bak'w*rd k*m-bat'*-bil'*-tee/ n. [CMU, Tektronix: from
`backward compatibility'] A property of hardware or software revisions in
which previous protocols, formats, layouts, etc. are irrevocably discarded in
favor of `new and improved' protocols, formats, and layouts, leaving the
previous ones not merely deprecated but actively defeated. (Too often, the
old and new versions cannot definitively be distinguished, such that
lingering instances of the previous ones yield crashes or other infelicitous
effects, as opposed to a simple "version mismatch" message.) A backwards
compatible change, on the other hand, allows old versions to coexist without
crashes or error messages, but too many major changes incorporating elaborate
backwards compatibility processing can lead to extreme {software bloat}. see
also {flag day}. :BAD: /B-A-D/ adj. [IBM: acronym, `Broken As Designed'] Said
of a program that is {bogus} because of bad design and misfeatures rather
than because of bugginess. see {working as designed}. :Bad and Wrong: adj.
[Durham, UK] Said of something that is both badly designed and wrongly
executed. This common term is the prototype of, and is used by contrast with,
three less common terms - Bad and Right (a kludge, something ugly but
functional); Good and Wrong (an overblown GUI or other attractive nuisance);
and (rare praise) Good and Right. These terms entered common use at Durham
c.1994 and may have been imported from elsewhere. There are standard
abbreviations: they start with B&R, a typo for "Bad and Wrong". Consequently,
B&W is actually "Bad and Right", G&R = "Good and Wrong", and G&W = "Good and
Right". Compare {evil and rude}, {Good Thing}, {Bad Thing}. :Bad Thing: n.
[from the 1930 Sellar & Yeatman parody "1066 And All That"] Something that
can't possibly result in improvement of the subject. This term is always
capitalized, as in "Replacing all of the 9600-baud modems with bicycle
couriers would be a Bad Thing". Oppose {Good Thing}. British correspondents
confirm that {Bad Thing} and {Good Thing} (and prob. therefore {Right Thing}
and {Wrong Thing}) come from the book referenced in the etymology, which
discusses rulers who were Good Kings but Bad Things. This has apparently
created a mainstream idiom on the British side of the pond. Compare {Bad and
Wrong}. :bag on the side: n. [prob. originally related to a colostomy bag] An
extension to an established hack that is supposed to add some functionality
to the original. Usually derogatory, implying that the original was being
overextended and should have been thrown away, and the new product is ugly,
inelegant, or bloated. Also v. phrase, `to hang a bag on the side [of]'.
"C++? That's just a bag on the side of C ...." "They want me to hang a bag on
the side of the accounting system." :bagbiter: /bag'bi:t-*r/ n. 1. Something,
such as a program or a computer, that fails to work, or works in a remarkably
clumsy manner. "This text editor won't let me make a file with a line longer
than 80 characters! What a bagbiter!" 2. A person who has caused you some
trouble, inadvertently or otherwise, typically by failing to program the
computer properly. Synonyms: {loser}, {cretin}, {chomper}. 3. `bite the bag'
vi. To fail in some manner. "The computer keeps crashing every five minutes."
"Yes, the disk controller is really biting the bag." The original loading of
these terms was almost undoubtedly obscene, possibly referring to a douche
bag or the scrotum (we have reports of "Bite the douche bag!" being used as
an insult at MIT 1970-1976), but in their current usage they have become
almost completely sanitized. ITS's `lexiphage' program was the first and to
date only known example of a program _intended_ to be a bagbiter. :bagbiting:
adj. Having the quality of a {bagbiter}. "This bagbiting system won't let me
compute the factorial of a negative number." Compare {losing}, {cretinous},
{bletcherous}, `barfucious' (under {barfulous}) and `chomping' (under
{chomp}). :balloonian variable: n. [Commodore users; perh. a deliberate
phonetic mangling of `boolean variable'?] Any variable that doesn't actually
hold or control state, but must nevertheless be declared, checked, or set. A
typical balloonian variable started out as a flag attached to some
environment feature that either became obsolete or was planned but never
implemented. Compatibility concerns (or politics attached to same) may
require that such a flag be treated as though it were {live}. :bamf: /bamf/
1. [from X-Men comics; originally "bampf"] interj. Notional sound made by a
person or object teleporting in or out of the hearer's vicinity. Often used
in {virtual reality} (esp. {MUD}) electronic {fora} when a character wishes
to make a dramatic entrance or exit. 2. The sound of magical transformation,
used in virtual reality {fora} like MUDs. 3. In MUD circles, "bamf" is also
used to refer to the act by which a MUD server sends a special notification
to the MUD client to switch its connection to another server ("I'll set up
the old site to just bamf people over to our new location."). 4. Used by
MUDders on occasion in a more general sense related to sense 3, to refer to
directing someone to another location or resource ("A user was asking about
some technobabble so I bamfed them to
http://www.ccil.org/jargon/jargon.html.") :banana label: n. The labels often
used on the sides of {macrotape} reels, so called because they are shaped
roughly like blunt-ended bananas. This term, like macrotapes themselves, is
still current but visibly headed for obsolescence. :banana problem: n. [from
the story of the little girl who said "I know how to spell `banana', but I
don't know when to stop"]. Not knowing where or when to bring a production to
a close (compare {fencepost error}). One may say `there is a banana problem'
of an algorithm with poorly defined or incorrect termination conditions, or
in discussing the evolution of a design that may be succumbing to featuritis
(see also {creeping elegance}, {creeping featuritis}). see item 176 under
{HAKMEM}, which describes a banana problem in a {Dissociated Press}
implementation. Also, see {one-banana problem} for a superficially similar
but unrelated usage. :binary four: n. [USENET] The finger, in the sense of
`digitus impudicus'. This comes from an analogy between binary and the hand,
i.e. 1=00001=thumb, 2=00010=index finger, 3=00011=index and thumb, 4=00100.
Considered silly. Prob. from humorous derivative of {finger}, sense 4.
:bandwidth: n. 1. Used by hackers (in a generalization of its technical
meaning) as the volume of information per unit time that a computer, person,
or transmission medium can handle. "Those are amazing graphics, but I missed
some of the detail -- not enough bandwidth, I guess." Compare
{low-bandwidth}. 2. Attention span. 3. On {Usenet}, a measure of network
capacity that is often wasted by people complaining about how items posted by
others are a waste of bandwidth. :bang: 1. n. Common spoken name for `!'
(ASCII 0100001), especially when used in pronouncing a {bang path} in spoken
hackish. In {elder days} this was considered a CMUish usage, with MIT and
Stanford hackers preferring {excl} or {shriek}; but the spread of Unix has
carried `bang' with it (esp. via the term {bang path}) and it is now
certainly the most common spoken name for `!'. Note that it is used
exclusively for non-emphatic written `!'; one would not say "Congratulations
bang" (except possibly for humorous purposes), but if one wanted to specify
the exact characters `foo!' one would speak "Eff oh oh bang". see {shriek},
{{ASCII}}. 2. interj. An exclamation signifying roughly "I have achieved
enlightenment!", or "The dynamite has cleared out my brain!" Often used to
acknowledge that one has perpetrated a {thinko} immediately after one has
been called on it. :bang on: vt. To stress-test a piece of hardware or
software: "I banged on the new version of the simulator all day yesterday and
it didn't crash once. I guess it is ready for release." The term {pound on}
is synonymous. :bang path: n. An old-style UUCP electronic-mail address
specifying hops to get from some assumed-reachable location to the addressee,
so called because each {hop} is signified by a {bang} sign. Thus, for
example, the path ...!bigsite!foovax!barbox!me directs people to route their
mail to machine bigsite (presumably a well-known location accessible to
everybody) and from there through the machine foovax to the account of user
me on barbox. In the bad old days of not so long ago, before autorouting
mailers became commonplace, people often published compound bang addresses
using the { } convention (see {glob}) to give paths from _several_ big
machines, in the hopes that one's correspondent might be able to get mail to
one of them reliably (example: ...!{seismo, ut-sally,
ihnp4}!rice!beta!gamma!me). Bang paths of 8 to 10 hops were not uncommon in
1981. Late-night dial-up UUCP links would cause week-long transmission times.
Bang paths were often selected by both transmission time and reliability, as
messages would often get lost. see {{Internet address}}, {the network}, and
{sitename}. :banner: n. 1. The title page added to printouts by most print
spoolers (see {spool}). Typically includes user or account ID information in
very large character-graphics capitals. Also called a `burst page', because
it indicates where to burst (tear apart) fanfold paper to separate one user's
printout from the next. 2. A similar printout generated (typically on
multiple pages of fan-fold paper) from user-specified text, e.g., by a
program such as Unix's `banner({1,6})'. 3. On interactive software, a first
screen containing a logo and/or author credits and/or a copyright notice.
:bar: /bar/ n. 1. The second {metasyntactic variable}, after {foo} and before
{baz}. "Suppose we have two functions: FOO and BAR. FOO calls BAR...." 2.
Often appended to {foo} to produce {foobar}. :bare metal: n. 1. New computer
hardware, unadorned with such snares and delusions as an {operating system},
an {HLL}, or even assembler. Commonly used in the phrase `programming on the
bare metal', which refers to the arduous work of {bit bashing} needed to
create these basic tools for a new machine. Real bare-metal programming
involves things like building boot proms and BIOS chips, implementing basic
monitors used to test device drivers, and writing the assemblers that will be
used to write the compiler back ends that will give the new machine a real
development environment. 2. `Programming on the bare metal' is also used to
describe a style of {hand-hacking} that relies on bit-level peculiarities of
a particular hardware design, esp. tricks for speed and space optimization
that rely on crocks such as overlapping instructions (or, as in the famous
case described in {The Story of Mel} (in Appendix A), interleaving of opcodes
on a magnetic drum to minimize fetch delays due to the device's rotational
latency). This sort of thing has become less common as the relative costs of
programming time and machine resources have changed, but is still found in
heavily constrained environments such as industrial embedded systems, and in
the code of hackers who just can't let go of that low-level control. see
{Real Programmer}. In the world of personal computing, bare metal programming
(especially in sense 1 but sometimes also in sense 2) is often considered a
{Good Thing}, or at least a necessary evil (because these machines have often
been sufficiently slow and poorly designed to make it necessary; see
{ill-behaved}). There, the term usually refers to bypassing the BIOS or OS
interface and writing the application to directly access device registers and
machine addresses. "To get 19.2 kilobaud on the serial port, you need to get
down to the bare metal." People who can do this sort of thing well are held
in high regard. :barf: /barf/ n.,v. [from mainstream slang meaning `vomit']
1. interj. Term of disgust. This is the closest hackish equivalent of the
Valspeak "gag me with a spoon". (Like, euwww!) see {bletch}. 2. vi. To say
"Barf!" or emit some similar expression of disgust. "I showed him my latest
hack and he barfed" means only that he complained about it, not that he
literally vomited. 3. vi. To fail to work because of unacceptable input,
perhaps with a suitable error message, perhaps not. Examples: "The division
operation barfs if you try to divide by 0." (That is, the division operation
checks for an attempt to divide by zero, and if one is encountered it causes
the operation to fail in some unspecified, but generally obvious, manner.)
"The text editor barfs if you try to read in a new file before writing out
the old one." see {choke}, {gag}. In Commonwealth Hackish, `barf' is
generally replaced by `puke' or `vom'. {barf} is sometimes also used as a
{metasyntactic variable}, like {foo} or {bar}. :barfmail: n. Multiple {bounce
message}s accumulating to the level of serious annoyance, or worse. The sort
of thing that happens when an inter-network mail gateway goes down or wonky.
:barfulation: /bar`fyoo-lay'sh*n/ interj. Variation of {barf} used around the
Stanford area. An exclamation, expressing disgust. On seeing some
particularly bad code one might exclaim, "Barfulation! Who wrote this, Quux?"
:barfulous: /bar'fyoo-l*s/ adj. (alt. `barfucious', /bar-fyoo-sh*s/) Said of
something that would make anyone barf, if only for esthetic reasons. :barn:
n. [uncommon; prob. from the nuclear military] An unexpectedly large quantity
of something: a unit of measurement. "Why is /var/adm taking up so much
space?" "The logs have grown to several barns." The source of this is clear:
when physicists were first studying nuclear interactions, the probability was
thought to be proportional to the cross-sectional area of the nucleus (this
probability is still called the cross-section). Upon experimenting, they
discovered the interactions were far more probable than expected; the nuclei
were `as big as a barn'. The units for cross-sections were christened Barns,
(10^-24 cm^2) and the book containing cross-sections has a picture of a barn
on the cover. :barney: n. In Commonwealth hackish, `barney' is to {fred}
(sense #1) as {bar} is to {foo}. That is, people who commonly use `fred' as
their first metasyntactic variable will often use `barney' second. The
reference is, of course, to Fred Flintstone and Barney Rubble in the
Flintstones cartoons. :baroque: adj. Feature-encrusted; complex; gaudy;
verging on excessive. Said of hardware or (esp.) software designs, this has
many of the connotations of {elephantine} or {monstrosity} but is less
extreme and not pejorative in itself. "Metafont even has features to
introduce random variations to its letterform output. Now _that_ is baroque!"
see also {rococo}. :BASIC: /bay'-sic/ n. A programming language, originally
designed for Dartmouth's experimental timesharing system in the early 1960s,
which has since become the leading cause of brain damage in proto-hackers.
Edsger W. Dijkstra observed in "Selected Writings on Computing: A Personal
Perspective" that "It is practically impossible to teach good programming
style to students that have had prior exposure to BASIC: as potential
programmers they are mentally mutilated beyond hope of regeneration." This is
another case (like {Pascal}) of the cascading lossage that happens when a
language deliberately designed as an educational toy gets taken too
seriously. A novice can write short BASIC programs (on the order of 10-20
lines) very easily; writing anything longer (a) is very painful, and (b)
encourages bad habits that will make it harder to use more powerful languages
well. This wouldn't be so bad if historical accidents hadn't made BASIC so
common on low-end micros. As it is, it ruins thousands of potential wizards a
year. [1995: Some languages called `BASIC' aren't quite this nasty any more,
having acquired Pascal- and C-like procedures and control structures and shed
their line numbers. --ESR] Note: the name is commonly parsed as Beginner's
All-purpose Symbolic Instruction Code, but this is a {backronym}. BASIC was
originally named Basic, simply because it was a simple and basic programming
language. Because most programming language names were in fact acronyms,
BASIC was often capitalized just out of habit or to be silly. No acronym for
BASIC originally existed or was intended (as one can verify by reading texts
through the early 1970s). Later, around the mid-1970s, people began to make
up backronyms for BASIC because they weren't sure. Beginner's All-purpose
Symbolic Instruction Code is the onethat caught on. :batbelt: n. Many hackers
routinely hang numerous devices such as pagers, cell-phones, personal
organizers, leatherman multitools, pocket knives, flashlights,
walkie-talkies, even miniature computers from their belts. When many of these
devices are worn at once, the hacker's belt somewhat resembles Batman's
utility belt; hence it is referred to as a batbelt. :batch: adj. 1.
Non-interactive. Hackers use this somewhat more loosely than the traditional
technical definitions justify; in particular, switches on a normally
interactive program that prepare it to receive non-interactive command input
are often referred to as `batch mode' switches. A `batch file' is a series of
instructions written to be handed to an interactive program running in batch
mode. 2. Performance of dreary tasks all at one sitting. "I finally sat down
in batch mode and wrote out checks for all those bills; I guess they'll turn
the electricity back on next week..." 3. `batching up': Accumulation of a
number of small tasks that can be lumped together for greater efficiency.
"I'm batching up those letters to send sometime" "I'm batching up bottles to
take to the recycling center." :bathtub curve: n. Common term for the curve
(resembling an end-to-end section of one of those claw-footed antique
bathtubs) that describes the expected failure rate of electronics with time:
initially high, dropping to near 0 for most of the system's lifetime, then
rising again as it `tires out'. see also {burn-in period}, {infant
mortality}. :baud: /bawd/ n. [simplified from its technical meaning] n. Bits
per second. Hence kilobaud or Kbaud, thousands of bits per second. The
technical meaning is `level transitions per second'; this coincides with bps
only for two-level modulation with no framing or stop bits. Most hackers are
aware of these nuances but blithely ignore them. Historical note: `baud' was
originally a unit of telegraph signalling speed, set at one pulse per second.
It was proposed at the International Telegraph Conference of 1927, and named
after J.M.E. Baudot (1845-1903), the French engineer who constructed the
first successful teleprinter. :baud barf: /bawd barf/ n. The garbage one gets
on the monitor when using a modem connection with some protocol setting (esp.
line speed) incorrect, or when someone picks up a voice extension on the same
line, or when really bad line noise disrupts the connection. Baud barf is not
completely {random}, by the way; hackers with a lot of serial-line experience
can usually tell whether the device at the other end is expecting a higher or
lower speed than the terminal is set to. _Really_ experienced ones can
identify particular speeds. :baz: /baz/ n. 1. The third {metasyntactic
variable} "Suppose we have three functions: FOO, BAR, and BAZ. FOO calls BAR,
which calls BAZ...." (see also {fum}) 2. interj. A term of mild annoyance. In
this usage the term is often drawn out for 2 or 3 seconds, producing an
effect not unlike the bleating of a sheep; /baaaaaaz/. 3. Occasionally
appended to {foo} to produce `foobaz'. Earlier versions of this lexicon
derived `baz' as a Stanford corruption of {bar}. However, Pete Samson
(compiler of the {TMRC} lexicon) reports it was already current when he
joined TMRC in 1958. He says "It came from "Pogo". Albert the Alligator, when
vexed or outraged, would shout `Bazz Fazz!' or `Rowrbazzle!' The club layout
was said to model the (mythical) New England counties of Rowrfolk and Bassex
(Rowrbazzle mingled with (Norfolk/Suffolk/Middlesex/Essex)." :bazaar: n.,adj.
In 1997, after contemplating the success of {Linux} for three years, the
Jargon File's own editor ESR wrote an analytical paper on hacker culture and
development models titled The Cathedral and the Bazaar
(http://www.tuxedo.org/~esr/writings/cathedral-bazaar/). The title metaphor
caught on (see also {cathedral}), and the style of development typical in the
Linux community is often referred to as the bazaar mode. Its characteristics
include releasing code early and often, and actively seeking the largest
possible pool of peer reviewers. :bboard: /bee'bord/ n. [contraction of
`bulletin board'] 1. Any electronic bulletin board; esp. used of {BBS}
systems running on personal micros, less frequently of a Usenet {newsgroup}
(in fact, use of this term for a newsgroup generally marks one either as a
{newbie} fresh in from the BBS world or as a real old-timer predating
Usenet). 2. At CMU and other colleges with similar facilities, refers to
campus-wide electronic bulletin boards. 3. The term `physical bboard' is
sometimes used to refer to an old-fashioned, non-electronic
cork-and-thumbtack memo board. At CMU, it refers to a particular one outside
the CS Lounge. In either of senses 1 or 2, the term is usually prefixed by
the name of the intended board (`the Moonlight Casino bboard' or `market
bboard'); however, if the context is clear, the better-read bboards may be
referred to by name alone, as in (at CMU) "Don't post for-sale ads on
general". :BBS: /B-B-S/ n. [abbreviation, `Bulletin Board System'] An
electronic bulletin board system; that is, a message database where people
can log in and leave broadcast messages for others grouped (typically) into
{topic group}s. Thousands of local BBS systems are in operation throughout
the U.S., typically run by amateurs for fun out of their homes on MS-DOS
boxes with a single modem line each. Fans of Usenet and Internet or the big
commercial timesharing bboards such as CompuServe and GEnie tend to consider
local BBSes the low-rent district of the hacker culture, but they serve a
valuable function by knitting together lots of hackers and users in the
personal-micro world who would otherwise be unable to exchange code at all.
see also {bboard}. :BCPL: // n. [acronym, `Basic Combined Programming
Language') A programming language developed by Martin Richards in Cambridge
in 1967. It is remarkable for its rich syntax, small size of compiler (it can
be run in 16k) and extreme portability. It reached break-even point at a very
early stage, and was the language in which the original {hello world} program
was written. It has been ported to so many different systems that its creator
confesses to having lost count. It has only one data type (a machine word)
which can be used as an integer, a character, a floating point number, a
pointer, or almost anything else, depending on context. BCPL was a precursor
of C, which inherited some of its features. :beam: vt. [from Star Trek
Classic's "Beam me up, Scotty!"] To transfer {softcopy} of a file
electronically; most often in combining forms such as `beam me a copy' or
`beam that over to his site'. Compare {blast}, {snarf}, {BLT}. :beanie key:
n. [Mac users] see {command key}. :beep: n.,v. Syn. {feep}. This term is
techspeak under MS-DOS and OS/2, and seems to be generally preferred among
micro hobbyists. :Befunge: n. A worthy companion to {INTERCAL}; a computer
language family which escapes the quotidian limitation of linear control flow
and embraces program counters flying through multiple dimensions with exotic
topologies. For details, see the Befunge home page at
`http://www.cats-eye.com/cet/soft/lang/befunge/'. :beige toaster: n. A
Macintosh. see {toaster}; compare {Macintrash}, {maggotbox}. :bells and
whistles: n. Features added to a program or system to make it more
{flavorful} from a hacker's point of view, without necessarily adding to its
utility for its primary function. Distinguished from {chrome}, which is
intended to attract users. "Now that we've got the basic program working,
let's go back and add some bells and whistles." No one seems to know what
distinguishes a bell from a whistle. The recognized emphatic form is "bells,
whistles, and gongs". It used to be thought that this term derived from the
toyboxes on theater organs. However, the "and gongs" strongly suggests a
different origin, at sea. Before powered horns, ships routinely used bells,
whistles, and gongs to signal each other over longer distances than voice can
carry. :bells whistles and gongs: n. A standard elaborated form of {bells and
whistles}; typically said with a pronounced and ironic accent on the `gongs'.
:benchmark: [techspeak] n. An inaccurate measure of computer performance. "In
the computer industry, there are three kinds of lies: lies, damn lies, and
benchmarks." Well-known ones include Whetstone, Dhrystone, Rhealstone (see
{h}), the Gabriel LISP benchmarks (see {gabriel}), the SPECmark suite, and
LINPACK. see also {machoflops}, {MIPS}, {smoke and mirrors}. :Berkeley
Quality Software: adj. (often abbreviated `BQS') Term used in a pejorative
sense to refer to software that was apparently created by rather spaced-out
hackers late at night to solve some unique problem. It usually has
nonexistent, incomplete, or incorrect documentation, has been tested on at
least two examples, and core dumps when anyone else attempts to use it. This
term was frequently applied to early versions of the `dbx(1)' debugger. see
also {Berzerkeley}. Note to British and Commonwealth readers: that's
/berk'lee/, not /bark'lee/ as in British Received Pronunciation. :berklix:
/berk'liks/ n.,adj. [contraction of `Berkeley Unix'] see {BSD}. Not used at
Berkeley itself. May be more common among {suit}s attempting to sound like
cognoscenti than among hackers, who usually just say `BSD'. :Berzerkeley:
/b*r-zer'klee/ n. [from `berserk', via the name of a now-deceased record
label; poss. originated by famed columnist Herb Caen] Humorous distortion of
`Berkeley' used esp. to refer to the practices or products of the {BSD} Unix
hackers. see {software bloat}, {Missed'em-five}, {Berkeley Quality Software}.
Mainstream use of this term in reference to the cultural and political
peculiarities of UC Berkeley as a whole has been reported from as far back as
the 1960s. :beta: /bay't*/, /be't*/ or (Commonwealth) /bee't*/ n. 1. Mostly
working, but still under test; usu. used with `in': `in beta'. In the {Real
World}, systems (hardware or software) software often go through two stages
of release testing: Alpha (in-house) and Beta (out-house?). Beta releases are
generally made to a group of lucky (or unlucky) trusted customers. 2.
Anything that is new and experimental. "His girlfriend is in beta" means that
he is still testing for compatibility and reserving judgment. 3. Flaky;
dubious; suspect (since beta software is notoriously buggy). Historical note:
More formally, to beta-test is to test a pre-release (potentially unreliable)
version of a piece of software by making it available to selected (or
self-selected) customers and users. This term derives from early 1960s
terminology for product cycle checkpoints, first used at IBM but later
standard throughout the industry. `Alpha Test' was the unit, module, or
component test phase; `Beta Test' was initial system test. These themselves
came from earlier A- and B-tests for hardware. The A-test was a feasibility
and manufacturability evaluation done before any commitment to design and
development. The B-test was a demonstration that the engineering model
functioned as specified. The C-test (corresponding to today's beta) was the
B-test performed on early samples of the production design, and the D test
was the C test repeated after the model had been in production a while. :BFI:
/B-F-I/ n. see {brute force and ignorance}. Also encountered in the variants
`BFMI', `brute force and _massive_ ignorance' and `BFBI' `brute force and
bloody ignorance'. :bible: n. 1. One of a small number of fundamental source
books such as {Knuth} and {K&R}. 2. The most detailed and authoritative
reference for a particular language, operating system, or other complex
software system. :BiCapitalization: n. The act said to have been performed on
trademarks (such as {PostScript}, NeXT, {NeWS}, VisiCalc, FrameMaker,
TK!solver, EasyWriter) that have been raised above the ruck of common coinage
by nonstandard capitalization. Too many {marketroid} types think this sort of
thing is really cute, even the 2,317th time they do it. Compare {studlycaps}.
:B1FF: /bif/ [Usenet] (alt. `BIFF') n. The most famous {pseudo}, and the
prototypical {newbie}. Articles from B1FF feature all uppercase letters
sprinkled liberally with bangs, typos, `cute' misspellings (EVRY BUDY LUVS
GOOD OLD BIFF CUZ HE"S A K00L DOOD AN HE RITES REEL AWESUM THINGZ IN CAPITULL
LETTRS LIKE THIS!!!), use (and often misuse) of fragments of {talk mode}
abbreviations, a long {sig block} (sometimes even a {doubled sig}), and
unbounded naivete. B1FF posts articles using his elder brother's VIC-20.
B1FF's location is a mystery, as his articles appear to come from a variety
of sites. However, {BITNET} seems to be the most frequent origin. The theory
that B1FF is a denizen of BITNET is supported by B1FF's (unfortunately
invalid) electronic mail address: B1FF@BIT.NET. [1993: Now It Can Be Told! My
spies inform me that B1FF was originally created by Joe Talmadge
<jat@cup.hp.com>, also the author of the infamous and much-plagiarized
"Flamer's Bible". The BIFF filter he wrote was later passed to Richard
Sexton, who posted