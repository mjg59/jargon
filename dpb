 ANSI C compilers typically issue compile-time warnings almost as detailed as
lint warnings. :delta: n. 1. [techspeak] A quantitative change, especially a
small or incremental one (this use is general in physics and engineering). "I
just doubled the speed of my program!" "What was the delta on program size?"
"About 30 percent." (He doubled the speed of his program, but increased its
size by only 30 percent.) 2. [Unix] A {diff}, especially a {diff} stored
under the set of version-control tools called SCCS (Source Code Control
System) or RCS (Revision Control System). 3. n. A small quantity, but not as
small as {epsilon}. The jargon usage of {delta} and {epsilon} stems from the
traditional use of these letters in mathematics for very small numerical
quantities, particularly in `epsilon-delta' proofs in limit theory (as in the
differential calculus). The term {delta} is often used, once {epsilon} has
been mentioned, to mean a quantity that is slightly bigger than {epsilon} but
still very small. "The cost isn't epsilon, but it's delta" means that the
cost isn't totally negligible, but it is nevertheless very small. Common
constructions include `within delta of --', `within epsilon of --': that is,
`close to' and `even closer to'. :demented: adj. Yet another term of disgust
used to describe a malfunctioning program. The connotation in this case is
that the program works as designed, but the design is bad. Said, for example,
of a program that generates large numbers of meaningless error messages,
implying that it is on the brink of imminent collapse. Compare {wonky},
{brain-damaged}, {bozotic}. :demigod: n. A hacker with years of experience, a
world-wide reputation, and a major role in the development of at least one
design, tool, or game used by or known to more than half of the hacker
community. To qualify as a genuine demigod, the person must recognizably
identify with the hacker community and have helped shape it. Major demigods
include Ken Thompson and Dennis Ritchie (co-inventors of {{Unix}} and {C}),
Richard M. Stallman (inventor of {EMACS}), Larry Wall (inventor of {Perl}),
Linus Torvalds (inventor of Linux), and most recently James Gosling (inventor
of Java). In their hearts of hearts, most hackers dream of someday becoming
demigods themselves, and more than one major software project has been driven
to completion by the author's veiled hopes of apotheosis. see also {net.god},
{true-hacker}. :demo: /de'moh/ [short for `demonstration'] 1. v. To
demonstrate a product or prototype. A far more effective way of inducing bugs
to manifest than any number of {test} runs, especially when important people
are watching. 2. n. The act of demoing. "I've gotta give a demo of the
drool-proof interface; how does it work again?" 3. n. Esp. as `demo version',
can refer either to an early, barely-functional version of a program which
can be used for demonstration purposes as long as the operator uses _exactly_
the right commands and skirts its numerous bugs, deficiencies, and
unimplemented portions, or to a special version of a program (frequently with
some features crippled) which is distributed at little or no cost to the user
for enticement purposes. 4. [{demoscene}] A sequence of {demoeffect}s
(usually) combined with self-composed music and hand-drawn ("pixelated")
graphics. These days (1997) usually built to attend a {compo}. Often called
`eurodemos' outside Europe, as most of the {demoscene} activity seems to have
gathered in northern Europe and especially Scandinavia. see also {intro},
{dentro}. :demo mode: n. 1. [Sun] The state of being {heads down} in order to
finish code in time for a {demo}, usually due yesterday. 2. A mode in which
video games sit by themselves running through a portion of the game, also
known as `attract mode'. Some serious {app}s have a demo mode they use as a
screen saver, or may go through a demo mode on startup (for example, the
Microsoft Windows opening screen -- which lets you impress your neighbors
without actually having to put up with {Microsloth Windows}). :demoeffect: n.
[{demoscene}] What among hackers is called a {display hack}. Classical
effects include "plasma" (colorful mess), "keftales" (x*x+y*y and other
similar patterns, usually combined with color-cycling), realtime fractals,
realtime 3d graphics, etc. Historically, demo effects have cheated as much as
possible to gain more speed and more complexity, using low-precision math and
masses of assembler code and building animation realtime are three common
tricks, but use of special hardware to fake effects is a {Good Thing} on the
demoscene (though this is becoming less common as platforms like the Amiga
fade away). :demogroup: n. [{demoscene}] A group of {demo} (sense 4)
composers. Job titles within a group include coders (the ones who write
programs), graphicians (the ones who painstakingly pixelate the fine art),
musicians (the music composers), {sysop}s, traders/swappers (the ones who do
the trading and other PR), and organizers (in larger groups). It is not
uncommon for one person to do multiple jobs, but it has been observed that
good coders are rarely good composers and vice versa. [How odd. Musical
talent seems common among Internet/Unix hackers --ESR] :demon: n. 1. [MIT] A
portion of a program that is not invoked explicitly, but that lies dormant
waiting for some condition(s) to occur. see {daemon}. The distinction is that
demons are usually processes within a program, while daemons are usually
programs running on an operating system. 2. [outside MIT] Often used
equivalently to {daemon} -- especially in the {{Unix}} world, where the
latter spelling and pronunciation is considered mildly archaic. Demons in
sense 1 are particularly common in AI programs. For example, a
knowledge-manipulation program might implement inference rules as demons.
Whenever a new piece of knowledge was added, various demons would activate
(which demons depends on the particular piece of data) and would create
additional pieces of knowledge by applying their respective inference rules
to the original piece. These new pieces could in turn activate more demons as
the inferences filtered down through chains of logic. Meanwhile, the main
program could continue with whatever its primary task was. :demon dialer: n.
A program which repeatedly calls the same telephone number. Demon dialing may
be benign (as when a number of communications programs contend for legitimate
access to a {BBS} line) or malign (that is, used as a prank or
denial-of-service attack). This term dates from the {blue box} days of the
1970s and early 1980s and is now semi-obsolescent among {phreaker}s; see {war
dialer} for its contemporary progeny. :demoparty: n. [{demoscene}]
Aboveground descendant of the {copyparty}, with emphasis shifted away from
software piracy and towards {compo}s. Smaller demoparties, for 100 persons or
less, are held quite often, sometimes even once a month, and usually last for
one to two days. On the other end of the scale, huge demo parties are held
once a year (and four of these have grown very large and occur annually -
Assembly in Finland, The Party in Denmark, The Gathering in Norway, and NAID
somewhere in north America). These parties usually last for three to five
days, have room for 3000-5000 people, and have a party network with
connection to the internet. :demoscene: /dem'oh-seen/ [also `demo scene'] A
culture of multimedia hackers located primarily in Scandinavia and northern
Europe. Demoscene folklore recounts that when old-time {warez d00dz} cracked
some piece of software they often added an advertisement of in the beginning,
usually containing colorful {display hack}s with greetings to other cracking
groups. The demoscene was born among people who decided building these
display hacks is more interesting than hacking and began to build
self-contained display hacks of considerable elaboration and beauty (within
the culture such a hack is called a {demo}). The split seems to have happened
at the end of the 1980s. As more of these {demogroup}s emerged, they started
to have {compo}s at copying parties (see {copyparty}), which later evolved to
standalone events (see {demoparty}). The demoscene has retained some traits
from the {warez d00dz}, including their style of handles and group names and
some of their jargon. Traditionally demos were written in assembly language,
with lots of smart tricks, self-modifying code, undocumented op-codes and the
like. Some time around 1995, people started coding demos in C, and a couple
of years after that, they also started using Java. Ten years on (in
1998-1999), the demoscene is changing as its original platforms (C64, Amiga,
Spectrum, Atari ST, IBM PC under DOS) die out and activity shifts towards
Windows, Linux, and the Internet. While deeply underground in the past,
demoscene is trying to get into the mainstream as accepted art form, and one
symptom of this is the commercialization of bigger demoparties. Older
demosceneers frown at this, but the majority think it's a good direction.
Many demosceneers end up working in the computer game industry. Demoscene
resource pages are available at `http://www.oldskool.org/demos/explained/'
and `http://www.scene.org/'. :dentro: /den'troh/ [{demoscene}] Combination of
{demo} (sense 4) and {intro}. Other name mixings include intmo, dentmo etc.
and are used usually when the authors are not quite sure whether the program
is a {demo} or an {intro}. Special-purpose coinages like wedtro (some member
of a group got married), invtro (invitation intro) etc. have also been
sighted. :depeditate: /dee-ped'*-tayt/ n. [by (faulty) analogy with
`decapitate'] Humorously, to cut off the feet of. When one is using some
computer-aided typesetting tools, careless placement of text blocks within a
page or above a rule can result in chopped-off letter descenders. Such
letters are said to have been depeditated. :deprecated: adj. Said of a
program or feature that is considered obsolescent and in the process of being
phased out, usually in favor of a specified replacement. Deprecated features
can, unfortunately, linger on for many years. This term appears with
distressing frequency in standards documents when the committees writing the
documents realize that large amounts of extant (and presumably happily
working) code depend on the feature(s) that have passed out of favor. see
also {dusty deck}. :derf: /derf/ v.,n. [PLATO] The act of exploiting a
terminal which someone else has absentmindedly left logged on, to use that
person's account, especially to post articles intended to make an ass of the
victim you're impersonating. It has been alleged that the term originated as
a reversal of the name of the gentleman who most usually left himself
vulnerable to it, who also happened to be the head of the department that
handled PLATO at the University of Delaware. :deserves to lose: adj. [common]
Said of someone who willfully does the {Wrong Thing}; humorously, if one uses
a feature known to be {marginal}. What is meant is that one deserves the
consequences of one's {losing} actions. "Boy, anyone who tries to use
{mess-dos} deserves to {lose}!" ({{ITS}} fans used to say the same thing of
{{Unix}}; many still do.) see also {screw}, {chomp}, {bagbiter}. :desk check:
n.,v. To {grovel} over hardcopy of source code, mentally simulating the
control flow; a method of catching bugs. No longer common practice in this
age of on-screen editing, fast compiles, and sophisticated debuggers --
though some maintain stoutly that it ought to be. Compare {eyeball search},
{vdiff}, {vgrep}. :despew: /d*-spyoo'/ v. [Usenet] To automatically generate
a large amount of garbage to the net, esp. from an automated posting program
gone wild. see {ARMM}. :Devil Book: n. see {daemon book}, the term preferred
by its authors. :/dev/null: /dev-nuhl/ n. [from the Unix null device, used as
a data sink] A notional `black hole' in any information space being
discussed, used, or referred to. A controversial posting, for example, might
end "Kudos to rasputin@kremlin.org, flames to /dev/null". see {bit bucket}.
:dickless workstation: n. Extremely pejorative hackerism for `diskless
workstation', a class of botches including the Sun 3/50 and other machines
designed exclusively to network with an expensive central disk server. These
combine all the disadvantages of time-sharing with all the disadvantages of
distributed personal computers; typically, they cannot even {boot} themselves
without help (in the form of some kind of {breath-of-life packet}) from the
server. :dictionary flame: n. [Usenet] An attempt to sidetrack a debate away
from issues by insisting on meanings for key terms that presuppose a desired
conclusion or smuggle in an implicit premise. A common tactic of people who
prefer argument over definitions to disputes about reality. Compare {spelling
flame}. :diddle: 1. vt. To work with or modify in a not particularly serious
manner. "I diddled a copy of {ADVENT} so it didn't double-space all the
time." "Let's diddle this piece of code and see if the problem goes away."
see {tweak} and {twiddle}. 2. n. The action or result of diddling. see also
{tweak}, {twiddle}, {frob}. :die: v. Syn. {crash}. Unlike {crash}, which is
used primarily of hardware, this verb is used of both hardware and software.
see also {go flatline}, {casters-up mode}. :die horribly: v. The software
equivalent of {crash and burn}, and the preferred emphatic form of {die}.
"The converter choked on an FF in its input and died horribly". :diff: /dif/
n. 1. A change listing, especially giving differences between (and additions
to) source code or documents (the term is often used in the plural `diffs').
"Send me your diffs for the Jargon File!" Compare {vdiff}. 2. Specifically,
such a listing produced by the `diff(1)' command, esp. when used as
specification input to the `patch(1)' utility (which can actually perform the
modifications; see {patch}). This is a common method of distributing patches
and source updates in the Unix/C world. 3. v. To compare (whether or not by
use of automated tools on machine-readable files); see also {vdiff}, {mod}.
:digit: n.,obs. An employee of Digital Equipment Corporation. see also {VAX},
{VMS}, {PDP-10}, {{TOPS-10}}, {field circus}. :dike: vt. To remove or disable
a portion of something, as a wire from a computer or a subroutine from a
program. A standard slogan is "When in doubt, dike it out". (The implication
is that it is usually more effective to attack software problems by reducing
complexity than by increasing it.) The word `dikes' is widely used among
mechanics and engineers to mean `diagonal cutters', esp. the heavy-duty
metal-cutting version, but may also refer to a kind of wire-cutters used by
electronics techs. To `dike something out' means to use such cutters to
remove something. Indeed, the TMRC Dictionary defined dike as "to attack with
dikes". Among hackers this term has been metaphorically extended to
informational objects such as sections of code. :Dilbert: n. Name and title
character of a comic strip nationally syndicated in the U.S. and enormously
popular among hackers. Dilbert is an archetypical engineer-nerd who works at
an anonymous high-technology company; the strips present a lacerating satire
of insane working conditions and idiotic {management} practices all too
readily recognized by hackers. Adams, who spent nine years in {cube} 4S700R
at Pacific Bell (not {DEC} as often reported), often remarks that he has
never been able to come up with a fictional management blunder that his
correspondents didn't quickly either report to have actually happened or top
with a similar but even more bizarre incident. In 1996 Adams distilled his
insights into the collective psychology of businesses into an even funnier
book, "The Dilbert Principle" (HarperCollins, ISBN 0-887-30787-6). see also
{pointy-haired}, {rat dance}. :ding: n.,vi. 1. Synonym for {feep}. Usage:
rare among hackers, but commoner in the {Real World}. 2. `dinged': What
happens when someone in authority gives you a minor bitching about something,
esp. something trivial. "I was dinged for having a messy desk." :dink: /dink/
adj. Said of a machine that has the {bitty box} nature; a machine too small
to be worth bothering with -- sometimes the system you're currently forced to
work on. First heard from an MIT hacker working on a CP/M system with 64K, in
reference to any 6502 system, then from fans of 32-bit architectures about
16-bit machines. "GNUMACS will never work on that dink machine." Probably
derived from mainstream `dinky', which isn't sufficiently pejorative. see
{macdink}. :dinosaur: n. 1. Any hardware requiring raised flooring and
special power. Used especially of old minis and mainframes, in contrast with
newer microprocessor-based machines. In a famous quote from the 1988 Unix
EXPO, Bill Joy compared the liquid-cooled mainframe in the massive IBM
display with a grazing dinosaur "with a truck outside pumping its bodily
fluids through it". IBM was not amused. Compare {big iron}; see also
{mainframe}. 2. [IBM] A very conservative user; a {zipperhead}. :dinosaur
pen: n. A traditional {mainframe} computer room complete with raised
flooring, special power, its own ultra-heavy-duty air conditioning, and a
side order of Halon fire extinguishers. see {boa}. :dinosaurs mating: n. Said
to occur when yet another {big iron} merger or buyout occurs; reflects a
perception by hackers that these signal another stage in the long, slow dying
of the {mainframe} industry. In its glory days of the 1960s, it was `IBM and
the Seven Dwarves': Burroughs, Control Data, General Electric, Honeywell,
NCR, RCA, and Univac. RCA and GE sold out early, and it was `IBM and the
Bunch' (Burroughs, Univac, NCR, Control Data, and Honeywell) for a while.
Honeywell was bought out by Bull; Burroughs merged with Univac to form Unisys
(in 1984 -- this was when the phrase `dinosaurs mating' was coined); and in
1991 AT&T absorbed NCR (but spat it back out a few years later). Control Data
still exists but is no longer in the mainframe business. More such
earth-shaking unions of doomed giants seem inevitable. :dirtball: n. [XEROX
PARC] A small, perhaps struggling outsider; not in the major or even the
minor leagues. For example, "Xerox is not a dirtball company". [Outsiders
often observe in the PARC culture an institutional arrogance which usage of
this term exemplifies. The brilliance and scope of PARC's contributions to
computer science have been such that this superior attitude is not much
resented. --ESR] :dirty power: n. Electrical mains voltage that is unfriendly
to the delicate innards of computers. Spikes, {drop-outs}, average voltage
significantly higher or lower than nominal, or just plain noise can all cause
problems of varying subtlety and severity (these are collectively known as
{power hit}s). :disclaimer: n. [Usenet] Statement ritually appended to many
Usenet postings (sometimes automatically, by the posting software)
reiterating the fact (which should be obvious, but is easily forgotten) that
the article reflects its author's opinions and not necessarily those of the
organization running the machine through which the article entered the
network. :Discordianism: /dis-kor'di-*n-ism/ n. The veneration of {Eris},
a.k.a. Discordia; widely popular among hackers. Discordianism was popularized
by Robert Shea and Robert Anton Wilson's novel "{Illuminatus!}" as a sort of
self-subverting Dada-Zen for Westerners -- it should on no account be taken
seriously but is far more serious than most jokes. Consider, for example, the
Fifth Commandment of the Pentabarf, from "Principia Discordia": "A Discordian
is Prohibited of Believing What he Reads." Discordianism is usually connected
with an elaborate conspiracy theory/joke involving millennia-long warfare
between the anarcho-surrealist partisans of Eris and a malevolent,
authoritarian secret society called the Illuminati. see {Religion} in
Appendix B, {Church of the SubGenius}, and {ha ha only serious}. :disk farm:
n. (also {laundromat}) A large room or rooms filled with disk drives (esp.
{washing machine}s). :display hack: n. A program with the same approximate
purpose as a kaleidoscope: to make pretty pictures. Famous display hacks
include {munching squares}, {smoking clover}, the BSD Unix `rain(6)' program,
`worms(6)' on miscellaneous Unixes, and the {X} `kaleid(1)' program. Display
hacks can also be implemented by creating text files containing numerous
escape sequences for interpretation by a video terminal; one notable example
displayed, on any VT100, a Christmas tree with twinkling lights and a toy
train circling its base. The {hack value} of a display hack is proportional
to the esthetic value of the images times the cleverness of the algorithm
divided by the size of the code. Syn. {psychedelicware}. :dispress: vt.
[contraction of `Dissociated Press' due to eight-character MS-DOS filenames]
To apply the {Dissociated Press} algorithm to a block of text. The resultant
output is also referred to as a 'dispression'. :Dissociated Press: n. [play
on `Associated Press'; perhaps inspired by a reference in the 1950 Bugs Bunny
cartoon "What's Up, Doc?"] An algorithm for transforming any text into
potentially humorous garbage even more efficiently than by passing it through
a {marketroid}. The algorithm starts by printing any N consecutive words (or
letters) in the text. Then at every step it searches for any random
occurrence in the original text of the last N words (or letters) already
printed and then prints the next word or letter. {EMACS} has a handy command
for this. Here is a short example of word-based Dissociated Press applied to
an earlier version of this Jargon File: wart: n. A small, crocky {feature}
that sticks out of an array (C has no checks for this). This is relatively
benign and easy to spot if the phrase is bent so as to be not worth paying
attention to the medium in question. Here is a short example of letter-based
Dissociated Press applied to the same source: window sysIWYG: n. A bit was
named aften /bee't*/ prefer to use the other guy's re, especially in every
cast a chuckle on neithout getting into useful informash speech makes
removing a featuring a move or usage actual abstractionsidered interj. Indeed
spectace logic or problem! A hackish idle pastime is to apply letter-based
Dissociated Press to a random body of text and {vgrep} the output in hopes of
finding an interesting new word. (In the preceding example, `window sysIWYG'
and `informash' show some promise.) Iterated applications of Dissociated
Press usually yield better results. Similar techniques called `travesty
generators' have been employed with considerable satirical effect to the
utterances of Usenet flamers; see {pseudo}. :distribution: n. 1. A software
source tree packaged for distribution; but see {kit}. Since about 1996
unqualified use of this term often implies `{Linux} distribution'. 2. A vague
term encompassing mailing lists and Usenet newsgroups (but not {BBS} {fora});
any topic-oriented message channel with multiple recipients. 3. An
information-space domain (usually loosely correlated with geography) to which
propagation of a Usenet message is restricted; a much-underutilized feature.
:disusered: adj. [Usenet] Said of a person whose account on a computer has
been removed, esp. for cause rather than through normal attrition. "He got
disusered when they found out he'd been cracking through the school's
Internet access." The verbal form `disuser' is live but less common. Both
usages probably derive from the DISUSER account status flag on VMS; setting
it disables the account. Compare {star out}. :do protocol: vi. [from network
protocol programming] To perform an interaction with somebody or something
that follows a clearly defined procedure. For example, "Let's do protocol
with the check" at a restaurant means to ask for the check, calculate the tip
and everybody's share, collect money from everybody, generate change as
necessary, and pay the bill. see {protocol}. :doc: /dok/ n. Common spoken and
written shorthand for `documentation'. Often used in the plural `docs' and in
the construction `doc file' (i.e., documentation available on-line).
:documentation:: n. The multiple kilograms of macerated, pounded, steamed,
bleached, and pressed trees that accompany most modern software or hardware
products (see also {tree-killer}). Hackers seldom read paper documentation
and (too) often resist writing it; they prefer theirs to be terse and
on-line. A common comment on this predilection is "You can't {grep} dead
trees". see {drool-proof paper}, {verbiage}, {treeware}. :dodgy: adj. Syn.
with {flaky}. Preferred outside the U.S. :dogcow: /dog'kow/ n. see {Moof}.
The dogcow is a semi-legendary creature that lurks in the depths of the
Macintosh Technical Notes Hypercard stack V3.1. The full story of the dogcow
is told in technical note #31 (the particular dogcow illustrated is properly
named `Clarus'). Option-shift-click will cause it to emit a characteristic
`Moof!' or `!fooM' sound. _Getting_ to tech note 31 is the hard part; to
discover how to do that, one must needs examine the stack script with a
hackerly eye. Clue: {rot13} is involved. A dogcow also appears if you choose
`Page Setup...' with a LaserWriter selected and click on the `Options'
button. It also lurks in other Mac printer drivers, notably those for the
now-discontinued Style Writers. :dogfood: n. [Microsoft, Netscape] Interim
software used internally for testing. "To eat one's own dogfood" (from which
the slang noun derives) means to use the software one is developing, as part
of one's everyday development environment (the phrase is used outside
Microsoft and Netscape). The practice is normal in the Linux community and
elsewhere, but the term `dogfood' is seldom used as open-source betas tend to
be quite tasty and nourishing. The idea is that developers who are using
their own software will quickly learn what's missing or broken. Dogfood is
typically not even of {beta} quality. :dogpile: v. [Usenet: prob. fr.
mainstream "puppy pile"] When many people post unfriendly responses in short
order to a single posting, they are sometimes said to "dogpile" or "dogpile
on" the person to whom they're responding. For example, when a religious
missionary posts a simplistic appeal to alt.atheism, he can expect to be
dogpiled. It has been suggested that this derives from U.S, football slang
for a tackle involving three or more people. :dogwash: /dog'wosh/ [From a
quip in the `urgency' field of a very optional software change request, ca.
1982. It was something like "Urgency: Wash your dog first".] 1. n. A project
of minimal priority, undertaken as an escape from more serious work. 2. v. To
engage in such a project. Many games and much {freeware} get written this
way. :domainist: /doh-mayn'ist/ adj. 1. [Usenet, by pointed analogy with
"sexist", "racist", etc.] Someone who judges people by the domain of their
email addresses; esp. someone who dismisses anyone who posts from a public
internet provider. "What do you expect from an article posted from aol.com?"
2. Said of an {{Internet address}} (as opposed to a {bang path}) because the
part to the right of the `@' specifies a nested series of `domains'; for
example, <esr@snark.thyrsus.com> specifies the machine called snark in the
subdomain called thyrsus within the top-level domain called com. see also
{big-endian}, sense 2. The meaning of this term has drifted. At one time
sense 2 was primary. In elder days it was also used of a site, mailer, or
routing program which knew how to handle domainist addresses; or of a person
(esp. a site admin) who preferred domain addressing, supported a domainist
mailer, or proselytized for domainist addressing and disdained {bang path}s.
These senses are now (1996) obsolete, as effectively all sites have
converted. :Don't do that then!: imp. [from an old doctor's office joke about
a patient with a trivial complaint] Stock response to a user complaint. "When
I type control-S, the whole system comes to a halt for thirty seconds."
"Don't do that, then!" (or "So don't do that!"). Compare {RTFM}. :dongle:
/dong'gl/ n. 1. A security or {copy protection} device for commercial
microcomputer programs consisting of a serialized EPROM and some drivers in a
D-25 connector shell, which must be connected to an I/O port of the computer
while the program is run. Programs that use a dongle query the port at
startup and at programmed intervals thereafter, and terminate if it does not
respond with the dongle's programmed validation code. Thus, users can make as
many copies of the program as they want but must pay for each dongle. The
idea was clever, but it was initially a failure, as users disliked tying up a
serial port this way. Almost all dongles on the market today (1993) will pass
data through the port and monitor for {magic} codes (and combinations of
status lines) with minimal if any interference with devices further down the
line -- this innovation was necessary to allow daisy-chained dongles for
multiple pieces of software. The devices are still not widely used, as the
industry has moved away from copy-protection schemes in general. 2. By
extension, any physical electronic key or transferable ID required for a
program to function. Common variations on this theme have used parallel or
even joystick ports. see {dongle-disk}. [Note: in early 1992, advertising
copy from Rainbow Technologies (a manufacturer of dongles) included a claim
that the word derived from "Don Gall", allegedly the inventor of the device.
The company's receptionist will cheerfully tell you that the story is a myth
invented for the ad copy. Nevertheless, I expect it to haunt my life as a
lexicographer for at least the next ten years. :-( --ESR] :dongle-disk:
/don'gl disk/ n. A special floppy disk that is required in order to perform
some task. Some contain special coding that allows an application to identify
it uniquely, others _are_ special code that does something that
normally-resident programs don't or can't. (For example, AT&T's "Unix PC"
would only come up in {root mode} with a special boot disk.) Also called a
`key disk'. see {dongle}. :donuts: n. obs. A collective noun for any set of
memory bits. This usage is extremely archaic and may no longer be live
jargon; it dates from the days of ferrite-{core} memories in which each bit
was implemented by a doughnut-shaped magnetic flip-flop. :doorstop: n. Used
to describe equipment that is non-functional and halfway expected to remain
so, especially obsolete equipment kept around for political reasons or
ostensibly as a backup. "When we get another Wyse-50 in here, that ADM 3 will
turn into a doorstop." Compare {boat anchor}. :DoS attack: // [Usenet; note
that it's unrelated to `DOS' as name of an operating system] Abbreviation for
Denial-Of-Service attack. This abbreviation is most often used of attempts to
shut down newsgroups with floods of {spam}. :dot file: [Unix] n. A file that
is not visible by default to normal directory-browsing tools (on Unix, files
named with a leading dot are, by convention, not normally presented in
directory listings). Many programs define one or more dot files in which
startup or configuration information may be optionally recorded; a user can
customize the program's behavior by creating the appropriate file in the
current or home directory. (Therefore, dot files tend to {creep} -- with
every nontrivial application program defining at least one, a user's home
directory can be filled with scores of dot files, of course without the
user's really being aware of it.) see also {profile} (sense 1), {rc file}.
:double bucky: adj. Using both the CTRL and META keys. "The command to burn
all LEDs is double bucky F." This term originated on the Stanford
extended-ASCII keyboard, and was later taken up by users of the {space-cadet
keyboard} at MIT. A typical MIT comment was that the Stanford {bucky bits}
(control and meta shifting keys) were nice, but there weren't enough of them;
you could type only 512 different characters on a Stanford keyboard. An
obvious way to address this was simply to add more shifting keys, and this
was eventually done; but a keyboard with that many shifting keys is hard on
touch-typists, who don't like to move their hands away from the home position
on the keyboard. It was half-seriously suggested that the extra shifting keys
be implemented as pedals; typing on such a keyboard would be very much like
playing a full pipe organ. This idea is mentioned in a parody of a very fine
song by Jeffrey Moss called "Rubber Duckie", which was published in "The
Sesame Street Songbook" (Simon and Schuster 1971, ISBN 0-671-21036-X). These
lyrics were written on May 27, 1978, in celebration of the Stanford keyboard:
Double Bucky Double bucky, you're the one! You make my keyboard lots of fun.
Double bucky, an additional bit or two: (Vo-vo-de-o!) Control and meta, side
by side, Augmented ASCII, nine bits wide! Double bucky! Half a thousand
glyphs, plus a few! Oh, I sure wish that I Had a couple of Bits more! Perhaps
a Set of pedals to Make the number of Bits four: Double double bucky! Double
bucky, left and right OR'd together, outta sight! Double bucky, I'd like a
whole word of Double bucky, I'm happy I heard of Double bucky, I'd like a
whole word of you! --- The Great Quux (with apologies to Jeffrey Moss) [This,
by the way, is an excellent example of computer {filk} --ESR] see also {meta
bit}, {cokebottle}, and {quadruple bucky}. :doubled sig: [Usenet] n. A {sig
block} that has been included twice in a {Usenet} article or, less commonly,
in an electronic mail message. An article or message with a doubled sig can
be caused by improperly configured software. More often, however, it reveals
the author's lack of experience in electronic communication. see {B1FF},
{pseudo}. :down: 1. adj. Not operating. "The up escalator is down" is
considered a humorous thing to say (unless of course you were expecting to
use it), and "The elevator is down" always means "The elevator isn't working"
and never refers to what floor the elevator is on. With respect to computers,
this term has passed into the mainstream; the extension to other kinds of
machine is still confined to techies (e.g. boiler mechanics may speak of a
boiler being down). 2. `go down' vi. To stop functioning; usually said of the
{system}. The message from the {console} that every hacker hates to hear from
the operator is "System going down in 5 minutes". 3. `take down', `bring
down' vt. To deactivate purposely, usually for repair work or {PM}. "I'm
taking the system down to work on that bug in the tape drive." Occasionally
one hears the word `down' by itself used as a verb in this vt. sense. see
{crash}; oppose {up}. :download: vt. To transfer data or (esp.) code from a
larger `host' system (esp. a {mainframe}) over a digital comm link to a
smaller `client' system, esp. a microcomputer or specialized peripheral.
Oppose {upload}. However, note that ground-to-space communications has its
own usage rule for this term. Space-to-earth transmission is always `down'
and the reverse `up' regardless of the relative size of the computers
involved. So far the in-space machines have invariably been smaller; thus the
upload/download distinction has been reversed from its usual sense. :DP:
/D-P/ n. 1. Data Processing. Listed here because, according to hackers, use
of the term marks one immediately as a {suit}. see {DPer}. 2. Common abbrev
for {Dissociated Press}. :DPB: /d*-pib'/ vt. [from the PDP-10 instruction
set] To plop something down in the middle. Usage: silly. "DPB yourself into
that couch there." The connotation would be that the couch is full except for
one slot just big enough for one last person to sit in. DPB means `DePosit
Byte', and was the name of a PDP-10 instruction that inserts some bits into
the middle of some other bits. Hackish usage has been kept alive by the
Common LISP function of the same name. :DPer: /dee-pee-er/ n. Data Processor.
Hackers are absolutely amazed that {suit}s use this term self-referentially.
_Computers_ process data, not people! see {DP}. :Dr. Fred Mbogo: /*m-boh'goh,
dok'tr fred/ n. [Stanford] The archetypal man you don't want to see about a
problem, esp. an incompetent professional; a shyster. "Do you know a good eye
doctor?" "Sure, try Mbogo Eye Care and Professional Dry Cleaning." The name
comes from synergy between {bogus} and the original Dr. Mbogo, a witch doctor
who was Gomez Addams' physician on the old "Addams Family" TV show. Compare
{Bloggs Family} and {J. Random Hacker}; see also {Fred Foobar} and {fred}.
:dragon: n. [MIT] A program similar to a {daemon}, except that it is not
invoked at all, but is instead used by the system to perform various
secondary tasks. A typical example would be an accounting program, which
keeps track of who is logged in, accumulates load-average statistics, etc.
Under ITS, many terminals displayed a list of people logged in, where they
were, what they were running, etc., along with some random picture (such as a
unicorn, Snoopy, or the Enterprise), which was generated by the `name
dragon'. Usage: rare outside MIT -- under Unix and most other