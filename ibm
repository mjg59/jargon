 1000000) character. see {ASCII} for other synonyms. :stubroutine:
/stuhb'roo-teen/ n. [contraction of `stub subroutine'] Tiny, often vacuous
placeholder for a subroutine that is to be written or fleshed out later.
:studly: adj. Impressive; powerful. Said of code and designs which exhibit
both complexity and a virtuoso flair. Has connotations similar to {hairy} but
is more positive in tone. Often in the emphatic `most studly' or as noun-form
`studliness'. "Smail 3.0's configuration parser is most studly." :studlycaps:
/stuhd'lee-kaps/ n. A hackish form of silliness similar to {BiCapitalization}
for trademarks, but applied randomly and to arbitrary text rather than to
trademarks. ThE oRigiN and SigNificaNce of thIs pRacTicE iS oBscuRe.
:stunning: adj. Mind-bogglingly stupid. Usually used in sarcasm. "You want to
code _what_ in ADA? That's a ... stunning idea!" :stupid-sort: n. Syn.
{bogo-sort}. :Stupids: n. Term used by {samurai} for the {suit}s who employ
them; succinctly expresses an attitude at least as common, though usually
better disguised, among other subcultures of hackers. There may be intended
reference here to an SF story originally published in 1952 but much
anthologized since, Mark Clifton's "Star, Bright". In it, a super-genius
child classifies humans into a very few `Brights' like herself, a huge
majority of `Stupids', and a minority of `Tweens', the merely ordinary
geniuses. :Sturgeon's Law: prov. "Ninety percent of everything is crap".
Derived from a quote by science fiction author Theodore Sturgeon, who once
said, "Sure, 90% of science fiction is crud. That's because 90% of everything
is crud." Oddly, when Sturgeon's Law is cited, the final word is almost
invariably changed to `crap'. Compare {Hanlon's Razor}, {Ninety-Ninety Rule}.
Though this maxim originated in SF fandom, most hackers recognize it and are
all too aware of its truth. :sucking mud: adj. [Applied Data Research] (also
`pumping mud') Crashed or {wedged}. Usually said of a machine that provides
some service to a network, such as a file server. This Dallas regionalism
derives from the East Texas oilfield lament, "Shut 'er down, Ma, she's
a-suckin' mud". Often used as a query. "We are going to reconfigure the
network, are you ready to suck mud?" :sufficiently small: adj. Syn. {suitably
small}. :suit: n. 1. Ugly and uncomfortable `business clothing' often worn by
non-hackers. Invariably worn with a `tie', a strangulation device that
partially cuts off the blood supply to the brain. It is thought that this
explains much about the behavior of suit-wearers. Compare {droid}. 2. A
person who habitually wears suits, as distinct from a techie or hacker. see
{pointy-haired}, {burble}, {management}, {Stupids}, {SNAFU principle}, {PHB},
and {brain-damaged}. :suitable win: n. see {win}. :suitably small: adj.
[perverted from mathematical jargon] An expression used ironically to
characterize unquantifiable behavior that differs from expected or required
behavior. For example, suppose a newly created program came up with a correct
full-screen display, and one publicly exclaimed: "It works!" Then, if the
program dumped core on the first mouse click, one might add: "Well, for
suitably small values of `works'." Compare the characterization of pi under
{{random numbers}}. :Sun: n. Sun Microsystems. Hackers remember that the name
was originally an acronym, Stanford University Network. Sun started out
around 1980 with some hardware hackers (mainly) from Stanford talking to some
software hackers (mainly) from UC Berkeley; Sun's original technology concept
married a clever board design based on the Motorola 68000 to {BSD} Unix. Sun
went on to lead the worstation industry through the 1980s, and for years
afterwards remained an engineering-driven company and a good place for
hackers to work. Though Sun drifted away from its techie origins after 1990
and has since made some strategic moves that disappointed and annoyed many
hackers (especially by maintaining proprietary control of Java and rejecting
Linux), it's still considered within the family in much the same way {DEC}
was in the 1970s and early 1980s. :sun lounge: n. [UK] The room where all the
Sun workstations live. The humor in this term comes from the fact that it's
also in mainstream use to describe a solarium, and all those Sun workstations
clustered together give off an amazing amount of heat. :sun-stools: n.
Unflattering hackerism for SunTools, a pre-X windowing environment notorious
in its day for size, slowness, and misfeatures. {X}, however, is larger and
(some claim) slower; see {second-system effect}. :sunspots: n. 1. Notional
cause of an odd error. "Why did the program suddenly turn the screen blue?"
"Sunspots, I guess." 2. Also the cause of {bit rot} -- from the myth that
sunspots will increase {cosmic rays}, which can flip single bits in memory.
see also {phase of the moon}. :super source quench: n. A special packet
designed to shut up an Internet host. The Internet Protocol (IP) has a
control message called Source Quench that asks a host to transmit more slowly
on a particular connection to avoid congestion. It also has a Redirect
control message intended to instruct a host to send certain packets to a
different local router. A "super source quench" is actually a redirect
control packet, forged to look like it came from a local router, that
instructs a host to send all packets to its own local loopback address. This
will effectively tie many Internet hosts up in knots. Compare {Godzillagram},
{breath-of-life packet}. :superloser: n. [Unix] A superuser with no clue -
someone with root privileges on a Unix system and no idea what he/she is
doing, the moral equivalent of a three-year-old with an unsafetied Uzi.
Anyone who thinks this is an uncommon situation reckons without the
territorial urges of {management}. :superprogrammer: n. A prolific
programmer; one who can code exceedingly well and quickly. Not all hackers
are superprogrammers, but many are. (Productivity can vary from one
programmer to another by three orders of magnitude. For example, one
programmer might be able to write an average of 3 lines of working code in
one day, while another, with the proper tools, might be able to write 3,000.
This range is astonishing; it is matched in very few other areas of human
endeavor.) The term `superprogrammer' is more commonly used within such
places as IBM than in the hacker community. It tends to stress naive measures
of productivity and to underweight creativity, ingenuity, and getting the job
_done_ -- and to sidestep the question of whether the 3,000 lines of code do
more or less useful work than three lines that do the {Right Thing}. Hackers
tend to prefer the terms {hacker} and {wizard}. :superuser: n. [Unix] Syn.
{root}, {avatar}. This usage has spread to non-Unix environments; the
superuser is any account with all {wheel} bits on. A more specific term than
{wheel}. :support: n. After-sale handholding; something many software vendors
promise but few deliver. To hackers, most support people are useless --
because by the time a hacker calls support he or she will usually know the
software and the relevant manuals better than the support people (sadly, this
is _not_ a joke or exaggeration). A hacker's idea of `support' is a
te^te-a`-te^te with the software's designer. :surf: v. [from the `surf' idiom
for rapidly flipping TV channels] To traverse the Internet in search of
interesting stuff, used esp. if one is doing so with a World Wide Web
browser. It is also common to speak of `surfing in' to a particular resource.
Hackers adopted this term early, but many have stopped using it since it went
completely mainstream around 1995. The passive, couch-potato connotations
that go with TV channel surfing were never pleasant, and hearing non-hackers
wax enthusiastic about "surfing the net" tends to make hackers feel a bit as
though their home is being overrun by ignorami. :Suzie COBOL: /soo'zee
koh'bol/ 1. [IBM: prob. from Frank Zappa's `Suzy Creamcheese'] n. A coder
straight out of training school who knows everything except the value of
comments in plain English. Also (fashionable among personkind wishing to
avoid accusations of sexism) `Sammy Cobol' or (in some non-IBM circles)
`Cobol Charlie'. 2. [proposed] Meta-name for any {code grinder}, analogous to
{J. Random Hacker}. :swab: /swob/ [From the mnemonic for the PDP-11 `SWAp
Byte' instruction, as immortalized in the `dd(1)' option `conv=swab' (see
{dd})] 1. vt. To solve the {NUXI problem} by swapping bytes in a file.