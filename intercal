 :INTERCAL: /in't*r-kal/ n. [said by the authors to stand for `Compiler
Language With No Pronounceable Acronym'] A computer language designed by Don
Woods and James Lyons in 1972. INTERCAL is purposely different from all other
computer languages in all ways but one; it is purely a written language,
being totally unspeakable. An excerpt from the INTERCAL Reference Manual will
make the style of the language clear: It is a well-known and oft-demonstrated
fact that a person whose work is incomprehensible is held in high esteem. For
example, if one were to state that the simplest way to store a value of 65536
in a 32-bit INTERCAL variable is: DO :1 <- #0$#256 any sensible programmer
would say that that was absurd. Since this is indeed the simplest method, the
programmer would be made to look foolish in front of his boss, who would of
course have happened to turn up, as bosses are wont to do. The effect would
be no less devastating for the programmer having been correct. INTERCAL has
many other peculiar features designed to make it even more unspeakable. The
Woods-Lyons implementation was actually used by many (well, at least several)
people at Princeton. The language has been recently reimplemented as
C-INTERCAL and is consequently enjoying an unprecedented level of
unpopularity; there is even an alt.lang.intercal newsgroup devoted to the
study and ... appreciation of the language on USENET.