 SNAFU principle: [from WWII army acronym for "Situation Normal, all Fucked
Up"] n. "True communication is only possible between equals, because
inferiors are more consistently rewarded for telling their superiors pleasant
lies than for telling the truth" --- a central tenet of {Discordianism} often
invoked by hackers to explain the reason authoritarian hierarchies screw up
so reliably and systematically. There is a common fable that well illustrates
this. A {hacker} says to a manager, "This is manure". Manager to
second-level, "This is fertilizer". Second-level to third-level, "This makes
things grow". Third-level to Director, "Must be good stuff". After the
subsequent disaster, the {suits} protect themselves by saying "I was
misinformed", and the programmer is demoted or fired. snail-mail: n. Paper
mail, as opposed to electronic. Sometimes written as the single word
`SnailMail'. One's postal address is, correspondingly, a `snail address'.
Derives from earlier coinage `USnail' for which there have been parody
posters and stamps made. Oppose {email}. snarf: /snarf/ vt. 1. To grab, esp.
a large document or file for the purpose of using it either with or without
the author's permission. see {BLT}. Variant: `snarf down', to snarf,
sometimes with the connotation of absorbing, processing, or understanding. "I
think I'll snarf down the list of DDT commands so I'll know what's changed
recently." 2. [in the UNIX community] to fetch a file or set of files across
a network. see also {blast}. This term was mainstream in the late 1960s
meaning `to eat piggishly'. snarf & barf: /snarf'n-barf/ n. The act of
grabbing a region of text using a {WIMP environment} and then stuffing the
contents of that region into another region or into the same region, to avoid
re-typing a command line. In the late 1960s this was a mainstream expression
for an "Eat now, regret it later" cheap-restaurant expedition. snark: [Lewis
Carroll, via the Michigan Terminal System] n. 1. A system failure. When a
user's process bombed, the operator would get a message "Help, Help, Snark in
MTS!". 2. More generally, any kind of unexplained or threatening event on a
computer. Often used to refer to events or log file entries which might
indicate an attempted security violation. 3. UUCP name of snark.thyrsus.com,
home site of the Jargon File 2.x.x versions (this lexicon). sneakernet: n.
Term used (generally with ironic intent) for transfer of electronic
information by physically carrying tape, disks, or some other media from one
machine to another. "Never underestimate the bandwidth of a station wagon
filled with magtape, or a 747 filled with CD-ROMs." Also called `Tennis-Net',
`Armpit-Net'. sniff: v.,n. Synonym for {poll}. snivitz: /sniv'itz/ n. A
hiccup in hardware or software; a small, transient problem of unknown origin
(less serious than a {snark}). SO: /ess-oh/ n. (also `S.O.') Acronym for
Significant Other, almost invariably written abbreviated and pronounced
/ess-oh/ by hackers. Used to refer to one's primary relationship, esp. a
live-in to whom one is not married. see {MOTAS}, {MOTOS}, {MOTSS}. social
science number: [IBM] n. A statistic which is {content-free}, or nearly so. A
measure derived via methods of questionable validity from data of a dubious
and vague nature. Predictively, having a social science number in hand is
seldom much better than nothing and can be considerably worse. {Management}
loves them. see also {numbers}, {math-out}, {pretty pictures}. softcopy: n.
[by analogy with `hardcopy'] A machine-readable form of corresponding
hardcopy. see {bits}. software bloat: n. The results of {second-system
effect} or {creeping featuritis}. Commonly cited examples include `ls(1)',
{X}, {BSD}, {Missed'em-five}, and {OS/2}. software rot: n. Term used to
describe the tendency of software which has not been used in a while; such
failure may be semi-humorously ascribed to {bit rot}. More commonly,
`software rot' strikes when a program's assumptions become out of date. If
the design was insufficiently {robust} this may cause it to fail in
mysterious ways. For example, due to endemic shortsightedness in the design
of COBOL programs, most will succumb to software rot when their two-digit
year counters {wrap around} at the beginning of the year 2000. Historical
note: software rot in an even funnier sense than the mythical one was a real
problem on early research computers (e.g. the R1, see {grind crank}). If a
program that depended on a peculiar instruction hadn't been run in quite a
while, the user might discover that the opcodes no longer did the things as
they used to. ("Hey, so-and-so needs an instruction to do such-and-such. We
can snarf this opcode, right? No one uses it.") Compare {bit rot}.
softwarily: /soft-weir'i-lee/ adv. In a way pertaining to software. "The
system is softwarily unreliable." The adjective `softwary' is *not* used. see
{hardwarily}. softy: [IBM] n. Hardware hackers' term for a software expert
who is largely ignorant of the mysteries of hardware. some random X: adj.
Used to indicate a member of class X, with the implication that the
particular X is interchangeable with most other Xs in whatever context was
being discussed. "I think some random cracker tripped over the guest timeout
last night." see also {J. Random}. sorcerer's apprentice mode: n. A bug in a
protocol where, under some circumstances, the receipt of a message causes
more than one message to be sent, each of which, when received, triggers the
same bug. Used esp. of such behavior caused by {bounce message} loops in
{email} software. Compare {broadcast storm}.