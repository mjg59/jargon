 WAITS:: /wayts/ n. The mutant cousin of {{TOPS-10}} used on a handful of
systems at {{SAIL}} up to 1990. There was never an `official' expansion of
WAITS (the name itself having been arrived at by a rather sideways process),
but it was frequently glossed as `West-coast Alternative to ITS'. Though
WAITS was less visible than ITS, there was frequent exchange of people and
ideas between the two communities, and innovations pioneered at WAITS exerted
enormous indirect influence. The early screen modes of {EMACS}, for example,
were directly inspired by WAITS's `E' editor --- one of a family of editors
that were the first to do `real-time editing', in which the editing commands
were invisible and where one typed text at the point of
insertion/overwriting. The modern style of multi-region windowing is said to
have originated there, and WAITS alumni at XEROX PARC and elsewhere played
major roles in the developments that led to the XEROX Star, the Macintosh,
and the Sun workstations. {Bucky bits} were also invented there --- thus, the
ALT key on every IBM PC is a WAITS legacy. One notable WAITS feature seldom
duplicated elsewhere was a news-wire interface that allowed WAITS hackers to
read, store, and filter AP and UPI dispatches from their terminals; the
system also featured a still-unusual level of support for what is now called
`multimedia' computing, allowing analog audio and video signals to be
switched to programming terminals. waldo: /wol'doh/ [From Robert A.
Heinlein's story "Waldo"] 1. A mechanical agent, such as a gripper arm,
controlled by a human limb. When these were developed for the nuclear
industry in the mid-1940s they were named after the invention described by
Heinlein in the story, which he wrote in 1942. Now known by the more generic
term `telefactoring', this technology is of intense interest to NASA for
tasks like space station maintenance. 2. At Harvard (particularly by Tom
Cheatham and students), this is used instead of {foobar} as a meta-syntactic
variable and general nonsense word. see {foo}, {bar}, {foobar}, {quux}. walk:
n.,vt. Traversal of a data structure, especially an array or linked-list data
structure in {core}. see also {codewalker}, {silly walk}, {clobber}. walk off
the end of: vt. To run past the end of an array, list, or medium after
stepping through it --- a good way to land in trouble. Often the result of an
{off-by-one error}. Compare {clobber}, {roach}, {smash the stack}. walking
drives: n. An occasional failure mode of magnetic-disk drives back in the
days when they were huge, clunky {washing machine}s. Those old {dinosaur}
parts carried terrific angular momentum; the combination of a misaligned
spindle or worn bearings and stick-slip interactions with the floor could
cause them to `walk' across a room, lurching alternate corners forward a
couple of millimeters at a time. There is a legend about a drive that walked
over to the only door to the computer room and jammed it shut; the staff had
to cut a hole in the wall in order to get at it! Walking could also be
induced by certain patterns of drive access (a fast seek across the whole
width of the disk, followed by a slow seek in the other direction). Some
bands of old-time hackers figured out how to induce disk-accessing patterns
that would do this to particular drive models and held disk-drive races.
wall: [WPI] interj. 1. An indication of confusion, usually spoken with a
quizzical tone: "Wall??" 2. A request for further explication. Compare {octal
forty}. It is said that "Wall?" really came from `like talking to a blank
wall'. It was initially used in situations where, after you had carefully
answered a question, the questioner stared at you blankly, clearly having
understood nothing that was explained. You would then throw out a "Hello,
wall?" to elicit some sort of response from the questioner. Later, confused
questioners began voicing "Wall?" themselves. wall follower: n. A person or
algorithm that compensates for lack of sophistication or native stupidity by
efficiently following some simple procedure shown to have been effective in
the past. Used of an algorithm, this is not necessarily pejorative; it
recalls `Harvey Wallbanger', the winning robot in an early AI contest (named,
of course, after the cocktail). Harvey successfully solved mazes by keeping a
`finger' on one wall and running till it came out the other end. This was
inelegant, but it was mathematically guaranteed to work on simply-connected
mazes --- and, in fact, Harvey outperformed more sophisticated robots that
tried to `learn' each maze by building an internal representation of it. Used
of humans, the term *is* pejorative and implies an uncreative, bureaucratic,
by-the-book mentality. see also {code grinder}, {droid}. wall time: n. (also
`wall clock time') 1. `Real world' time (what the clock on the wall shows),
as opposed to the system clock's idea of time. 2. The real running time of a
program, as opposed to the number of {clocks} required to execute it (on a
timesharing system these will differ, as no one program gets all the
{clocks}, and on multiprocessor systems with good thread support one may get
more processor clocks than real-time clocks). wallpaper: n. 1. A file
containing a listing (e.g., assembly listing) or a transcript, esp. a file
containing a transcript of all or part of a login session. (The idea was that
the paper for such listings was essentially good only for wallpaper, as
evidenced at Stanford, where it was used to cover windows.) Now rare, esp.
since other systems have developed other terms for it (e.g., PHOTO on
TWENEX). However, the UNIX world doesn't have an equivalent term, so perhaps
{wallpaper} will take hold there. The term probably originated on ITS, where
the commands to begin and end transcript files were `:WALBEG' and `:WALEND',
with default file `WALL PAPER' (the space was a path delimiter). 2. The
background pattern used on graphical workstations (this is techspeak under
the `Windows' graphical user interface to MS-DOS). 3. `wallpaper file' n. The
file that contains the wallpaper information before it is actually printed on
paper. (Even if you don't intend ever to produce a real paper copy of the
file, it is still called a wallpaper file.) wango: /wang'goh/ n. Random
bit-level {grovel}ling going on in a system during some unspecified
operation. Often used in combination with {mumble}. For example: "You start
with the `.o' file, run it through this postprocessor that does mumble-wango
--- and it comes out a snazzy object-oriented executable." wank: /wangk/
[Columbia University: prob. by mutation from Commonwealth slang v. `wank', to
masturbate] n.,v. Used much as {hack} is elsewhere, as a noun denoting a
clever technique or person or the result of such cleverness. May describe
(negatively) the act of hacking for hacking's sake ("Quit wanking, let's go
get supper!") or (more positively) a {wizard}. Adj. `wanky' describes
something particularly clever (a person, program, or algorithm).
Conversations can also get wanky when there are too many wanks involved. This
excess wankiness is signalled by an overload of the `wankometer' (compare
{bogometer}). When the wankometer overloads, the conversation's subject must
be changed, or all non-wanks will leave. Compare `neep-neeping' (under
{neep-neep}). Usage: U.S. only. In Britain and the Commonwealth this word is
*extremely* rude and is best avoided unless one intends to give offense.
wannabee: /won'*-bee/ (also, more plausibly, spelled `wannabe') [from a term
recently used to describe Madonna fans who dress, talk, and act like their
idol; prob. originally from biker slang] n. A would-be {hacker}. The
connotations of this term differ sharply depending on the age and exposure of
the subject. Used of a person who is in or might be entering {larval stage},
it is semi-approving; such wannabees can be annoying but most hackers
remember that they, too, were once such creatures. When used of any
professional programmer, CS academic, writer, or {suit}, it is derogatory,
implying that said person is trying to cuddle up to the hacker mystique but
doesn't, fundamentally, have a prayer of understanding what it is all about.
Overuse of terms from this lexicon is often an indication of the {wannabee}
nature. Compare {newbie}. Historical note: The wannabee phenomenon has a
slightly different flavor now (1991) than it did ten or fifteen years ago.
When the people who are now hackerdom's tribal elders were in {larval stage},
the process of becoming a hacker was largely unconscious and unaffected by
models known in popular culture --- communities formed spontaneously around
people who, *as individuals*, felt irresistibly drawn to do hackerly things,
and what wannabees experienced was a fairly pure, skill-focused desire to
become similarly wizardly. Those days of innocence are gone forever;
society's adaptation to the advent of the microcomputer after 1980 included
the elevation of the hacker as a new kind of folk hero, and the result is
that some people semi-consciously set out to *be hackers* and borrow hackish
prestige by fitting the popular image of hackers. Fortunately, to do this
really well, one has to actually become a wizard. Nevertheless, old-time
hackers tend to share a poorly articulated disquiet about the change; among
other things, it gives them mixed feelings about the effects of public
compendia of lore like this one. warm boot: n. see {boot}. wart: n. A small,
{crock}y {feature} that sticks out of an otherwise {clean} design. Something
conspicuous for localized ugliness, especially a special-case exception to a
general rule. For example, in some versions of `csh(1)', single quotes
literalize every character inside them except `!'. In ANSI C, the `??' syntax
used obtaining ASCII characters in a foreign environment is a wart. see also
{miswart}. washing machine: n. Old-style 14-inch hard disks in floor-standing
cabinets. So called because of the size of the cabinet and the `top-loading'
access to the media packs --- and, of course, they were always set on `spin
cycle'. The washing-machine idiom transcends language barriers; it is even
used in Russian hacker jargon. see also {walking drives}. The thick channel
cables connecting these were called `bit hoses' (see {hose}). water MIPS: n.
(see {MIPS}, sense 2) Large, water-cooled machines of either today's
ECL-supercomputer flavor or yesterday's traditional {mainframe} type. wave a
dead chicken: v. To perform a ritual in the direction of crashed software or
hardware that one believes to be futile but is nevertheless necessary so that
others are satisfied that an appropriate degree of effort has been expended.
"I'll wave a dead chicken over the source code, but I really think we've run
into an OS bug." Compare {voodoo programming}, {rain dance}. weasel: n.
[Cambridge] A na"ive user, one who deliberately or accidentally does things
that are stupid or ill-advised. Roughly synonymous with {loser}. wedged:
[from a common description of recto-cranial inversion] adj. 1. To be stuck,
incapable of proceeding without help. This is different from having crashed.
If the system has crashed, then it has become totally non-functioning. If the
system is wedged, it is trying to do something but cannot make progress; it
may be capable of doing a few things, but not be fully operational. For
example, a process may become wedged if it {deadlock}s with another (but not
all instances of wedging are deadlocks). Being wedged is slightly milder than
being {hung}. see also {gronk}, {locked up}, {hosed}. Describes a
{deadlock}ed condition. 2. Often refers to humans suffering misconceptions.
"He's totally wedged --- he's convinced that he can levitate through
meditation." 3. [UNIX] Specifically used to describe the state of a TTY left
in a losing state by abort of a screen-oriented program or one that has
messed with the line discipline in some obscure way. wedgie: [Fairchild] n. A
bug. Prob. related to {wedged}. wedgitude: /wedj'i-t[y]ood/ n. The quality or
state of being {wedged}. weeble: /weeb'l/ [Cambridge] interj. Used to denote
frustration, usually at amazing stupidity. "I stuck the disk in upside down."
"Weeble...." Compare {gurfle}. weeds: n. 1. Refers to development projects or
algorithms that have no possible relevance or practical application. Comes
from `off in the weeds'. Used in phrases like "lexical analysis for microcode
is serious weeds...." 2. At CDC/ETA before its demise, the phrase `go off in
the weeds' was equivalent to IBM's {branch to Fishkill} and mainstream
hackerdom's {jump off into never-never land}. weenie: n. 1. When used with a
qualifier (for example, as in {UNIX weenie}, VMS weenie, IBM weenie) this can
be either an insult or a term of praise, depending on context, tone of voice,
and whether or not it is applied by a person who considers him or herself to
be the same sort of weenie. Implies that the weenie has put a major
investment of time, effort, and concentration into the area indicated;
whether this is positive or negative depends on the hearer's judgment of how
the speaker feels about that area. see also {bigot}. 2. The semicolon
character, `;' (ASCII 0111011). Weenix: /wee'niks/ [ITS] n. A derogatory term
for {{UNIX}}, derived from {UNIX weenie}. According to one noted ex-ITSer, it
is "the operating system preferred by Unix Weenies: typified by poor
modularity, poor reliability, hard file deletion, no file version numbers,
case sensitivity everywhere, and users who believe that these are all
advantages". Some ITS fans behave as though they believe UNIX stole a future
that rightfully belonged to them. see {{ITS}}, sense 2. well-behaved: adj. 1.
[primarily {{MS-DOS}}] Said of software conforming to system interface
guidelines and standards. Well-behaved software uses the operating system to
do chores such as keyboard input, allocating memory and drawing graphics.
Oppose {ill-behaved}. 2. Software that does its job quietly and without
counterintuitive effects. Esp. said of software having an interface spec
sufficiently simple and well-defined that it can be used as a {tool} by other
software. see {cat}. well-connected: adj. Said of a computer installation,
this means that it has reliable email links with {the network} and/or that it
relays a large fraction of available {USENET} newsgroups. `Well-known' can be
almost synonymous, but also implies that the site's name is familiar to many
(due perhaps to an archive service or active USENET users). wetware:
/wet'weir/ [prob. from the novels of Rudy Rucker] n. 1. The human nervous
system, as opposed to computer hardware or software. "Wetware has 7 plus or
minus 2 temporary registers." 2. Human beings (programmers, operators,
administrators) attached to a computer system, as opposed to the system's
hardware or software. see {liveware}, {meatware}. whacker: [University of
Maryland: from {hacker}] n. 1. A person, similar to a {hacker}, who enjoys
exploring the details of programmable systems and how to stretch their
capabilities. Whereas a hacker tends to produce great hacks, a whacker only
ends up whacking the system or program in question. Whackers are often quite
egotistical and eager to claim {wizard} status, regardless of the views of
their peers. 2. A person who is good at programming quickly, though rather
poorly and ineptly. whales: n. see {like kicking dead whales down the beach}.
wheel: [from slang `big wheel' for a powerful person] n. A person who has an
active a {wheel bit}. "We need to find a wheel to un{wedge} the hung tape
drives." wheel bit: n. A privilege bit that allows the possessor to perform
some restricted operation on a timesharing system, such as read or write any
file on the system regardless of protections, change or look at any address
in the running monitor, crash or reload the system, and kill or create jobs
and user accounts. The term was invented on the TENEX operating system, and
carried over to TOPS-20, XEROX-IFS, and others. The state of being in a
privileged logon is sometimes called `wheel mode'. This term entered the UNIX
culture from TWENEX in the mid-1980s and has been gaining popularity there
(esp. at university sites). see also {root}. wheel wars: [Stanford
University] A period in {larval stage} during which student hackers hassle
each other by attempting to log each other out of the system, delete each
other's files, and otherwise wreak havoc, usually at the expense of the
lesser users. White Book: n. Syn. {K&R}. whizzy: [Sun] adj. (alt. `wizzy')
Describes a {cuspy} program; one that is feature-rich and well presented.