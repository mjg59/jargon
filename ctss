 CP/M: /see-pee-em/ n. [Control Program for Microcomputers] An early
microcomputer {OS} written by hacker Gary Kildall for 8080- and Z80-based
machines, very popular in the late 1970s until virtually wiped out by MS-DOS
after the release of the IBM PC in 1981 (legend has it that Kildall's company
blew their chance to write the OS for the IBM PC because Kildall decided to
spend the day IBM's reps wanted to meet with him enjoying the perfect flying
weather in his private plane). Many of its features and conventions strongly
resemble those of early DEC operating systems such as {TOPS-10}, OS/8, RSTS,
and RSX-11. see {MS-DOS}, {operating system}. CPU Wars: /see-pee-yoo worz/ n.
A 1979 large-format comic by Chas Andres chronicling the attempts of the
brainwashed androids of `IPM' (Impossible to Program Machines) to conquer and
destroy the peaceful denizens of HEC (Human Engineered Computers). This
rather transparent allegory featured many references to {ADVENT} and the
immortal line "Eat flaming death, minicomputer mongrels!" (uttered, of
course, by an IPM stormtrooper). It is alleged that the author subsequently
received a letter of appreciation on IBM company stationery from the
then-head of IBM's Thomas J. Watson research laboratories (then, as now, one
of the few islands of true hackerdom in the IBM archipelago). The lower loop
of the `B' in the IBM logo, it is said, had been carefully whited out. see
{eat flaming death}. cracker: n. One who breaks security on a system. Coined
ca.1985 by hackers in defense against journalistic misuse of {hacker} (q.v.,
sense #7). There had been an earlier attempt to establish `worm' in this
sense around 1981--1982 on USENET; this largely failed. crank: [from
automotive slang] vt. Verb used to describe the performance of a machine,
especially sustained performance. "This box cranks (or, cranks at) about 6
megaflops, with a burst mode of twice that on vectorized operations." crash:
1. n. A sudden, usually drastic failure. Most often said of the {system}
(q.v., sense #1), sometimes of magnetic disk drives. "Three {luser}s lost
their files in last night's disk crash." A disk crash which involves the
read/write heads dropping onto the surface of the disks and scraping off the
oxide may also be referred to as a `head crash', whereas the term `system
crash' usually, though not always, implies that the operating system or other
software was at fault. 2. vi. To fail suddenly. "Has the system just
crashed?" see {down}. Also used transitively to indicate the cause of the
crash (usually a person or a program, or both). "Those idiots playing
{SPACEWAR} crashed the system." 3. vi. Sometimes said of people hitting the
sack after a long {hacking run}; see {gronk} (sense #4). crash and burn:
vi.,n. A spectacular crash, in the mode of the conclusion of the car chase
scene from the movie `Bullitt' and many subsequent imitators. Sun-3 monitors
losing the flyback transformer and lightning strikes on VAX-11/780 backplanes
are notable crash and burn generators. The construction `crash-and-burn
machine' is reported for a computer used exclusively for alpha or {beta}
testing, or reproducing bugs (i.e., not for development). The implication is
that it wouldn't be such a disaster if that machine crashed, since only the
testers would be inconvenienced. crawling horror: n. Ancient crufty hardware
or software that forces beyond the control of the hackers at a site refuse to
let die. Like {dusty deck} or {gonkulator}, but connotes that the thing
described is not just an irritation but an active menace to health and
sanity. "Mostly we code new stuff in C, but they pay us to maintain one big
FORTRAN II application from nineteen-sixty-X that's a real crawling
horror...." Compare {WOMBAT}. cray: /kray/ n. 1. (properly, capitalized) One
of the line of supercomputers designed by Cray Research. 2. Any supercomputer
at all. 3. The {canonical} {number-crunching} machine. The term is actually
the lowercased last name of Seymour Cray, a noted computer architect and
co-founder of the company. Numerous vivid legends surround him, some true and
some admittedly invented by Cray Research brass to shape their corporate
culture and image. cray instability: n. A shortcoming of a program or
algorithm which manifests itself only when running a large problem on a
powerful machine. Generally more subtle than bugs that can be detected in
smaller problems running on a workstation or mini. crayola: n. A super-mini
or -micro computer that provides some reasonable percentage of supercomputer
performance for an unreasonably low price. Might also be a {killer micro}.
crayon: n. 1. Someone who works on Cray supercomputers. More specifically
implies a programmer, probably of the CDC ilk, probably male, and almost
certainly wearing a tie (irrespective of gender). Unicos systems types who
have a UNIX background tend not to be described as crayons. 2. A {computron}
that participates only in {number-crunching}. 3. A unit of computational
power equal to that of a single Cray-1. There is a standard joke about this
that derives from an old Crayola crayon promotional gimmick: when you buy 64
crayons you get a free sharpener. creationism: n. The (false) belief that
large, innovative designs can be completely specified in advance and then
painlessly magicked out of the void by the normal efforts of a team of
normally talented programmers. In fact, experience has shown repeatedly that
good designs arise only from evolutionary, exploratory interaction between
one (or at most a small handful of) exceptionally able designer(s) and an
active user population --- and that the first try at a big new idea is always
wrong. Unfortunately, because these truths don't fit the planning models
beloved of {management}, they are generally ignored. creeping elegance: n.
Describes a tendency for parts of a design to become {elegant} past the point
of diminishing return. This often happens at the expense of the less
interesting parts of the design, schedule, and other things deemed important
in the {Real World}. see also {creeping featurism}, {second-system effect},
{tense}. creeping featurism: /kree'ping fee'chr-izm/ n. 1. Describes a
systematic tendency to load more {chrome} and {feature}s onto systems at the
expense of whatever elegance they may have possessed when originally
designed. see also {feeping creaturism}. "You know, the main problem with
{BSD} UNIX has always been creeping featurism." 2. More generally, the
tendency for anything complicated to become even more complicated because
people keep saying, "Gee, it would be even better if it had this feature
too." (see {feature}.) The result is usually a patchwork because it grew one
ad-hoc step at a time, rather than being planned. Planning is a lot of work,
but it's easy to add just one extra little feature to help someone... and
then another... and another.... When creeping featurism gets out of hand,
it's like a cancer. Usually this term is used to describe computer programs,
but it could also be said of the federal government, the IRS 1040 form, and
new cars. A similar phenomenon sometimes afflicts conscious redesigns; see
{second-system effect}. see also {creeping elegance}. creeping featuritis:
/kree'ping fee'-chr-ie`t*s/ n. Variant of {creeping featurism}, with its own
spoonerization as `feeping creaturitis'. Some people like to reserve this
form for the disease as it actually manifests in software or hardware, as
opposed to the lurking general tendency in designers' minds. After all, -ism
means `condition' or `pursuit of', whereas -itis usually means `inflammation
of'.) cretin: /kre'tn/ or /kree'tn/ n. Congenital {loser}; an obnoxious
person; someone who can't do anything right. It has been observed that many
American hackers tend to favor the British pronunciation /kre'tn/ over
standard American /kree'tn/; it is thought this may be due to the insidious
phonetic influence of Monty Python's Flying Circus. cretinous: /kre't*n-uhs/
or /kree't*n-uhs/ adj. Wrong; non-functional; very poorly designed. Also used
pejoratively of people. Synonyms: {bletcherous}, `bagbiting' (see
{bagbiter}), {losing}, {brain-damaged}. crippleware: n. 1. Software that has
some important functionality deliberately removed, so as to entice potential
users to pay for a working version. see also {guiltware}. 2. [Cambridge]
{guiltware} that exhorts you to donate to some charity (compare {careware}).
critical mass: n. In physics, the minimum amount of fissionable material
required to sustain a chain reaction. Of a software product, describes a
condition of the software such that fixing one bug introduces one plus
{epsilon} bugs. When software achieves critical mass, it can only be
discarded and rewritten. crlf: /ker'l*f/, sometimes /kru'l*f/ or
/see-ar-el-eff/ n. (often capitalized as `CRLF') A carriage return (CR)
followed by a line feed (LF). More loosely, whatever it takes to get you from
the end of one line of text to the beginning of the next line. see {newline},
{terpri}. Under {UNIX} influence this usage has become less common (UNIX uses
a bare line feed as its `CRLF'). crock: [from the obvious mainstream
scatologism] n. 1. An awkward feature or programming technique that ought to
be made cleaner. Example: Using small integers to represent error codes
without the program interpreting them to the user (as in, for example, UNIX
`make(1)', which returns code 139 for a process that dies due to {segfault}).
2. A technique that works acceptably, but which is quite prone to failure if
disturbed in the least, for example depending on the machine opcodes having
particular bit patterns so that you can use instructions as data words too; a
tightly woven, almost completely unmodifiable structure. see {kluge},
{brittle}. Also in the adjectives `crockish' and `crocky', and the noun
`crockitude'. cross-post: [USENET] vi. To post a single article directed to
several newsgroups. Distinguished from posting the article repeatedly, once
to each newsgroup, which causes people to see it multiple times (this is very
bad form). Cross-posting without a Followup line directing responses to a
single followup group is frowned upon, as it tends to cause {followup}
articles to go to inappropriate newsgroups as people respond to only one part
of the original posting. crudware: /kruhd'weir/ n. Pejorative term for the
hundreds of megabytes of low-quality {freeware} circulated by user's groups
and BBS systems in the micro-hobbyist world. "Yet *another* set of disk
catalog utilities for {MS-DOS}? What crudware!" The related usage `fuckware'
is reported for software so bad it mutilates your disk, broadcasts to the
Internet, or perpetrates some similar fiasco. cruft: /kruhft/ 1.
[back-formation from {crufty}] 1. n. An unpleasant substance. The dust that
gathers under your bed is cruft; the TMRC dictionary correctly noted that
attacking it with a broom only produces more. 2. n. The results of shoddy
construction. 3. vt. [from hand cruft, pun on hand craft] to write assembler
code for something normally (and better) done by a compiler (see
{hand-hacking}). 4. n. Excess; superfluous junk. Esp. used of redundant or
superseded code. cruft together: vt. (also `cruft up') To throw together
something ugly but temporarily workable. Like vt. {kluge up}, but more
pejorative. "There isn't any program now to reverse all the lines of a file,
but I can probably cruft one together in about ten minutes." see {hack
together}, {hack up}, {kluge up}, {crufty}. cruftsmanship: /kruhfts'man-ship
/ n. [from {cruft}] The antithesis of craftsmanship. crufty: /kruhf'tee/
[origin unknown; poss. from `crusty' or `cruddy'] adj. 1. Poorly built,
possibly overly complex. The {canonical} example is "This is standard old
crufty DEC software." In fact, one fanciful theory of the origin of `crufty'
holds that was originally a mutation of `crusty' applied to DEC software so
old that the S characters were tall and skinny, looking more like `f'
characters. 2. Unpleasant, especially to the touch, often with encrusted
junk. Like spilled coffee smeared with peanut butter and catsup. 3. Generally
unpleasant. 4. (sometimes spelled `cruftie') n. A small crufty object (see
{frob}); often one that doesn't fit well into the scheme of things. "A LISP
property list is a good place to store crufties (or, collectively, {random}
cruft)." crumb: n. Two binary digits; a {quad}. Larger than a {bit}, smaller
than a {nybble}. Syn. {tayste}. crunch: 1. vi. To process, usually in a
time-consuming or complicated way. Connotes an essentially trivial operation
that is nonetheless painful to perform. The pain may be due to the triviality
being embedded in a loop from 1 to 1,000,000,000. "FORTRAN programs do mostly
{number-crunching}." 2. vt. To reduce the size of a file by a complicated
scheme that produces bit configurations completely unrelated to the original
data, such as by a Huffman code. (The file ends up looking like a paper
document would if somebody crunched the paper into a wad.) Since such
compression usually takes more computations than simpler methods such as
run-length encoding, the term is doubly appropriate. (This meaning is usually
used in the construction `file crunch(ing)' to distinguish it from
{number-crunching}.) see {compress}. 3. n. The character `#'. Usage: used at
XEROX and CMU, among other places. see {{ASCII}}. 4. vt. To squeeze program
source into a minimum-size representation that will still compile or execute.
The term came into being specifically for a famous program on the BBC that
crunched BASIC source in order to make it run more quickly (it was a wholly
interpretive BASIC). {Obfuscated C Contest} entries are often crunched; see
the first example under that entry. cruncha cruncha cruncha: /kruhn'ch*
kruhn'ch* kruhn'ch*/ interj. An encouragement sometimes muttered to a machine
bogged down in a serious {grovel}. Also describes a notional sound made by
grovelling hardware. see {wugga wugga}, {grind} (sense #3). cryppie:
/krip'ee/ n. A cryptographer. One who hacks or implements cryptographic
software or hardware. CTSS: /see-tee-ess-ess/ n. Compatible Time-Sharing
System. An early (1963) experiment in the design of interactive time-sharing
operating systems. Cited here because it was ancestral to {Multics}, {UNIX},
and {ITS}. The name {ITS} ("Incompatible Time-sharing System") was a hack on
CTSS, meant both as a joke and to express some basic differences in
philosophy about the way I/O services should be presented to user programs.