 SAIL: /sayl/, not /ess ay ie el/ n. 1. Stanford University Artificial
Intelligence Lab. An important site in the early development of LISP; with
the MIT AI LAB, BBN, CMU, and the UNIX community, one of the major founts of
technical innivation and hacker culture traditions (see the {WAITS} entry for
details). The SAIL machines were shut down in late May 1990, scant weeks
after the MIT AI lab's ITS cluster went down for the last time. 2. The
Stanford Artificial Intelligence Language used at SAIL (sense #1). It was an
Algol-60 derivative with some new data types intended for building search
trees and association lists and a coroutining facility. salescritter:
/sayls'kri`tr/ n. Pejorative hackerism for a computer salesperson. Hackers
tell the following joke: Q. What's the difference between a used car dealer
and a computer salesman? A. The used car dealer knows he's lying. This
reflects the widespread hacker belief that salescritters are self-selected
for stupidity (after all, if they had brains and the inclination to use them,
they'd be in programming). The terms `salesthing' and `salesdroid' are also
common. Compare {marketroid}, {suit}. salt mines: n. Dense quarters housing
large numbers of programmers working long hours on grungy projects, with some
hope of seeing the end of the tunnel in N years. Noted for their absence of
sunshine. Compare {playpen}, {sandbox}. salt substrate: [MIT] n. Collective
noun used to refer to potato chips, pretzels, saltines, or any other form of
snack food essentially designed as a carrier for sodium chloride. From the
technical term `chip substrate', used to refer to the silicon on the top of
which the active parts of integrated circuits are deposited.
same-day-service: n. Ironic term is used to describe slow response time,
particularly with respect to {MS-DOS} system calls. Such response time is a
major incentive for programmers to write programs that are not
{well-behaved}. see also {PC-ism}. sandbender: [IBM] n. A person involved
with silicon lithography and the physical design of chips. Compare
{ironmonger}, {polygon pusher}. sandbox: n. (or `sandbox, the') Common term
for the R&D department at many software and computer companies (where hackers
in commercial environments are likely to be found). Half-derisive, but
reflects the truth that research is a form of creative play. Compare
{playpen}. sanity check: n. 1. The act of checking a piece of code for
completely stupid mistakes. Implies that the check is to make sure the author
was sane when it was written; e.g., if a piece of scientific software relied
on a particular formula and was giving unexpected results, one might first
look at the nesting of parentheses or the coding of the formula, as a {sanity
check}, before looking at the more complex I/O or data structure manipulation
routines. Compare {reality check}. 2. A run-time test, either validating
input or ensuring that the program hasn't screwed up internally (producing an
inconsistent value or state). say: vt. In some contexts, to type to a
terminal. "To list a directory verbosely, you have to say `ls -l'". Tends to
imply a carriage-return-terminated command (a `sentence'). A computer may
also be said to `say' things to you even if it doesn't have a speech
synthesizer, by displaying them on a terminal in response to your commands.
Hackers find it odd that this usage confuses other people. Science-Fiction
Fandom:: n. Another voluntary subculture having a very heavy overlap with
hackerdom; most hackers read SF and/or fantasy fiction avidly, and many go to
`cons' (SF conventions) or are involved in fandom-connected activities like
the Society for Creative Anachronism. Some hacker jargon originated in SF
fandom; see {defenestration}, {great-wall}, {cyberpunk}, {h}, {ha ha only
serious}, {IMHO}, {mundane}, {neep-neep}, {Real Soon Now}. Additionally, the
jargon terms {cowboy}, {cyberspace}, {de-rezz}, {go flatline}, {ice},
{virus}, {wetware}, {wirehead}, and {worm} originated in SF itself. scram
switch: [from the nuclear power industry] n. An emergency-power-off switch
(see {Big Red Switch}), esp. one positioned to be easily hit by evacuating
personnel. In general, this is *not* something you frob lightly; these are
installed in a {dinosaur pen} for use in case of electrical fire or in case
some luckless {field servoid} should put 120 volts across himself while
{Easter egging}. scratch: 1. [from `scratchpad'] adj. Describes a device or
recording medium attached to a machine for testing or temporary-use purposes;
one that can be {scribble}d on without loss. Usually in the combining forms
`scratch memory', `scratch register', `scratch disk', `scratch tape',
`scratch volume'. see {scratch monkey}. 2. [primarily IBM] vt. To delete (as
in a file). scratch monkey: n. As in, "Before testing or reconfiguring,
always mount a...", a proverb used to advise caution when dealing with
irreplaceable data or devices. Used to refer to any non-expendable device or
scratch volume hooked to a computer, in memory of Mabel, the Swimming Wonder
Monkey who expired when a computer vendor PM'd a machine which was regulating
the gas mixture that the monkey was breathing at the time. see Appendix A.
See {scratch}. screw: [MIT] n. A {lose}, usually in software. Especially used
for user-visible misbehavior caused by a bug or misfeature. screwage:
/skroo'@j/ n. Like {lossage} but connotes that the failure is due to a
designed-in misfeature rather than a simple inadequacy or mere bug. scribble:
n. To modify a data structure in a random and unintentionally destructive
way. "Bletch! Somebody's disk-compactor program went berserk and scribbled on
the i-node table." "It was working fine until one of the allocation routines
scribbled on low core." Synonymous with {trash}; compare {mung}, which
conveys a bit more intention, and {mangle}, which is more violent and final.
scrog: /skrog/ [Bell Labs] vt. To damage, trash, or corrupt a data structure.
"The cblock got scrogged." Also reported as `skrog', and ascribed to `The
Wizard of Id' comix. Equivalent to {scribble} or {mangle} scrozzle: /skroz'l/
vt. Used when a self-modifying code segment runs incorrectly and corrupts the
running program or vital data. "The damn compiler scrozzled itself again!"