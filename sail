 SAIL:: /sayl/, not /S-A-I-L/ n. 1. Stanford Artificial Intelligence Lab. An
important site in the early development of LISP; with the MIT AI Lab, BBN,
CMU, and the UNIX community, one of the major wellsprings of technical
innovation and hacker-culture traditions (see the {{WAITS}} entry for
details). The SAIL machines were officially shut down in late May 1990, scant
weeks after the MIT AI Lab's ITS cluster was officially decommissioned. 2.
The Stanford Artificial Intelligence Language used at SAIL (sense 1). It was
an Algol-60 derivative with a coroutining facility and some new data types
intended for building search trees and association lists. salescritter:
/sayls'kri`tr/ n. Pejorative hackerism for a computer salesperson. Hackers
tell the following joke: Q. What's the difference between a used-car dealer
and a computer salesman? A. The used-car dealer knows he's lying. This
reflects the widespread hacker belief that salescritters are self-selected
for stupidity (after all, if they had brains and the inclination to use them,
they'd be in programming). The terms `salesthing' and `salesdroid' are also
common. Compare {marketroid}, {suit}, {droid}. salsman: /salz'm*n/ v. To
flood a mailing list or newsgroup with huge amounts of useless, trivial or
redundant information. From the name of a hacker who has frequently done this
on some widely distributed mailing lists. salt mines: n. Dense quarters
housing large numbers of programmers working long hours on grungy projects,
with some hope of seeing the end of the tunnel in N years. Noted for their
absence of sunshine. Compare {playpen}, {sandbox}. salt substrate: [MIT] n.
Collective noun used to refer to potato chips, pretzels, saltines, or any
other form of snack food designed primarily as a carrier for sodium chloride.
From the technical term `chip substrate', used to refer to the silicon on the
top of which the active parts of integrated circuits are deposited. same-day
service: n. Ironic term used to describe long response time, particularly
with respect to {{MS-DOS}} system calls (which ought to require only a tiny
fraction of a second to execute). Such response time is a major incentive for
programmers to write programs that are not {well-behaved}. see also {PC-ism}.
sandbender: [IBM] n. A person involved with silicon lithography and the
physical design of chips. Compare {ironmonger}, {polygon pusher}. sandbox: n.
(or `sandbox, the') Common term for the R&D department at many software and
computer companies (where hackers in commercial environments are likely to be
found). Half-derisive, but reflects the truth that research is a form of
creative play. Compare {playpen}. sanity check: n. 1. The act of checking a
piece of code (or anything else, e.g., a USENET posting) for completely
stupid mistakes. Implies that the check is to make sure the author was sane
when it was written; e.g., if a piece of scientific software relied on a
particular formula and was giving unexpected results, one might first look at
the nesting of parentheses or the coding of the formula, as a {sanity check},
before looking at the more complex I/O or data structure manipulation
routines, much less the algorithm itself. Compare {reality check}. 2. A
run-time test, either validating input or ensuring that the program hasn't
screwed up internally (producing an inconsistent value or state). Saturday
night special: [from police slang for a cheap handgun] n. A program or
feature kluged together during off hours, under a deadline, and in response
to pressure from a {salescritter}. Such hacks are dangerously unreliable, but
all too often sneak into a production release after insufficient review. say:
vt. 1. To type to a terminal. "To list a directory verbosely, you have to say
`ls -l'." Tends to imply a {newline}-terminated command (a `sentence'). 2. A
computer may also be said to `say' things to you, even if it doesn't have a
speech synthesizer, by displaying them on a terminal in response to your
commands. Hackers find it odd that this usage confuses {mundane}s.
science-fiction fandom:: n. Another voluntary subculture having a very heavy
overlap with hackerdom; most hackers read SF and/or fantasy fiction avidly,
and many go to `cons' (SF conventions) or are involved in fandom-connected
activities such as the Society for Creative Anachronism. Some hacker jargon
originated in SF fandom; see {defenestration}, {great-wall}, {cyberpunk},
{h}, {ha ha only serious}, {IMHO}, {mundane}, {neep-neep}, {Real Soon Now}.
Additionally, the jargon terms {cowboy}, {cyberspace}, {de-rezz}, {go
flatline}, {ice}, {virus}, {wetware}, {wirehead}, and {worm} originated in SF
stories. scram switch: [from the nuclear power industry] n. An
emergency-power-off switch (see {Big Red Switch}), esp. one positioned to be
easily hit by evacuating personnel. In general, this is *not* something you
{frob} lightly; these often initiate expensive events (such as Halon dumps)
and are installed in a {dinosaur pen} for use in case of electrical fire or
in case some luckless {field servoid} should put 120 volts across himself
while {Easter egging}. scratch: 1. [from `scratchpad'] adj. Describes a data
structure or recording medium attached to a machine for testing or
temporary-use purposes; one that can be {scribble}d on without loss. Usually
in the combining forms `scratch memory', `scratch register', `scratch disk',
`scratch tape', `scratch volume'. see {scratch monkey}. 2. [primarily IBM]
vt. To delete (as in a file). scratch monkey: n. As in "Before testing or
reconfiguring, always mount a {scratch monkey}", a proverb used to advise
caution when dealing with irreplaceable data or devices. Used to refer to any
scratch volume hooked to a computer during any risky operation as a
replacement for some precious resource or data that might otherwise get
trashed. This term preserves the memory of Mabel, the Swimming Wonder Monkey,
star of a biological research program at the University of Toronto ca. 1986.
Mabel was not (so the legend goes) your ordinary monkey; the university had
spent years teaching her how to swim, breathing through a regulator, in order
to study the effects of different gas mixtures on her physiology. Mabel
suffered an untimely demise one day when DEC {PM}ed the PDP-11 controlling
her regulator (see also {provocative maintainance}). It is recorded that,
after calming down an understandably irate customer sufficiently to ascertain
the facts of the matter, a DEC troubleshooter called up the {field circus}
manager responsible and asked him sweetly, "Can you swim?" Not all the
consequences to humans were so amusing; the sysop of the machine in question
was nearly thrown in jail at the behest of certain clueless droids at the
local `humane' society. The moral is clear: When in doubt, always mount a
scratch monkey. screw: [MIT] n. A {lose}, usually in software. Especially
used for user-visible misbehavior caused by a bug or misfeature. This use has
become quite widespread outside MIT. screwage: /skroo'*j/ n. Like {lossage}
but connotes that the failure is due to a designed-in misfeature rather than
a simple inadequacy or a mere bug. scribble: n. To modify a data structure in
a random and unintentionally destructive way. "Bletch! Somebody's
disk-compactor program went berserk and scribbled on the i-node table." "It
was working fine until one of the allocation routines scribbled on low core."
Synonymous with {trash}; compare {mung}, which conveys a bit more intention,
and {mangle}, which is more violent and final. scrog: /skrog/ [Bell Labs] vt.
To damage, trash, or corrupt a data structure. "The list header got
scrogged." Also reported as `skrog', and ascribed to the comic strip "The
Wizard of Id". Equivalent to {scribble} or {mangle}. scrool: /skrool/ [from
the pioneering Roundtable chat system in Houston ca. 1984; prob. originated
as a typo for `scroll'] n. The log of old messages, available for later
perusal or to help one get back in synch with the conversation. It was
originally called the `scrool monster', because an early version of the
roundtable software had a bug where it would dump all 8K of scrool on a
user's terminal. scrozzle: /skroz'l/ vt. Used when a self-modifying code
segment runs incorrectly and corrupts the running program or vital data. "The
damn compiler scrozzled itself again!"