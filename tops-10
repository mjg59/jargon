 QIC and DDS tapes. Syn. {round tape}. :maggotbox: /mag'*t-boks/ n. see
{Macintrash}. This is even more derogatory. :magic: 1. adj. As yet
unexplained, or too complicated to explain; compare {automagically} and
(Arthur C.) Clarke's Third Law: "Any sufficiently advanced technology is
indistinguishable from magic." "TTY echoing is controlled by a large number
of magic bits." "This routine magically computes the parity of an 8-bit byte
in three instructions." 2. adj. Characteristic of something that works
although no one really understands why (this is especially called {black
magic}). 3. n. [Stanford] A feature not generally publicized that allows
something otherwise impossible, or a feature formerly in that category but
now unveiled. 4. n. The ultimate goal of all engineering & development,
elegance in the extreme; from the first corollary to Clarke's Third Law: "Any
technology distinguishable from magic is insufficiently advanced". Parodies
playing on these senses of the term abound; some have made their way into
serious documentation, as when a MAGIC directive was described in the Control
Card Reference for GCOS c.1978. For more about hackish `magic', see {Appendix
A}. Compare {black magic}, {wizardly}, {deep magic}, {heavy wizardry}. :magic
cookie: n. [Unix; common] 1. Something passed between routines or programs
that enables the receiver to perform some operation; a capability ticket or
opaque identifier. Especially used of small data objects that contain data
encoded in a strange or intrinsically machine-dependent way. E.g., on
non-Unix OSes with a non-byte-stream model of files, the result of `ftell(3)'
may be a magic cookie rather than a byte offset; it can be passed to
`fseek(3)', but not operated on in any meaningful way. The phrase `it hands
you a magic cookie' means it returns a result whose contents are not defined
but which can be passed back to the same or some other program later. 2. An
in-band code for changing graphic rendition (e.g., inverse video or
underlining) or performing other control functions (see also {cookie}). Some
older terminals would leave a blank on the screen corresponding to
mode-change magic cookies; this was also called a {glitch} (or occasionally a
`turd'; compare {mouse droppings}). see also {cookie}. :magic number: n.
[Unix/C; common] 1. In source code, some non-obvious constant whose value is
significant to the operation of a program and that is inserted
inconspicuously in-line ({hardcoded}), rather than expanded in by a symbol
set by a commented `#define'. Magic numbers in this sense are bad style. 2. A
number that encodes critical information used in an algorithm in some opaque
way. The classic examples of these are the numbers used in hash or CRC
functions, or the coefficients in a linear congruential generator for
pseudo-random numbers. This sense actually predates and was ancestral to the
more commonsense 1. 3. Special data located at the beginning of a binary data
file to indicate its type to a utility. Under Unix, the system and various
applications programs (especially the linker) distinguish between types of
executable file by looking for a magic number. Once upon a time, these magic
numbers were PDP-11 branch instructions that skipped over header data to the
start of executable code; 0407, for example, was octal for `branch 16 bytes
relative'. Many other kinds of files now have magic numbers somewhere; some
magic numbers are, in fact, strings, like the `!<arch>' at the beginning of a
Unix archive file or the `%!' leading PostScript files. Nowadays only a
{wizard} knows the spells to create magic numbers. How do you choose a fresh
magic number of your own? Simple -- you pick one at random. see? It's magic!
_The_ magic number, on the other hand, is 7+/-2. see "The magical number
seven, plus or minus two: some limits on our capacity for processing
information" by George Miller, in the "Psychological Review" 63:81-97 (1956).
This classic paper established the number of distinct items (such as numeric
digits) that humans can hold in short-term memory. Among other things, this
strongly influenced the interface design of the phone system. :magic smoke:
n. A substance trapped inside IC packages that enables them to function (also
called `blue smoke'; this is similar to the archaic `phlogiston' hypothesis
about combustion). Its existence is demonstrated by what happens when a chip
burns up -- the magic smoke gets let out, so it doesn't work any more. see
{smoke test}, {let the smoke out}. Usenetter Jay Maynard tells the following
story: "Once, while hacking on a dedicated Z80 system, I was testing code by
blowing EPROMs and plugging them in the system, then seeing what happened.
One time, I plugged one in backwards. I only discovered that _after_ I
realized that Intel didn't put power-on lights under the quartz windows on
the tops of their EPROMs -- the die was glowing white-hot. Amazingly, the
EPROM worked fine after I erased it, filled it full of zeros, then erased it
again. For all I know, it's still in service. Of course, this is because the
magic smoke didn't get let out." Compare the original phrasing of {Murphy's
Law}. :mail storm: n. [from {broadcast storm}, influenced by `maelstrom']
What often happens when a machine with an Internet connection and active
users re-connects after extended downtime -- a flood of incoming mail that
brings the machine to its knees. see also {hairball}. :mailbomb: (also mail
bomb) [Usenet] 1. v. To send, or urge others to send, massive amounts of
{email} to a single system or person, esp. with intent to crash or {spam} the
recipient's system. Sometimes done in retaliation for a perceived serious
offense. Mailbombing is itself widely regarded as a serious offense -- it can
disrupt email traffic or other facilities for innocent users on the victim's
system, and in extreme cases, even at upstream sites. 2. n. An automatic
procedure with a similar effect. 3. n. The mail sent. Compare {letterbomb},
{nastygram}, {BLOB} (sense 2), {list-bomb}. :mailing list: n. (often
shortened in context to `list') 1. An {email} address that is an alias (or
{macro}, though that word is never used in this connection) for many other
email addresses. Some mailing lists are simple `reflectors', redirecting mail
sent to them to the list of recipients. Others are filtered by humans or
programs of varying degrees of sophistication; lists filtered by humans are
said to be `moderated'. 2. The people who receive your email when you send it
to such an address. Mailing lists are one of the primary forms of hacker
interaction, along with {Usenet}. They predate Usenet, having originated with
the first UUCP and ARPANET connections. They are often used for private
information-sharing on topics that would be too specialized for or
inappropriate to public Usenet groups. Though some of these maintain almost
purely technical content (such as the Internet Engineering Task Force mailing
list), others (like the `sf-lovers' list maintained for many years by Saul
Jaffe) are recreational, and many are purely social. Perhaps the most
infamous of the social lists was the eccentric bandykin distribution; its
latter-day progeny, lectroids and tanstaafl, still include a number of the
oddest and most interesting people in hackerdom. Mailing lists are easy to
create and (unlike Usenet) don't tie up a significant amount of machine
resources (until they get very large, at which point they can become
interesting torture tests for mail software). Thus, they are often created
temporarily by working groups, the members of which can then collaborate on a
project without ever needing to meet face-to-face. Much of the material in
this lexicon was criticized and polished on just such a mailing list (called
`jargon-friends'), which included all the co-authors of Steele-1983. :main
loop: n. The top-level control flow construct in an input- or event-driven
program, the one which receives and acts or dispatches on the program's
input. see also {driver}. :mainframe: n. Term originally referring to the
cabinet containing the central processor unit or `main frame' of a
room-filling {Stone Age} batch machine. After the emergence of smaller
`minicomputer' designs in the early 1970s, the traditional {big iron}
machines were described as `mainframe computers' and eventually just as
mainframes. The term carries the connotation of a machine designed for batch
rather than interactive use, though possibly with an interactive timesharing
operating system retrofitted onto it; it is especially used of machines built
by IBM, Unisys, and the other great {dinosaur}s surviving from computing's
{Stone Age}. It has been common wisdom among hackers since the late 1980s
that the mainframe architectural tradition is essentially dead (outside of
the tiny market for {number-crunching} supercomputers (see {cray})), having
been swamped by the recent huge advances in IC technology and low-cost
personal computing. The wave of failures, takeovers, and mergers among
traditional mainframe makers in the early 1990s bore this out. The biggest
mainframer of all, IBM, was compelled to re-invent itself as a huge
systems-consulting house. (see {dinosaurs mating} and {killer micro}).
:management: n. 1. Corporate power elites distinguished primarily by their
distance from actual productive work and their chronic failure to manage (see
also {suit}). Spoken derisively, as in "_Management_ decided that ...". 2.
Mythically, a vast bureaucracy responsible for all the world's minor
irritations. Hackers' satirical public notices are often signed `The Mgt';
this derives from the "Illuminatus" novels (see the {Bibliography} in
Appendix C). :mandelbug: /man'del-buhg/ n. [from the Mandelbrot set] A bug
whose underlying causes are so complex and obscure as to make its behavior
appear chaotic or even non-deterministic. This term implies that the speaker
thinks it is a {Bohr bug}, rather than a {heisenbug}. see also
{schroedinbug}. :manged: /mahnjd/ n. [probably from the French `manger' or
Italian `mangiare', to eat; perhaps influenced by English `mange', `mangy']
adj. Refers to anything that is mangled or damaged, usually beyond repair.
"The disk was manged after the electrical storm." Compare {mung}. :mangle:
vt. 1. Used similarly to {mung} or {scribble}, but more violent in its
connotations; something that is mangled has been irreversibly and totally
trashed. 2. To produce the {mangled name} corresponding to a C++ declaration.
:mangled name: n. A name, appearing in a C++ object file, that is a coded
representation of the object declaration as it appears in the source. Mangled
names are used because C++ allows multiple objects to have the same name, as
long as they are distinguishable in some other way, such as by having
different parameter types. Thus, the internal name must have that additional
information embedded in it, using the limited character set allowed by most
linkers. For instance, one popular compiler encodes the standard library
function declaration "memchr(const void*,int,unsigned int)" as
"@memchr$qpxviui". :mangler: n. [DEC] A manager. Compare {management}. Note
that {system mangler} is somewhat different in connotation. :manularity:
/man`yoo-la'ri-tee/ n. [prob. fr. techspeak `manual' + `granularity'] A
notional measure of the manual labor required for some task, particularly one
of the sort that automation is supposed to eliminate. "Composing English on
paper has much higher manularity than using a text editor, especially in the
revising stage." Hackers tend to consider manularity a symptom of primitive
methods; in fact, a true hacker confronted with an apparent requirement to do
a computing task {by hand} will inevitably seize the opportunity to build
another tool (see {toolsmith}). :marbles: pl.n. [from mainstream "lost all
his/her marbles"] The minimum needed to build your way further up some
hierarchy of tools or abstractions. After a bad system crash, you need to
determine if the machine has enough marbles to come up on its own, or enough
marbles to allow a rebuild from backups, or if you need to rebuild from
scratch. "This compiler doesn't even have enough marbles to compile {hello
world}." :marginal: adj. [common] 1. [techspeak] An extremely small change.
"A marginal increase in {core} can decrease {GC} time drastically." In
everyday terms, this means that it is a lot easier to clean off your desk if
you have a spare place to put some of the junk while you sort through it. 2.
Of little merit. "This proposed new feature seems rather marginal to me." 3.
Of extremely small probability of {win}ning. "The power supply was rather
marginal anyway; no wonder it fried." :Marginal Hacks: n. Margaret Jacks
Hall, a building into which the Stanford AI Lab was moved near the beginning
of the 1980s (from the {D. C. Power Lab}). :marginally: adv. Slightly. "The
ravs here are only marginally better than at Small Eating Place." see
{epsilon}. :marketroid: /mar'k*-troyd/ n. alt. `marketing slime',
`marketeer', `marketing droid', `marketdroid'. A member of a company's
marketing department, esp. one who promises users that the next version of a
product will have features that are not actually scheduled for inclusion, are
extremely difficult to implement, and/or are in violation of the laws of
physics; and/or one who describes existing features (and misfeatures) in
ebullient, buzzword-laden adspeak. Derogatory. Compare {droid}. :Mars: n. A
legendary tragic failure, the archetypal Hacker Dream Gone Wrong. Mars was
the code name for a family of PDP-10 compatible computers built by Systems
Concepts (now, The SC Group): the multi-processor SC-30M, the small
uniprocessor SC-25M, and the never-built superprocessor SC-40M. These
machines were marvels of engineering design; although not much slower than
the unique {Foonly} F-1, they were physically smaller and consumed less power
than the much slower {DEC} KS10 or Foonly F-2, F-3, or F-4 machines. They
were also completely compatible with the DEC KL10, and ran all KL10 binaries
(including the operating system) with no modifications at about 2-3 times
faster than a KL10. When DEC cancelled the Jupiter project in 1983, Systems
Concepts should have made a bundle selling their machine into shops with a
lot of software investment in PDP-10s, and in fact their spring 1984
announcement generated a great deal of excitement in the PDP-10 world.
TOPS-10 was running on the Mars by the summer of 1984, and TOPS-20 by early
fall. Unfortunately, the hackers running Systems Concepts were much better at
designing machines than at mass producing or selling them; the company
allowed itself to be sidetracked by a bout of perfectionism into continually
improving the design, and lost credibility as delivery dates continued to
slip. They also overpriced the product ridiculously; they believed they were
competing with the KL10 and VAX 8600 and failed to reckon with the likes of
Sun Microsystems and other hungry startups building workstations with power
comparable to the KL10 at a fraction of the price. By the time SC shipped the
first SC-30M to Stanford in late