 :space-cadet keyboard: n. A now-legendary device used on MIT LISP machines,
which inspired several still-current jargon terms and influenced the design
of {EMACS}. It was equipped with no fewer than *seven* shift keys: four keys
for {bucky bits} (`control', `meta', `hyper', and `super') and three like
regular shift keys, called `shift', `top', and `front'. Many keys had three
symbols on them: a letter and a symbol on the top, and a Greek letter on the
front. For example, the `L' key had an `L' and a two-way arrow on the top,
and the Greek letter lambda on the front. By pressing this key with the right
hand while playing an appropriate `chord' with the left hand on the shift
keys, you could get the following results: L lowercase l shift-L uppercase L
front-L lowercase lambda front-shift-L uppercase lambda top-L two-way arrow
(front and shift are ignored) And of course each of these might also be typed
with any combination of the control, meta, hyper, and super keys. On this
keyboard, you could type over 8000 different characters! This allowed the
user to type very complicated mathematical text, and also to have thousands
of single-character commands at his disposal. Many hackers were actually
willing to memorize the command meanings of that many characters if it
reduced typing time (this attitude obviously shaped the interface of EMACS).
Other hackers, however, thought having that many bucky bits was overkill, and
objected that such a keyboard can require three or four hands to operate. see
{bucky bits}, {cokebottle}, {double bucky}, {meta bit}, {quadruple bucky}.
Note: early versions of this entry incorrectly identified the space-cadet
keyboard with the `Knight keyboard'. Though both were designed by Tom Knight,
the latter term was properly applied only to a keyboard used for ITS on the
PDP-10 and modeled on the Stanford keyboard (as described under {bucky
bits}). The true space-cadet keyboard evolved from the first Knight keyboard.