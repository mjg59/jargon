 VAXen: /vak'sn/ [from `oxen', perhaps influenced by `vixen'] n. (alt.
`vaxen') The plural standardly used among hackers for the DEC VAX computers.
"Our installation has four PDP-10s and twenty vaxen." see {boxen}. vaxism: n.
A piece of code that exhibits {vaxocentrism} in critical areas. Compare
{PC-ism}, {unixism}. vaxocentrism: /vak`soh-sen'trizm/ [analogy with
`ethnocentrism'] n. A notional disease said to afflict C programmers who
persist in coding according to certain assumptions valid (esp. under UNIX) on
{VAXen}, but false elsewhere (this can create substantial portability
problems). Among these are: 1. The assumption that dereferencing a null
pointer is safe because it is all bits zero, and location 0 is readable and
zero (it may instead cause an illegal-address trap on non-VAXen, and even on
VAXen under OSs other than BSD UNIX). 2. The assumption that pointer and
integer types are the same size, and that pointers can be stuffed into
integer variables and drawn back out without being truncated or mangled. 3.
The assumption that a data type of any size may begin at any byte address in
memory (for example, that you can freely construct and dereference a pointer
to a word-sized object at an odd address). On many (esp. RISC) architectures
better optimized for {HLL} execution speed this is invalid and can cause an
illegal address fault or bus error. 4. The (related) assumption that there is
no `padding' at the end of types and that in an array you can thus step right
from the last byte of a previous component to the first byte of the next one.
5. The assumption that memory address space is globally flat and that the
array reference foo[-1] is necessarily valid. This is not true on
segment-addressed machines like Intel chips (yes, segmentation is universally
considered a {brain-damaged} way to design, but that is a separate issue). 6.
The assumption that objects can be arbitrarily large with no special
considerations (again, not true on segmented architectures). 7. The
assumption that the parameters of a routine are stored in memory,
contiguously, and in strictly ascending or descending order (fails on many
RISC architectures). 8. The assumption that bits and addressable units within
an object are ordered in the same way and that this order is a constant of
nature (fails on {big-endian} machines). 9. The assumption that it is
meaningful to compare pointers to different objects not located within the
same array, or to objects of different types (the former fails on segmented
architectures, the latter on word-oriented machines or others with multiple
pointer formats). 10. The assumption that a pointer to any one type can
freely be cast into a pointer to any other type (fails on word-oriented
machines or others with multiple pointer formats). 11. The assumption that an
`int' is 32 bits (fails on 286-based systems and even on 386 and 68000
systems under some compilers), or (nearly equivalently) the assumption that
`sizeof(int) == sizeof(long)'. 12. The assumption that argv[] is writable
(fails in some embedded-systems C environments). 13. The assumption that
characters are signed. 14. The assumption that all pointers are the same size
and format, which means you don't have to worry about getting the types
correct in calls (fails on word-oriented machines or others with multiple
pointer formats). Note that a programmer can be validly be accused of
vaxocentrism even if he/she has never seen a VAX. The terms `vaxocentricity'
and `all-the-world's-a-VAX syndrome' have been used synonymously. vdiff:
/vee'dif/ v.,n. Visual diff. The operation of finding differences between two
files by {eyeball search}. see {diff}. veeblefester: /vee'b@l-fes`tr/ [from
the `Born Loser' comix via Commodore; prob. originally from Mad Magazine's
`Veeblefetzer' c. 1960] n. Any obnoxious person engaged in the alleged
professions of marketing or management. Antonym of {hacker}. Compare {suit},
{marketroid}. Venus flytrap: [after the insect-eating plant] n. see {firewall
machine}. verbage: /ver'b@j/ n. Deliberate misspelling/mispronunciation of
{verbiage} that assimilates it to the word `garbage'. Compare {content-free}.
More pejorative than `verbiage'. verbiage: n. When the context involves a
software or hardware system, this refers to {{documentation}}. This term
borrows the connotations of mainstream `verbiage' to suggest that the
documentation is of marginal utility, and that the motives from which it is
produced have little to do with the ostensible subject. Version 7: alt. V7
/vee se'vn/ n. The 1978 unsupported release of {UNIX} ancestral to all
current commercial versions. Before the release of the POSIX/SVID standards,
V7's features were often treated as a UNIX portability baseline. see {BSD},
{USG UNIX}, {UNIX}. Some old-timers impatient with commercialization and
kernel bloat still maintain that V7 was the Last True UNIX. vgrep: /vee'grep/
v.,n. Visual grep. The operation of finding patterns in a file {by hand}. see
{grep}; compare {vdiff}. vi: /vee ie/, *not* /vie/ and *never* /siks/ [from
`Visual Interface'] n. A screen editor crufted together by Bill Joy for an
early {BSD} version. Became the de-facto standard UNIX editor and a nearly
undisputed hacker favorite until the rise of {EMACS} after about 1984. Tends
to frustrate new users no end, as it will neither take commands while
accepting input text nor vice versa, and the default setup provides no
indication of which mode one is in (one correspondent accordingly reports
that he has often heard the editor's name pronounced /viel/). Nevertheless it
is still widely used (about half the respondents in a 1991 USENET poll
preferred it), and even EMACS fans often resort to it as a mail editor and
for small editing jobs (mainly because it starts up faster than bulky EMACS).
see {holy wars}. videotex: n.obs. An electronic service offering people the
privilege of paying to read the weather on their television screens instead
of having somebody read it to them for free while they brush their teeth. The
idea bombed, because by the time videotex was practical the installed base of
personal computers could hook up to timesharing services and do the things
videotex might have been worthwhile for better and cheaper. Videotex planners
badly overestimated both the appeal of getting information from a computer
and the cost of local intelligence at the user's end. Like the {gorilla arm}
effect, this has been a cautionary tale to hackers ever since. virgin: adj.
Unused, in reference to an instantiation of a program. "Let's bring up a
virgin system and see if it crashes again." Esp. useful after contracting a
{virus} through {SEX}. Also, by extension, unused buffers and the like within
a program. virtual: [via the technical term `virtual memory', prob. fr. the
term `virtual image' in optics] adj. 1. Common alternative to {logical}. 2.
Simulated; performing the functions of something that isn't really there. An
imaginative child's doll may be a virtual playmate. Usage: never used with
compass directions. virtual Friday: n. The last day before an extended
weekend, if that day is not a `real' Friday. For example, the U.S. holiday
Thanksgiving is always on a Thursday. The next day is often also taken as a
holiday or extra day off, in which case Wednesday of that week is a virtual
Friday (and Friday is a virtual Saturday). There are also `virtual Mondays'
that are actually Tuesdays, after the three-day weekends associated with many
U.S. national holidays. virtual reality: n. 1. Computer simulations that
involve OB3D graphics and use devices such as the Dataglove to allow the user
to interact with the simulation. see {cyberspace}. 2. A form of network
interaction incorporating aspects of role-playing games, interactive theater,
improvisational comedy, and `true confessions' magazines. In a virtual
reality forum (such as USENET's alt.callahans newsgroup or the {MUD}
experiments on Internet), interaction between the participants is written
like a shared novel complete with scenery, `foreground characters' which may
be personae utterly unlike the people who write them, and common `background
characters' manipulable by all parties. The one iron law is that you may not
write irreversible changes to a character without the consent of the person
who `owns' it. Otherwise anything goes. see {bamf}, {cyberspace}. virus:
[from the obvious analogy with biological viruses, via SF] n. A cracker
program that searches out other programs and `infects' them by embedding a
copy of itself in them, so that when these programs are executed, the
embedded virus is executed, too, thus propagating the `infection'. This
normally happens transparently to the user. The virus may do nothing but
propagate itself. Usually, however, after propagating silently for a while it
starts doing things like writing cute messages on the terminal or playing
strange tricks with your display (some viruses include nice {display hack}s).
Many nasty viruses, written by particularly perversely minded {cracker}s, do
irreversible damage, like nuking all the user's files. In mid-1991, viruses
have become a serious problem, especially among IBM PC and Macintosh users
(the lack of security on these machines enables viruses to spread easily,
even infecting the operating system). The production of special anti-virus
software has become an industry, and a number of exaggerated media reports
have caused outbreaks of near hysteria among users, to the point where many
{luser}s tend to blame *everything* that doesn't work as they had expected on
virus attacks. Accordingly, this sense of `virus' has passed not only into
techspeak but into popular usage as well (where it is often incorrectly used
to denote a worm). Compare {Trojan horse}, {back door}, {worm}; see also
{UNIX conspiracy}. visionary: n. 1. One who hacks vision, in the sense of an
Artificial Intelligence researcher working on the problem of getting
computers to `see' things using TV cameras. (There isn't any problem in
sending information from a TV camera to a computer. The problem is, how can
the computer be programmed to make use of the camera information? see
{SMOP}.) 2. [IBM] One who reads the outside literature.